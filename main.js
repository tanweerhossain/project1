(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Functor = require("../Data.Functor");
var Data_Semigroup = require("../Data.Semigroup");
var Alt = function (Functor0, alt) {
    this.Functor0 = Functor0;
    this.alt = alt;
};
var altArray = new Alt(function () {
    return Data_Functor.functorArray;
}, Data_Semigroup.append(Data_Semigroup.semigroupArray));
var alt = function (dict) {
    return dict.alt;
};
module.exports = {
    Alt: Alt, 
    alt: alt, 
    altArray: altArray
};

},{"../Data.Functor":76,"../Data.Semigroup":114}],2:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Plus = require("../Control.Plus");
var Data_Functor = require("../Data.Functor");
var Alternative = function (Applicative0, Plus1) {
    this.Applicative0 = Applicative0;
    this.Plus1 = Plus1;
};
var alternativeArray = new Alternative(function () {
    return Control_Applicative.applicativeArray;
}, function () {
    return Control_Plus.plusArray;
});
module.exports = {
    Alternative: Alternative, 
    alternativeArray: alternativeArray
};

},{"../Control.Alt":1,"../Control.Applicative":3,"../Control.Apply":5,"../Control.Plus":34,"../Data.Functor":76}],3:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Apply = require("../Control.Apply");
var Data_Functor = require("../Data.Functor");
var Data_Unit = require("../Data.Unit");
var Applicative = function (Apply0, pure) {
    this.Apply0 = Apply0;
    this.pure = pure;
};
var pure = function (dict) {
    return dict.pure;
};
var unless = function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (!v) {
                return v1;
            };
            if (v) {
                return pure(dictApplicative)(Data_Unit.unit);
            };
            throw new Error("Failed pattern match at Control.Applicative line 62, column 1 - line 62, column 65: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var when = function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v) {
                return v1;
            };
            if (!v) {
                return pure(dictApplicative)(Data_Unit.unit);
            };
            throw new Error("Failed pattern match at Control.Applicative line 57, column 1 - line 57, column 63: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var liftA1 = function (dictApplicative) {
    return function (f) {
        return function (a) {
            return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
        };
    };
};
var applicativeFn = new Applicative(function () {
    return Control_Apply.applyFn;
}, function (x) {
    return function (v) {
        return x;
    };
});
var applicativeArray = new Applicative(function () {
    return Control_Apply.applyArray;
}, function (x) {
    return [ x ];
});
module.exports = {
    Applicative: Applicative, 
    liftA1: liftA1, 
    pure: pure, 
    unless: unless, 
    when: when, 
    applicativeFn: applicativeFn, 
    applicativeArray: applicativeArray
};

},{"../Control.Apply":5,"../Data.Functor":76,"../Data.Unit":137}],4:[function(require,module,exports){
"use strict";

exports.arrayApply = function (fs) {
  return function (xs) {
    var result = [];
    var n = 0;
    for (var i = 0, l = fs.length; i < l; i++) {
      for (var j = 0, k = xs.length; j < k; j++) {
        result[n++] = fs[i](xs[j]);
      }
    }
    return result;
  };
};

},{}],5:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Control_Category = require("../Control.Category");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Apply = function (Functor0, apply) {
    this.Functor0 = Functor0;
    this.apply = apply;
};
var applyFn = new Apply(function () {
    return Data_Functor.functorFn;
}, function (f) {
    return function (g) {
        return function (x) {
            return f(x)(g(x));
        };
    };
});
var applyArray = new Apply(function () {
    return Data_Functor.functorArray;
}, $foreign.arrayApply);
var apply = function (dict) {
    return dict.apply;
};
var applyFirst = function (dictApply) {
    return function (a) {
        return function (b) {
            return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"])(a))(b);
        };
    };
};
var applySecond = function (dictApply) {
    return function (a) {
        return function (b) {
            return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(a))(b);
        };
    };
};
var lift2 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
            };
        };
    };
};
var lift3 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c);
                };
            };
        };
    };
};
var lift4 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d);
                    };
                };
            };
        };
    };
};
var lift5 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return apply(dictApply)(apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d))(e);
                        };
                    };
                };
            };
        };
    };
};
module.exports = {
    Apply: Apply, 
    apply: apply, 
    applyFirst: applyFirst, 
    applySecond: applySecond, 
    lift2: lift2, 
    lift3: lift3, 
    lift4: lift4, 
    lift5: lift5, 
    applyFn: applyFn, 
    applyArray: applyArray
};

},{"../Control.Category":10,"../Data.Function":73,"../Data.Functor":76,"./foreign":4}],6:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Biapply = require("../Control.Biapply");
var Biapplicative = function (Biapply0, bipure) {
    this.Biapply0 = Biapply0;
    this.bipure = bipure;
};
var bipure = function (dict) {
    return dict.bipure;
};
module.exports = {
    Biapplicative: Biapplicative, 
    bipure: bipure
};

},{"../Control.Biapply":7}],7:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Category = require("../Control.Category");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Function = require("../Data.Function");
var Biapply = function (Bifunctor0, biapply) {
    this.Bifunctor0 = Bifunctor0;
    this.biapply = biapply;
};
var biapply = function (dict) {
    return dict.biapply;
};
var biapplyFirst = function (dictBiapply) {
    return function (a) {
        return function (b) {
            return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(Data_Function["const"](Control_Category.id(Control_Category.categoryFn))))(a))(b);
        };
    };
};
var biapplySecond = function (dictBiapply) {
    return function (a) {
        return function (b) {
            return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(Data_Function["const"])(Data_Function["const"]))(a))(b);
        };
    };
};
var bilift2 = function (dictBiapply) {
    return function (f) {
        return function (g) {
            return function (a) {
                return function (b) {
                    return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(f)(g))(a))(b);
                };
            };
        };
    };
};
var bilift3 = function (dictBiapply) {
    return function (f) {
        return function (g) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return biapply(dictBiapply)(biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply.Bifunctor0())(f)(g))(a))(b))(c);
                    };
                };
            };
        };
    };
};
module.exports = {
    Biapply: Biapply, 
    biapply: biapply, 
    biapplyFirst: biapplyFirst, 
    biapplySecond: biapplySecond, 
    bilift2: bilift2, 
    bilift3: bilift3
};

},{"../Control.Category":10,"../Data.Bifunctor":47,"../Data.Function":73}],8:[function(require,module,exports){
"use strict";

exports.arrayBind = function (arr) {
  return function (f) {
    var result = [];
    for (var i = 0, l = arr.length; i < l; i++) {
      Array.prototype.push.apply(result, f(arr[i]));
    }
    return result;
  };
};

},{}],9:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Unit = require("../Data.Unit");
var Bind = function (Apply0, bind) {
    this.Apply0 = Apply0;
    this.bind = bind;
};
var Discard = function (discard) {
    this.discard = discard;
};
var discard = function (dict) {
    return dict.discard;
};
var bindFn = new Bind(function () {
    return Control_Apply.applyFn;
}, function (m) {
    return function (f) {
        return function (x) {
            return f(m(x))(x);
        };
    };
});
var bindArray = new Bind(function () {
    return Control_Apply.applyArray;
}, $foreign.arrayBind);
var bind = function (dict) {
    return dict.bind;
};
var bindFlipped = function (dictBind) {
    return Data_Function.flip(bind(dictBind));
};
var composeKleisliFlipped = function (dictBind) {
    return function (f) {
        return function (g) {
            return function (a) {
                return bindFlipped(dictBind)(f)(g(a));
            };
        };
    };
};
var composeKleisli = function (dictBind) {
    return function (f) {
        return function (g) {
            return function (a) {
                return bind(dictBind)(f(a))(g);
            };
        };
    };
};
var discardUnit = new Discard(function (dictBind) {
    return bind(dictBind);
});
var ifM = function (dictBind) {
    return function (cond) {
        return function (t) {
            return function (f) {
                return bind(dictBind)(cond)(function (cond$prime) {
                    if (cond$prime) {
                        return t;
                    };
                    return f;
                });
            };
        };
    };
};
var join = function (dictBind) {
    return function (m) {
        return bind(dictBind)(m)(Control_Category.id(Control_Category.categoryFn));
    };
};
module.exports = {
    Bind: Bind, 
    Discard: Discard, 
    bind: bind, 
    bindFlipped: bindFlipped, 
    composeKleisli: composeKleisli, 
    composeKleisliFlipped: composeKleisliFlipped, 
    discard: discard, 
    ifM: ifM, 
    join: join, 
    bindFn: bindFn, 
    bindArray: bindArray, 
    discardUnit: discardUnit
};

},{"../Control.Applicative":3,"../Control.Apply":5,"../Control.Category":10,"../Data.Function":73,"../Data.Functor":76,"../Data.Unit":137,"./foreign":8}],10:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Category = function (Semigroupoid0, id) {
    this.Semigroupoid0 = Semigroupoid0;
    this.id = id;
};
var id = function (dict) {
    return dict.id;
};
var categoryFn = new Category(function () {
    return Control_Semigroupoid.semigroupoidFn;
}, function (x) {
    return x;
});
module.exports = {
    Category: Category, 
    id: id, 
    categoryFn: categoryFn
};

},{"../Control.Semigroupoid":35}],11:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Extend = require("../Control.Extend");
var Data_Functor = require("../Data.Functor");
var Comonad = function (Extend0, extract) {
    this.Extend0 = Extend0;
    this.extract = extract;
};
var extract = function (dict) {
    return dict.extract;
};
module.exports = {
    Comonad: Comonad, 
    extract: extract
};

},{"../Control.Extend":13,"../Data.Functor":76}],12:[function(require,module,exports){
"use strict";

exports.arrayExtend = function(f) {
  return function(xs) {
    return xs.map(function (_, i, xs) {
      return f(xs.slice(i));
    });
  };
};

},{}],13:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Control_Category = require("../Control.Category");
var Data_Functor = require("../Data.Functor");
var Data_Semigroup = require("../Data.Semigroup");
var Extend = function (Functor0, extend) {
    this.Functor0 = Functor0;
    this.extend = extend;
};
var extendFn = function (dictSemigroup) {
    return new Extend(function () {
        return Data_Functor.functorFn;
    }, function (f) {
        return function (g) {
            return function (w) {
                return f(function (w$prime) {
                    return g(Data_Semigroup.append(dictSemigroup)(w)(w$prime));
                });
            };
        };
    });
};
var extendArray = new Extend(function () {
    return Data_Functor.functorArray;
}, $foreign.arrayExtend);
var extend = function (dict) {
    return dict.extend;
};
var extendFlipped = function (dictExtend) {
    return function (w) {
        return function (f) {
            return extend(dictExtend)(f)(w);
        };
    };
};
var duplicate = function (dictExtend) {
    return extend(dictExtend)(Control_Category.id(Control_Category.categoryFn));
};
var composeCoKleisliFlipped = function (dictExtend) {
    return function (f) {
        return function (g) {
            return function (w) {
                return f(extend(dictExtend)(g)(w));
            };
        };
    };
};
var composeCoKleisli = function (dictExtend) {
    return function (f) {
        return function (g) {
            return function (w) {
                return g(extend(dictExtend)(f)(w));
            };
        };
    };
};
module.exports = {
    Extend: Extend, 
    composeCoKleisli: composeCoKleisli, 
    composeCoKleisliFlipped: composeCoKleisliFlipped, 
    duplicate: duplicate, 
    extend: extend, 
    extendFlipped: extendFlipped, 
    extendFn: extendFn, 
    extendArray: extendArray
};

},{"../Control.Category":10,"../Data.Functor":76,"../Data.Semigroup":114,"./foreign":12}],14:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Unit = require("../Data.Unit");
var Lazy = function (defer) {
    this.defer = defer;
};
var lazyUnit = new Lazy(function (v) {
    return Data_Unit.unit;
});
var lazyFn = new Lazy(function (f) {
    return function (x) {
        return f(Data_Unit.unit)(x);
    };
});
var defer = function (dict) {
    return dict.defer;
};
var fix = function (dictLazy) {
    return function (f) {
        return defer(dictLazy)(function (v) {
            return f(fix(dictLazy)(f));
        });
    };
};
module.exports = {
    Lazy: Lazy, 
    defer: defer, 
    fix: fix, 
    lazyFn: lazyFn, 
    lazyUnit: lazyUnit
};

},{"../Data.Unit":137}],15:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Prelude = require("../Prelude");
var MonadCont = function (Monad0, callCC) {
    this.Monad0 = Monad0;
    this.callCC = callCC;
};
var callCC = function (dict) {
    return dict.callCC;
};
module.exports = {
    MonadCont: MonadCont, 
    callCC: callCC
};

},{"../Prelude":228}],16:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var MonadEff = function (Monad0, liftEff) {
    this.Monad0 = Monad0;
    this.liftEff = liftEff;
};
var monadEffEff = new MonadEff(function () {
    return Control_Monad_Eff.monadEff;
}, Control_Category.id(Control_Category.categoryFn));
var liftEff = function (dict) {
    return dict.liftEff;
};
module.exports = {
    MonadEff: MonadEff, 
    liftEff: liftEff, 
    monadEffEff: monadEffEff
};

},{"../Control.Category":10,"../Control.Monad":31,"../Control.Monad.Eff":20}],17:[function(require,module,exports){
"use strict";

exports.unsafeCoerceEff = function (f) {
  return f;
};

},{}],18:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var unsafePerformEff = function ($0) {
    return Control_Monad_Eff.runPure($foreign.unsafeCoerceEff($0));
};
module.exports = {
    unsafePerformEff: unsafePerformEff, 
    unsafeCoerceEff: $foreign.unsafeCoerceEff
};

},{"../Control.Monad.Eff":20,"../Control.Semigroupoid":35,"./foreign":17}],19:[function(require,module,exports){
"use strict";

exports.pureE = function (a) {
  return function () {
    return a;
  };
};

exports.bindE = function (a) {
  return function (f) {
    return function () {
      return f(a())();
    };
  };
};

exports.runPure = function (f) {
  return f();
};

exports.untilE = function (f) {
  return function () {
    while (!f());
    return {};
  };
};

exports.whileE = function (f) {
  return function (a) {
    return function () {
      while (f()) {
        a();
      }
      return {};
    };
  };
};

exports.forE = function (lo) {
  return function (hi) {
    return function (f) {
      return function () {
        for (var i = lo; i < hi; i++) {
          f(i)();
        }
      };
    };
  };
};

exports.foreachE = function (as) {
  return function (f) {
    return function () {
      for (var i = 0, l = as.length; i < l; i++) {
        f(as[i])();
      }
    };
  };
};

},{}],20:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Data_Functor = require("../Data.Functor");
var Data_Unit = require("../Data.Unit");
var monadEff = new Control_Monad.Monad(function () {
    return applicativeEff;
}, function () {
    return bindEff;
});
var bindEff = new Control_Bind.Bind(function () {
    return applyEff;
}, $foreign.bindE);
var applyEff = new Control_Apply.Apply(function () {
    return functorEff;
}, Control_Monad.ap(monadEff));
var applicativeEff = new Control_Applicative.Applicative(function () {
    return applyEff;
}, $foreign.pureE);
var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
module.exports = {
    functorEff: functorEff, 
    applyEff: applyEff, 
    applicativeEff: applicativeEff, 
    bindEff: bindEff, 
    monadEff: monadEff, 
    forE: $foreign.forE, 
    foreachE: $foreign.foreachE, 
    runPure: $foreign.runPure, 
    untilE: $foreign.untilE, 
    whileE: $foreign.whileE
};

},{"../Control.Applicative":3,"../Control.Apply":5,"../Control.Bind":9,"../Control.Monad":31,"../Data.Functor":76,"../Data.Unit":137,"./foreign":19}],21:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var MonadThrow = function (Monad0, throwError) {
    this.Monad0 = Monad0;
    this.throwError = throwError;
};
var MonadError = function (MonadThrow0, catchError) {
    this.MonadThrow0 = MonadThrow0;
    this.catchError = catchError;
};
var throwError = function (dict) {
    return dict.throwError;
};
var monadThrowMaybe = new MonadThrow(function () {
    return Data_Maybe.monadMaybe;
}, Data_Function["const"](Data_Maybe.Nothing.value));
var monadThrowEither = new MonadThrow(function () {
    return Data_Either.monadEither;
}, Data_Either.Left.create);
var monadErrorMaybe = new MonadError(function () {
    return monadThrowMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Data_Maybe.Nothing) {
            return v1(Data_Unit.unit);
        };
        if (v instanceof Data_Maybe.Just) {
            return new Data_Maybe.Just(v.value0);
        };
        throw new Error("Failed pattern match at Control.Monad.Error.Class line 76, column 1 - line 76, column 50: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var monadErrorEither = new MonadError(function () {
    return monadThrowEither;
}, function (v) {
    return function (v1) {
        if (v instanceof Data_Either.Left) {
            return v1(v.value0);
        };
        if (v instanceof Data_Either.Right) {
            return new Data_Either.Right(v.value0);
        };
        throw new Error("Failed pattern match at Control.Monad.Error.Class line 69, column 1 - line 69, column 53: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var catchError = function (dict) {
    return dict.catchError;
};
var catchJust = function (dictMonadError) {
    return function (p) {
        return function (act) {
            return function (handler) {
                var handle = function (e) {
                    var v = p(e);
                    if (v instanceof Data_Maybe.Nothing) {
                        return throwError(dictMonadError.MonadThrow0())(e);
                    };
                    if (v instanceof Data_Maybe.Just) {
                        return handler(v.value0);
                    };
                    throw new Error("Failed pattern match at Control.Monad.Error.Class line 54, column 5 - line 56, column 26: " + [ v.constructor.name ]);
                };
                return catchError(dictMonadError)(act)(handle);
            };
        };
    };
};
var $$try = function (dictMonadError) {
    return function (a) {
        return catchError(dictMonadError)(Data_Functor.map(((((dictMonadError.MonadThrow0()).Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Right.create)(a))(function ($21) {
            return Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0())(Data_Either.Left.create($21));
        });
    };
};
var withResource = function (dictMonadError) {
    return function (acquire) {
        return function (release) {
            return function (kleisli) {
                return Control_Bind.bind(((dictMonadError.MonadThrow0()).Monad0()).Bind1())(acquire)(function (v) {
                    return Control_Bind.bind(((dictMonadError.MonadThrow0()).Monad0()).Bind1())($$try(dictMonadError)(kleisli(v)))(function (v1) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(((dictMonadError.MonadThrow0()).Monad0()).Bind1())(release(v))(function () {
                            return Data_Either.either(throwError(dictMonadError.MonadThrow0()))(Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0()))(v1);
                        });
                    });
                });
            };
        };
    };
};
module.exports = {
    MonadError: MonadError, 
    MonadThrow: MonadThrow, 
    catchError: catchError, 
    catchJust: catchJust, 
    throwError: throwError, 
    "try": $$try, 
    withResource: withResource, 
    monadThrowEither: monadThrowEither, 
    monadErrorEither: monadErrorEither, 
    monadThrowMaybe: monadThrowMaybe, 
    monadErrorMaybe: monadErrorMaybe
};

},{"../Control.Applicative":3,"../Control.Bind":9,"../Control.Semigroupoid":35,"../Data.Either":56,"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Unit":137,"../Prelude":228}],22:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var ExceptT = function (x) {
    return x;
};
var withExceptT = function (dictFunctor) {
    return function (f) {
        return function (v) {
            var mapLeft = function (v1) {
                return function (v2) {
                    if (v2 instanceof Data_Either.Right) {
                        return new Data_Either.Right(v2.value0);
                    };
                    if (v2 instanceof Data_Either.Left) {
                        return new Data_Either.Left(v1(v2.value0));
                    };
                    throw new Error("Failed pattern match at Control.Monad.Except.Trans line 44, column 3 - line 44, column 32: " + [ v1.constructor.name, v2.constructor.name ]);
                };
            };
            return ExceptT(Data_Functor.map(dictFunctor)(mapLeft(f))(v));
        };
    };
};
var runExceptT = function (v) {
    return v;
};
var newtypeExceptT = new Data_Newtype.Newtype(function (n) {
    return n;
}, ExceptT);
var monadTransExceptT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function (m) {
        return Control_Bind.bind(dictMonad.Bind1())(m)(function (v) {
            return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v));
        });
    };
});
var mapExceptT = function (f) {
    return function (v) {
        return f(v);
    };
};
var functorExceptT = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
    });
};
var except = function (dictApplicative) {
    return function ($96) {
        return ExceptT(Control_Applicative.pure(dictApplicative)($96));
    };
};
var monadExceptT = function (dictMonad) {
    return new Control_Monad.Monad(function () {
        return applicativeExceptT(dictMonad);
    }, function () {
        return bindExceptT(dictMonad);
    });
};
var bindExceptT = function (dictMonad) {
    return new Control_Bind.Bind(function () {
        return applyExceptT(dictMonad);
    }, function (v) {
        return function (k) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function ($97) {
                return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($97));
            })(function (a) {
                var v1 = k(a);
                return v1;
            }));
        };
    });
};
var applyExceptT = function (dictMonad) {
    return new Control_Apply.Apply(function () {
        return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
    }, Control_Monad.ap(monadExceptT(dictMonad)));
};
var applicativeExceptT = function (dictMonad) {
    return new Control_Applicative.Applicative(function () {
        return applyExceptT(dictMonad);
    }, function ($98) {
        return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($98)));
    });
};
var monadAskExceptT = function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
        return monadExceptT(dictMonadAsk.Monad0());
    }, Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};
var monadReaderExceptT = function (dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadAskExceptT(dictMonadReader.MonadAsk0());
    }, function (f) {
        return mapExceptT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
    });
};
var monadContExceptT = function (dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadExceptT(dictMonadCont.Monad0());
    }, function (f) {
        return ExceptT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
            var v = f(function (a) {
                return ExceptT(c(new Data_Either.Right(a)));
            });
            return v;
        }));
    });
};
var monadEffExceptT = function (dictMonadEff) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadExceptT(dictMonadEff.Monad0());
    }, function ($99) {
        return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadEff.Monad0())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($99));
    });
};
var monadRecExceptT = function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadExceptT(dictMonadRec.Monad0());
    }, function (f) {
        return function ($100) {
            return ExceptT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
                return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())((function () {
                    var v = f(a);
                    return v;
                })())(function (m$prime) {
                    return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())((function () {
                        if (m$prime instanceof Data_Either.Left) {
                            return new Control_Monad_Rec_Class.Done(new Data_Either.Left(m$prime.value0));
                        };
                        if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Loop) {
                            return new Control_Monad_Rec_Class.Loop(m$prime.value0.value0);
                        };
                        if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Done) {
                            return new Control_Monad_Rec_Class.Done(new Data_Either.Right(m$prime.value0.value0));
                        };
                        throw new Error("Failed pattern match at Control.Monad.Except.Trans line 76, column 14 - line 79, column 43: " + [ m$prime.constructor.name ]);
                    })());
                });
            })($100));
        };
    });
};
var monadStateExceptT = function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadExceptT(dictMonadState.Monad0());
    }, function (f) {
        return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
    });
};
var monadTellExceptT = function (dictMonadTell) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
        return monadExceptT(dictMonadTell.Monad0());
    }, function ($101) {
        return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadTell.Monad0())(Control_Monad_Writer_Class.tell(dictMonadTell)($101));
    });
};
var monadWriterExceptT = function (dictMonadWriter) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
        return monadTellExceptT(dictMonadWriter.MonadTell0());
    }, mapExceptT(function (m) {
        return Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
            return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(Data_Functor.map(Data_Either.functorEither)(function (r) {
                return new Data_Tuple.Tuple(r, v.value1);
            })(v.value0));
        });
    }), mapExceptT(function (m) {
        return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(m)(function (v) {
            return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())((function () {
                if (v instanceof Data_Either.Left) {
                    return new Data_Tuple.Tuple(new Data_Either.Left(v.value0), Control_Category.id(Control_Category.categoryFn));
                };
                if (v instanceof Data_Either.Right) {
                    return new Data_Tuple.Tuple(new Data_Either.Right(v.value0.value0), v.value0.value1);
                };
                throw new Error("Failed pattern match at Control.Monad.Except.Trans line 138, column 10 - line 140, column 44: " + [ v.constructor.name ]);
            })());
        }));
    }));
};
var monadThrowExceptT = function (dictMonad) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
        return monadExceptT(dictMonad);
    }, function ($102) {
        return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($102)));
    });
};
var monadErrorExceptT = function (dictMonad) {
    return new Control_Monad_Error_Class.MonadError(function () {
        return monadThrowExceptT(dictMonad);
    }, function (v) {
        return function (k) {
            return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function (a) {
                var v1 = k(a);
                return v1;
            })(function ($103) {
                return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($103));
            }));
        };
    });
};
var altExceptT = function (dictSemigroup) {
    return function (dictMonad) {
        return new Control_Alt.Alt(function () {
            return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
        }, function (v) {
            return function (v1) {
                return Control_Bind.bind(dictMonad.Bind1())(v)(function (v2) {
                    if (v2 instanceof Data_Either.Right) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v2.value0));
                    };
                    if (v2 instanceof Data_Either.Left) {
                        return Control_Bind.bind(dictMonad.Bind1())(v1)(function (v3) {
                            if (v3 instanceof Data_Either.Right) {
                                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v3.value0));
                            };
                            if (v3 instanceof Data_Either.Left) {
                                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(v2.value0)(v3.value0)));
                            };
                            throw new Error("Failed pattern match at Control.Monad.Except.Trans line 88, column 9 - line 90, column 49: " + [ v3.constructor.name ]);
                        });
                    };
                    throw new Error("Failed pattern match at Control.Monad.Except.Trans line 84, column 5 - line 90, column 49: " + [ v2.constructor.name ]);
                });
            };
        });
    };
};
var plusExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Plus.Plus(function () {
            return altExceptT(dictMonoid.Semigroup0())(dictMonad);
        }, Control_Monad_Error_Class.throwError(monadThrowExceptT(dictMonad))(Data_Monoid.mempty(dictMonoid)));
    };
};
var alternativeExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Alternative.Alternative(function () {
            return applicativeExceptT(dictMonad);
        }, function () {
            return plusExceptT(dictMonoid)(dictMonad);
        });
    };
};
var monadZeroExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_MonadZero.MonadZero(function () {
            return alternativeExceptT(dictMonoid)(dictMonad);
        }, function () {
            return monadExceptT(dictMonad);
        });
    };
};
var monadPlusExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_MonadPlus.MonadPlus(function () {
            return monadZeroExceptT(dictMonoid)(dictMonad);
        });
    };
};
module.exports = {
    ExceptT: ExceptT, 
    except: except, 
    mapExceptT: mapExceptT, 
    runExceptT: runExceptT, 
    withExceptT: withExceptT, 
    newtypeExceptT: newtypeExceptT, 
    functorExceptT: functorExceptT, 
    applyExceptT: applyExceptT, 
    applicativeExceptT: applicativeExceptT, 
    bindExceptT: bindExceptT, 
    monadExceptT: monadExceptT, 
    monadRecExceptT: monadRecExceptT, 
    altExceptT: altExceptT, 
    plusExceptT: plusExceptT, 
    alternativeExceptT: alternativeExceptT, 
    monadPlusExceptT: monadPlusExceptT, 
    monadZeroExceptT: monadZeroExceptT, 
    monadTransExceptT: monadTransExceptT, 
    monadEffExceptT: monadEffExceptT, 
    monadContExceptT: monadContExceptT, 
    monadThrowExceptT: monadThrowExceptT, 
    monadErrorExceptT: monadErrorExceptT, 
    monadAskExceptT: monadAskExceptT, 
    monadReaderExceptT: monadReaderExceptT, 
    monadStateExceptT: monadStateExceptT, 
    monadTellExceptT: monadTellExceptT, 
    monadWriterExceptT: monadWriterExceptT
};

},{"../Control.Alt":1,"../Control.Alternative":2,"../Control.Applicative":3,"../Control.Apply":5,"../Control.Bind":9,"../Control.Category":10,"../Control.Monad":31,"../Control.Monad.Cont.Class":15,"../Control.Monad.Eff.Class":16,"../Control.Monad.Error.Class":21,"../Control.Monad.Reader.Class":24,"../Control.Monad.Rec.Class":25,"../Control.Monad.State.Class":28,"../Control.Monad.Trans.Class":29,"../Control.Monad.Writer.Class":30,"../Control.MonadPlus":32,"../Control.MonadZero":33,"../Control.Plus":34,"../Control.Semigroupoid":35,"../Data.Either":56,"../Data.Function":73,"../Data.Functor":76,"../Data.Monoid":98,"../Data.Newtype":100,"../Data.Semigroup":114,"../Data.Tuple":133,"../Prelude":228}],23:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Identity = require("../Data.Identity");
var Data_Newtype = require("../Data.Newtype");
var Prelude = require("../Prelude");
var withExcept = Control_Monad_Except_Trans.withExceptT(Data_Identity.functorIdentity);
var runExcept = function ($0) {
    return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Except_Trans.runExceptT($0));
};
var mapExcept = function (f) {
    return Control_Monad_Except_Trans.mapExceptT(function ($1) {
        return Data_Identity.Identity(f(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($1)));
    });
};
module.exports = {
    mapExcept: mapExcept, 
    runExcept: runExcept, 
    withExcept: withExcept
};

},{"../Control.Monad.Error.Class":21,"../Control.Monad.Except.Trans":22,"../Control.Semigroupoid":35,"../Data.Either":56,"../Data.Identity":81,"../Data.Newtype":100,"../Prelude":228}],24:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Functor = require("../Data.Functor");
var Prelude = require("../Prelude");
var MonadAsk = function (Monad0, ask) {
    this.Monad0 = Monad0;
    this.ask = ask;
};
var MonadReader = function (MonadAsk0, local) {
    this.MonadAsk0 = MonadAsk0;
    this.local = local;
};
var monadAskFun = new MonadAsk(function () {
    return Control_Monad.monadFn;
}, Control_Category.id(Control_Category.categoryFn));
var monadReaderFun = new MonadReader(function () {
    return monadAskFun;
}, Control_Semigroupoid.composeFlipped(Control_Semigroupoid.semigroupoidFn));
var local = function (dict) {
    return dict.local;
};
var ask = function (dict) {
    return dict.ask;
};
var asks = function (dictMonadAsk) {
    return function (f) {
        return Data_Functor.map((((dictMonadAsk.Monad0()).Bind1()).Apply0()).Functor0())(f)(ask(dictMonadAsk));
    };
};
module.exports = {
    MonadAsk: MonadAsk, 
    MonadReader: MonadReader, 
    ask: ask, 
    asks: asks, 
    local: local, 
    monadAskFun: monadAskFun, 
    monadReaderFun: monadReaderFun
};

},{"../Control.Category":10,"../Control.Monad":31,"../Control.Semigroupoid":35,"../Data.Functor":76,"../Prelude":228}],25:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Unsafe = require("../Control.Monad.Eff.Unsafe");
var Control_Monad_ST = require("../Control.Monad.ST");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Either = require("../Data.Either");
var Data_Functor = require("../Data.Functor");
var Data_Identity = require("../Data.Identity");
var Data_Maybe = require("../Data.Maybe");
var Data_Unit = require("../Data.Unit");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Loop = (function () {
    function Loop(value0) {
        this.value0 = value0;
    };
    Loop.create = function (value0) {
        return new Loop(value0);
    };
    return Loop;
})();
var Done = (function () {
    function Done(value0) {
        this.value0 = value0;
    };
    Done.create = function (value0) {
        return new Done(value0);
    };
    return Done;
})();
var MonadRec = function (Monad0, tailRecM) {
    this.Monad0 = Monad0;
    this.tailRecM = tailRecM;
};
var tailRecM = function (dict) {
    return dict.tailRecM;
};
var tailRecM2 = function (dictMonadRec) {
    return function (f) {
        return function (a) {
            return function (b) {
                return tailRecM(dictMonadRec)(function (o) {
                    return f(o.a)(o.b);
                })({
                    a: a, 
                    b: b
                });
            };
        };
    };
};
var tailRecM3 = function (dictMonadRec) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return tailRecM(dictMonadRec)(function (o) {
                        return f(o.a)(o.b)(o.c);
                    })({
                        a: a, 
                        b: b, 
                        c: c
                    });
                };
            };
        };
    };
};
var tailRecEff = function (f) {
    return function (a) {
        var fromDone = function (v) {
            var __unused = function (dictPartial1) {
                return function ($dollar16) {
                    return $dollar16;
                };
            };
            return __unused()((function () {
                if (v instanceof Done) {
                    return v.value0;
                };
                throw new Error("Failed pattern match at Control.Monad.Rec.Class line 141, column 28 - line 141, column 42: " + [ v.constructor.name ]);
            })());
        };
        var f$prime = function ($52) {
            return Control_Monad_Eff_Unsafe.unsafeCoerceEff(f($52));
        };
        return function __do() {
            var v = Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Control_Monad_ST.newSTRef)(f$prime(a))();
            (function () {
                while (!(function __do() {
                    var v1 = v.value;
                    if (v1 instanceof Loop) {
                        var v2 = f$prime(v1.value0)();
                        var v3 = v.value = v2;
                        return false;
                    };
                    if (v1 instanceof Done) {
                        return true;
                    };
                    throw new Error("Failed pattern match at Control.Monad.Rec.Class line 130, column 5 - line 135, column 26: " + [ v1.constructor.name ]);
                })()) {

                };
                return {};
            })();
            return Data_Functor.map(Control_Monad_Eff.functorEff)(fromDone)(Control_Monad_ST.readSTRef(v))();
        };
    };
};
var tailRec = function (f) {
    var go = function ($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Loop) {
                $copy_v = f(v.value0);
                return;
            };
            if (v instanceof Done) {
                $tco_done = true;
                return v.value0;
            };
            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 96, column 3 - line 96, column 25: " + [ v.constructor.name ]);
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    return function ($53) {
        return go(f($53));
    };
};
var monadRecMaybe = new MonadRec(function () {
    return Data_Maybe.monadMaybe;
}, function (f) {
    return function (a0) {
        var g = function (v) {
            if (v instanceof Data_Maybe.Nothing) {
                return new Done(Data_Maybe.Nothing.value);
            };
            if (v instanceof Data_Maybe.Just && v.value0 instanceof Loop) {
                return new Loop(f(v.value0.value0));
            };
            if (v instanceof Data_Maybe.Just && v.value0 instanceof Done) {
                return new Done(new Data_Maybe.Just(v.value0.value0));
            };
            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 120, column 7 - line 120, column 31: " + [ v.constructor.name ]);
        };
        return tailRec(g)(f(a0));
    };
});
var monadRecIdentity = new MonadRec(function () {
    return Data_Identity.monadIdentity;
}, function (f) {
    var runIdentity = function (v) {
        return v;
    };
    return function ($54) {
        return Data_Identity.Identity(tailRec(function ($55) {
            return runIdentity(f($55));
        })($54));
    };
});
var monadRecFunction = new MonadRec(function () {
    return Control_Monad.monadFn;
}, function (f) {
    return function (a0) {
        return function (e) {
            return tailRec(function (a) {
                return f(a)(e);
            })(a0);
        };
    };
});
var monadRecEither = new MonadRec(function () {
    return Data_Either.monadEither;
}, function (f) {
    return function (a0) {
        var g = function (v) {
            if (v instanceof Data_Either.Left) {
                return new Done(new Data_Either.Left(v.value0));
            };
            if (v instanceof Data_Either.Right && v.value0 instanceof Loop) {
                return new Loop(f(v.value0.value0));
            };
            if (v instanceof Data_Either.Right && v.value0 instanceof Done) {
                return new Done(new Data_Either.Right(v.value0.value0));
            };
            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 112, column 7 - line 112, column 33: " + [ v.constructor.name ]);
        };
        return tailRec(g)(f(a0));
    };
});
var monadRecEff = new MonadRec(function () {
    return Control_Monad_Eff.monadEff;
}, tailRecEff);
var functorStep = new Data_Functor.Functor(function (f) {
    return function (v) {
        if (v instanceof Loop) {
            return new Loop(v.value0);
        };
        if (v instanceof Done) {
            return new Done(f(v.value0));
        };
        throw new Error("Failed pattern match at Control.Monad.Rec.Class line 28, column 1 - line 28, column 41: " + [ f.constructor.name, v.constructor.name ]);
    };
});
var forever = function (dictMonadRec) {
    return function (ma) {
        return tailRecM(dictMonadRec)(function (u) {
            return Data_Functor.voidRight((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(new Loop(u))(ma);
        })(Data_Unit.unit);
    };
};
var bifunctorStep = new Data_Bifunctor.Bifunctor(function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Loop) {
                return new Loop(v(v2.value0));
            };
            if (v2 instanceof Done) {
                return new Done(v1(v2.value0));
            };
            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 32, column 1 - line 32, column 41: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
});
module.exports = {
    Loop: Loop, 
    Done: Done, 
    MonadRec: MonadRec, 
    forever: forever, 
    tailRec: tailRec, 
    tailRecM: tailRecM, 
    tailRecM2: tailRecM2, 
    tailRecM3: tailRecM3, 
    functorStep: functorStep, 
    bifunctorStep: bifunctorStep, 
    monadRecIdentity: monadRecIdentity, 
    monadRecEff: monadRecEff, 
    monadRecFunction: monadRecFunction, 
    monadRecEither: monadRecEither, 
    monadRecMaybe: monadRecMaybe
};

},{"../Control.Applicative":3,"../Control.Bind":9,"../Control.Monad":31,"../Control.Monad.Eff":20,"../Control.Monad.Eff.Unsafe":18,"../Control.Monad.ST":27,"../Control.Semigroupoid":35,"../Data.Bifunctor":47,"../Data.Either":56,"../Data.Functor":76,"../Data.Identity":81,"../Data.Maybe":91,"../Data.Unit":137,"../Partial.Unsafe":225,"../Prelude":228}],26:[function(require,module,exports){
"use strict";

exports.newSTRef = function (val) {
  return function () {
    return { value: val };
  };
};

exports.readSTRef = function (ref) {
  return function () {
    return ref.value;
  };
};

exports.modifySTRef = function (ref) {
  return function (f) {
    return function () {
      return ref.value = f(ref.value); // eslint-disable-line no-return-assign
    };
  };
};

exports.writeSTRef = function (ref) {
  return function (a) {
    return function () {
      return ref.value = a; // eslint-disable-line no-return-assign
    };
  };
};

exports.runST = function (f) {
  return f;
};

},{}],27:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var pureST = function (st) {
    return Control_Monad_Eff.runPure($foreign.runST(st));
};
module.exports = {
    pureST: pureST, 
    modifySTRef: $foreign.modifySTRef, 
    newSTRef: $foreign.newSTRef, 
    readSTRef: $foreign.readSTRef, 
    runST: $foreign.runST, 
    writeSTRef: $foreign.writeSTRef
};

},{"../Control.Monad.Eff":20,"./foreign":26}],28:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var MonadState = function (Monad0, state) {
    this.Monad0 = Monad0;
    this.state = state;
};
var state = function (dict) {
    return dict.state;
};
var put = function (dictMonadState) {
    return function (s) {
        return state(dictMonadState)(function (v) {
            return new Data_Tuple.Tuple(Data_Unit.unit, s);
        });
    };
};
var modify = function (dictMonadState) {
    return function (f) {
        return state(dictMonadState)(function (s) {
            return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
        });
    };
};
var gets = function (dictMonadState) {
    return function (f) {
        return state(dictMonadState)(function (s) {
            return new Data_Tuple.Tuple(f(s), s);
        });
    };
};
var get = function (dictMonadState) {
    return state(dictMonadState)(function (s) {
        return new Data_Tuple.Tuple(s, s);
    });
};
module.exports = {
    MonadState: MonadState, 
    get: get, 
    gets: gets, 
    modify: modify, 
    put: put, 
    state: state
};

},{"../Data.Tuple":133,"../Data.Unit":137,"../Prelude":228}],29:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Prelude = require("../Prelude");
var MonadTrans = function (lift) {
    this.lift = lift;
};
var lift = function (dict) {
    return dict.lift;
};
module.exports = {
    MonadTrans: MonadTrans, 
    lift: lift
};

},{"../Prelude":228}],30:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Data_Function = require("../Data.Function");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var MonadTell = function (Monad0, tell) {
    this.Monad0 = Monad0;
    this.tell = tell;
};
var MonadWriter = function (MonadTell0, listen, pass) {
    this.MonadTell0 = MonadTell0;
    this.listen = listen;
    this.pass = pass;
};
var tell = function (dict) {
    return dict.tell;
};
var pass = function (dict) {
    return dict.pass;
};
var listen = function (dict) {
    return dict.listen;
};
var listens = function (dictMonadWriter) {
    return function (f) {
        return function (m) {
            return Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(listen(dictMonadWriter)(m))(function (v) {
                return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(new Data_Tuple.Tuple(v.value0, f(v.value1)));
            });
        };
    };
};
var censor = function (dictMonadWriter) {
    return function (f) {
        return function (m) {
            return pass(dictMonadWriter)(Control_Bind.bind(((dictMonadWriter.MonadTell0()).Monad0()).Bind1())(m)(function (v) {
                return Control_Applicative.pure(((dictMonadWriter.MonadTell0()).Monad0()).Applicative0())(new Data_Tuple.Tuple(v, f));
            }));
        };
    };
};
module.exports = {
    MonadTell: MonadTell, 
    MonadWriter: MonadWriter, 
    censor: censor, 
    listen: listen, 
    listens: listens, 
    pass: pass, 
    tell: tell
};

},{"../Control.Applicative":3,"../Control.Bind":9,"../Data.Function":73,"../Data.Tuple":133,"../Prelude":228}],31:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Data_Functor = require("../Data.Functor");
var Data_Unit = require("../Data.Unit");
var Monad = function (Applicative0, Bind1) {
    this.Applicative0 = Applicative0;
    this.Bind1 = Bind1;
};
var whenM = function (dictMonad) {
    return function (mb) {
        return function (m) {
            return Control_Bind.bind(dictMonad.Bind1())(mb)(function (v) {
                return Control_Applicative.when(dictMonad.Applicative0())(v)(m);
            });
        };
    };
};
var unlessM = function (dictMonad) {
    return function (mb) {
        return function (m) {
            return Control_Bind.bind(dictMonad.Bind1())(mb)(function (v) {
                return Control_Applicative.unless(dictMonad.Applicative0())(v)(m);
            });
        };
    };
};
var monadFn = new Monad(function () {
    return Control_Applicative.applicativeFn;
}, function () {
    return Control_Bind.bindFn;
});
var monadArray = new Monad(function () {
    return Control_Applicative.applicativeArray;
}, function () {
    return Control_Bind.bindArray;
});
var liftM1 = function (dictMonad) {
    return function (f) {
        return function (a) {
            return Control_Bind.bind(dictMonad.Bind1())(a)(function (v) {
                return Control_Applicative.pure(dictMonad.Applicative0())(f(v));
            });
        };
    };
};
var ap = function (dictMonad) {
    return function (f) {
        return function (a) {
            return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                });
            });
        };
    };
};
module.exports = {
    Monad: Monad, 
    ap: ap, 
    liftM1: liftM1, 
    unlessM: unlessM, 
    whenM: whenM, 
    monadFn: monadFn, 
    monadArray: monadArray
};

},{"../Control.Applicative":3,"../Control.Apply":5,"../Control.Bind":9,"../Data.Functor":76,"../Data.Unit":137}],32:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Functor = require("../Data.Functor");
var MonadPlus = function (MonadZero0) {
    this.MonadZero0 = MonadZero0;
};
var monadPlusArray = new MonadPlus(function () {
    return Control_MonadZero.monadZeroArray;
});
module.exports = {
    MonadPlus: MonadPlus, 
    monadPlusArray: monadPlusArray
};

},{"../Control.Alt":1,"../Control.Alternative":2,"../Control.Applicative":3,"../Control.Apply":5,"../Control.Bind":9,"../Control.Monad":31,"../Control.MonadZero":33,"../Control.Plus":34,"../Data.Functor":76}],33:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad = require("../Control.Monad");
var Control_Plus = require("../Control.Plus");
var Data_Functor = require("../Data.Functor");
var Data_Unit = require("../Data.Unit");
var MonadZero = function (Alternative1, Monad0) {
    this.Alternative1 = Alternative1;
    this.Monad0 = Monad0;
};
var monadZeroArray = new MonadZero(function () {
    return Control_Alternative.alternativeArray;
}, function () {
    return Control_Monad.monadArray;
});
var guard = function (dictMonadZero) {
    return function (v) {
        if (v) {
            return Control_Applicative.pure((dictMonadZero.Alternative1()).Applicative0())(Data_Unit.unit);
        };
        if (!v) {
            return Control_Plus.empty((dictMonadZero.Alternative1()).Plus1());
        };
        throw new Error("Failed pattern match at Control.MonadZero line 54, column 1 - line 54, column 52: " + [ v.constructor.name ]);
    };
};
module.exports = {
    MonadZero: MonadZero, 
    guard: guard, 
    monadZeroArray: monadZeroArray
};

},{"../Control.Alt":1,"../Control.Alternative":2,"../Control.Applicative":3,"../Control.Apply":5,"../Control.Bind":9,"../Control.Monad":31,"../Control.Plus":34,"../Data.Functor":76,"../Data.Unit":137}],34:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Alt = require("../Control.Alt");
var Data_Functor = require("../Data.Functor");
var Plus = function (Alt0, empty) {
    this.Alt0 = Alt0;
    this.empty = empty;
};
var plusArray = new Plus(function () {
    return Control_Alt.altArray;
}, [  ]);
var empty = function (dict) {
    return dict.empty;
};
module.exports = {
    Plus: Plus, 
    empty: empty, 
    plusArray: plusArray
};

},{"../Control.Alt":1,"../Data.Functor":76}],35:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Semigroupoid = function (compose) {
    this.compose = compose;
};
var semigroupoidFn = new Semigroupoid(function (f) {
    return function (g) {
        return function (x) {
            return f(g(x));
        };
    };
});
var compose = function (dict) {
    return dict.compose;
};
var composeFlipped = function (dictSemigroupoid) {
    return function (f) {
        return function (g) {
            return compose(dictSemigroupoid)(g)(f);
        };
    };
};
module.exports = {
    Semigroupoid: Semigroupoid, 
    compose: compose, 
    composeFlipped: composeFlipped, 
    semigroupoidFn: semigroupoidFn
};

},{}],36:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_ST = require("../Control.Monad.ST");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array_ST = require("../Data.Array.ST");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Semiring = require("../Data.Semiring");
var Prelude = require("../Prelude");
var Iterator = (function () {
    function Iterator(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Iterator.create = function (value0) {
        return function (value1) {
            return new Iterator(value0, value1);
        };
    };
    return Iterator;
})();
var peek = function (v) {
    return function __do() {
        var v1 = Control_Monad_ST.readSTRef(v.value1)();
        return v.value0(v1);
    };
};
var next = function (v) {
    return function __do() {
        var v1 = Control_Monad_ST.readSTRef(v.value1)();
        var v2 = Control_Monad_ST.modifySTRef(v.value1)(function (v2) {
            return v2 + 1 | 0;
        })();
        return v.value0(v1);
    };
};
var pushWhile = function (p) {
    return function (iter) {
        return function (array) {
            return function __do() {
                var v = Control_Monad_ST.newSTRef(false)();
                while (Data_Functor.map(Control_Monad_Eff.functorEff)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST.readSTRef(v))()) {
                    (function __do() {
                        var v1 = peek(iter)();
                        if (v1 instanceof Data_Maybe.Just && p(v1.value0)) {
                            var v2 = Data_Array_ST.pushSTArray(array)(v1.value0)();
                            return Data_Functor["void"](Control_Monad_Eff.functorEff)(next(iter))();
                        };
                        return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_ST.writeSTRef(v)(true))();
                    })();
                };
                return {};
            };
        };
    };
};
var pushAll = pushWhile(Data_Function["const"](true));
var iterator = function (f) {
    return Data_Functor.map(Control_Monad_Eff.functorEff)(Iterator.create(f))(Control_Monad_ST.newSTRef(0));
};
var iterate = function (iter) {
    return function (f) {
        return function __do() {
            var v = Control_Monad_ST.newSTRef(false)();
            while (Data_Functor.map(Control_Monad_Eff.functorEff)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST.readSTRef(v))()) {
                (function __do() {
                    var v1 = next(iter)();
                    if (v1 instanceof Data_Maybe.Just) {
                        return f(v1.value0)();
                    };
                    if (v1 instanceof Data_Maybe.Nothing) {
                        return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_ST.writeSTRef(v)(true))();
                    };
                    throw new Error("Failed pattern match at Data.Array.ST.Iterator line 39, column 5 - line 41, column 46: " + [ v1.constructor.name ]);
                })();
            };
            return {};
        };
    };
};
var exhausted = function ($27) {
    return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Maybe.isNothing)(peek($27));
};
module.exports = {
    exhausted: exhausted, 
    iterate: iterate, 
    iterator: iterator, 
    next: next, 
    peek: peek, 
    pushAll: pushAll, 
    pushWhile: pushWhile
};

},{"../Control.Applicative":3,"../Control.Bind":9,"../Control.Monad.Eff":20,"../Control.Monad.ST":27,"../Control.Semigroupoid":35,"../Data.Array.ST":38,"../Data.Function":73,"../Data.Functor":76,"../Data.HeytingAlgebra":80,"../Data.Maybe":91,"../Data.Semiring":116,"../Prelude":228}],37:[function(require,module,exports){
"use strict";

exports.runSTArray = function (f) {
  return f;
};

exports.emptySTArray = function () {
  return [];
};

exports.peekSTArrayImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return function () {
          return i >= 0 && i < xs.length ? just(xs[i]) : nothing;
        };
      };
    };
  };
};

exports.pokeSTArray = function (xs) {
  return function (i) {
    return function (a) {
      return function () {
        var ret = i >= 0 && i < xs.length;
        if (ret) xs[i] = a;
        return ret;
      };
    };
  };
};

exports.pushAllSTArray = function (xs) {
  return function (as) {
    return function () {
      return xs.push.apply(xs, as);
    };
  };
};

exports.spliceSTArray = function (xs) {
  return function (i) {
    return function (howMany) {
      return function (bs) {
        return function () {
          return xs.splice.apply(xs, [i, howMany].concat(bs));
        };
      };
    };
  };
};

exports.copyImpl = function (xs) {
  return function () {
    return xs.slice();
  };
};

exports.toAssocArray = function (xs) {
  return function () {
    var n = xs.length;
    var as = new Array(n);
    for (var i = 0; i < n; i++) as[i] = { value: xs[i], index: i };
    return as;
  };
};

},{}],38:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_ST = require("../Control.Monad.ST");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Maybe = require("../Data.Maybe");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var unsafeFreeze = function ($7) {
    return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Unsafe_Coerce.unsafeCoerce($7));
};
var thaw = $foreign.copyImpl;
var withArray = function (f) {
    return function (xs) {
        return function __do() {
            var v = thaw(xs)();
            var v1 = f(v)();
            return unsafeFreeze(v)();
        };
    };
};
var pushSTArray = function (arr) {
    return function (a) {
        return $foreign.pushAllSTArray(arr)([ a ]);
    };
};
var peekSTArray = $foreign.peekSTArrayImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var modifySTArray = function (xs) {
    return function (i) {
        return function (f) {
            return function __do() {
                var v = peekSTArray(xs)(i)();
                if (v instanceof Data_Maybe.Just) {
                    return $foreign.pokeSTArray(xs)(i)(f(v.value0))();
                };
                if (v instanceof Data_Maybe.Nothing) {
                    return false;
                };
                throw new Error("Failed pattern match at Data.Array.ST line 120, column 3 - line 122, column 26: " + [ v.constructor.name ]);
            };
        };
    };
};
var freeze = $foreign.copyImpl;
module.exports = {
    freeze: freeze, 
    modifySTArray: modifySTArray, 
    peekSTArray: peekSTArray, 
    pushSTArray: pushSTArray, 
    thaw: thaw, 
    unsafeFreeze: unsafeFreeze, 
    withArray: withArray, 
    emptySTArray: $foreign.emptySTArray, 
    pokeSTArray: $foreign.pokeSTArray, 
    pushAllSTArray: $foreign.pushAllSTArray, 
    runSTArray: $foreign.runSTArray, 
    spliceSTArray: $foreign.spliceSTArray, 
    toAssocArray: $foreign.toAssocArray
};

},{"../Control.Applicative":3,"../Control.Bind":9,"../Control.Monad.Eff":20,"../Control.Monad.ST":27,"../Control.Semigroupoid":35,"../Data.Maybe":91,"../Prelude":228,"../Unsafe.Coerce":233,"./foreign":37}],39:[function(require,module,exports){
"use strict";

//------------------------------------------------------------------------------
// Array creation --------------------------------------------------------------
//------------------------------------------------------------------------------

exports.range = function (start) {
  return function (end) {
    var step = start > end ? -1 : 1;
    var result = [];
    var i = start, n = 0;
    while (i !== end) {
      result[n++] = i;
      i += step;
    }
    result[n] = i;
    return result;
  };
};

var replicate = function (count) {
  return function (value) {
    if (count < 1) {
      return [];
    }
    var result = new Array(count);
    return result.fill(value);
  };
};

var replicatePolyfill = function (count) {
  return function (value) {
    var result = [];
    var n = 0;
    for (var i = 0; i < count; i++) {
      result[n++] = value;
    }
    return result;
  };
};

// In browsers that have Array.prototype.fill we use it, as it's faster.
exports.replicate = typeof Array.prototype.fill === "function" ?
    replicate :
    replicatePolyfill;

exports.fromFoldableImpl = (function () {
  // jshint maxparams: 2
  function Cons(head, tail) {
    this.head = head;
    this.tail = tail;
  }
  var emptyList = {};

  function curryCons(head) {
    return function (tail) {
      return new Cons(head, tail);
    };
  }

  function listToArray(list) {
    var result = [];
    var count = 0;
    var xs = list;
    while (xs !== emptyList) {
      result[count++] = xs.head;
      xs = xs.tail;
    }
    return result;
  }

  return function (foldr) {
    return function (xs) {
      return listToArray(foldr(curryCons)(emptyList)(xs));
    };
  };
})();

//------------------------------------------------------------------------------
// Array size ------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.length = function (xs) {
  return xs.length;
};

//------------------------------------------------------------------------------
// Extending arrays ------------------------------------------------------------
//------------------------------------------------------------------------------

exports.cons = function (e) {
  return function (l) {
    return [e].concat(l);
  };
};

exports.snoc = function (l) {
  return function (e) {
    var l1 = l.slice();
    l1.push(e);
    return l1;
  };
};

//------------------------------------------------------------------------------
// Non-indexed reads -----------------------------------------------------------
//------------------------------------------------------------------------------

exports["uncons'"] = function (empty) {
  return function (next) {
    return function (xs) {
      return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
    };
  };
};

//------------------------------------------------------------------------------
// Indexed operations ----------------------------------------------------------
//------------------------------------------------------------------------------

exports.indexImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
      };
    };
  };
};

exports.findIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = 0, l = xs.length; i < l; i++) {
          if (f(xs[i])) return just(i);
        }
        return nothing;
      };
    };
  };
};

exports.findLastIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = xs.length - 1; i >= 0; i--) {
          if (f(xs[i])) return just(i);
        }
        return nothing;
      };
    };
  };
};

exports._insertAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i > l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 0, a);
          return just(l1);
        };
      };
    };
  };
};

exports._deleteAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (l) {
        if (i < 0 || i >= l.length) return nothing;
        var l1 = l.slice();
        l1.splice(i, 1);
        return just(l1);
      };
    };
  };
};

exports._updateAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1[i] = a;
          return just(l1);
        };
      };
    };
  };
};

//------------------------------------------------------------------------------
// Transformations -------------------------------------------------------------
//------------------------------------------------------------------------------

exports.reverse = function (l) {
  return l.slice().reverse();
};

exports.concat = function (xss) {
  if (xss.length <= 10000) {
    // This method is faster, but it crashes on big arrays.
    // So we use it when can and fallback to simple variant otherwise.
    return Array.prototype.concat.apply([], xss);
  }

  var result = [];
  for (var i = 0, l = xss.length; i < l; i++) {
    var xs = xss[i];
    for (var j = 0, m = xs.length; j < m; j++) {
      result.push(xs[j]);
    }
  }
  return result;
};

exports.filter = function (f) {
  return function (xs) {
    return xs.filter(f);
  };
};

exports.partition = function (f) {
  return function (xs) {
    var yes = [];
    var no  = [];
    for (var i = 0; i < xs.length; i++) {
      var x = xs[i];
      if (f(x))
        yes.push(x);
      else
        no.push(x);
    }
    return { yes: yes, no: no };
  };
};

//------------------------------------------------------------------------------
// Sorting ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.sortImpl = function (f) {
  return function (l) {
    // jshint maxparams: 2
    return l.slice().sort(function (x, y) {
      return f(x)(y);
    });
  };
};

//------------------------------------------------------------------------------
// Subarrays -------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.slice = function (s) {
  return function (e) {
    return function (l) {
      return l.slice(s, e);
    };
  };
};

exports.take = function (n) {
  return function (l) {
    return n < 1 ? [] : l.slice(0, n);
  };
};

exports.drop = function (n) {
  return function (l) {
    return n < 1 ? l : l.slice(n);
  };
};

//------------------------------------------------------------------------------
// Zipping ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.zipWith = function (f) {
  return function (xs) {
    return function (ys) {
      var l = xs.length < ys.length ? xs.length : ys.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(xs[i])(ys[i]);
      }
      return result;
    };
  };
};

//------------------------------------------------------------------------------
// Partial ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.unsafeIndexImpl = function (xs) {
  return function (n) {
    return xs[n];
  };
};

},{}],40:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Monad_ST = require("../Control.Monad.ST");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array_ST = require("../Data.Array.ST");
var Data_Array_ST_Iterator = require("../Data.Array.ST.Iterator");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var zipWithA = function (dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictApplicative)($foreign.zipWith(f)(xs)(ys));
            };
        };
    };
};
var zip = $foreign.zipWith(Data_Tuple.Tuple.create);
var updateAtIndices = function (dictFoldable) {
    return function (us) {
        return function (xs) {
            return Control_Monad_ST.pureST(Data_Array_ST.withArray(function (res) {
                return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(dictFoldable)(Data_Tuple.uncurry(Data_Array_ST.pokeSTArray(res)))(us);
            })(xs));
        };
    };
};
var updateAt = $foreign._updateAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var unsafeIndex = function (dictPartial) {
    return $foreign.unsafeIndexImpl;
};
var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
    return function (xs) {
        return new Data_Maybe.Just({
            head: x, 
            tail: xs
        });
    };
});
var toUnfoldable = function (dictUnfoldable) {
    return function (xs) {
        var len = $foreign.length(xs);
        var f = function (i) {
            if (i < len) {
                return new Data_Maybe.Just(new Data_Tuple.Tuple(unsafeIndex()(xs)(i), i + 1 | 0));
            };
            if (Data_Boolean.otherwise) {
                return Data_Maybe.Nothing.value;
            };
            throw new Error("Failed pattern match at Data.Array line 137, column 3 - line 139, column 26: " + [ i.constructor.name ]);
        };
        return Data_Unfoldable.unfoldr(dictUnfoldable)(f)(0);
    };
};
var tail = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (v) {
    return function (xs) {
        return new Data_Maybe.Just(xs);
    };
});
var sortBy = function (comp) {
    return function (xs) {
        var comp$prime = function (x) {
            return function (y) {
                var v = comp(x)(y);
                if (v instanceof Data_Ordering.GT) {
                    return 1;
                };
                if (v instanceof Data_Ordering.EQ) {
                    return 0;
                };
                if (v instanceof Data_Ordering.LT) {
                    return -1 | 0;
                };
                throw new Error("Failed pattern match at Data.Array line 475, column 15 - line 480, column 1: " + [ v.constructor.name ]);
            };
        };
        return $foreign.sortImpl(comp$prime)(xs);
    };
};
var sortWith = function (dictOrd) {
    return function (f) {
        return sortBy(Data_Ord.comparing(dictOrd)(f));
    };
};
var sort = function (dictOrd) {
    return function (xs) {
        return sortBy(Data_Ord.compare(dictOrd))(xs);
    };
};
var singleton = function (a) {
    return [ a ];
};
var $$null = function (xs) {
    return $foreign.length(xs) === 0;
};
var nubBy = function (eq) {
    return function (xs) {
        var v = uncons(xs);
        if (v instanceof Data_Maybe.Just) {
            return $foreign.cons(v.value0.head)(nubBy(eq)($foreign.filter(function (y) {
                return !eq(v.value0.head)(y);
            })(v.value0.tail)));
        };
        if (v instanceof Data_Maybe.Nothing) {
            return [  ];
        };
        throw new Error("Failed pattern match at Data.Array line 583, column 3 - line 585, column 18: " + [ v.constructor.name ]);
    };
};
var nub = function (dictEq) {
    return nubBy(Data_Eq.eq(dictEq));
};
var modifyAtIndices = function (dictFoldable) {
    return function (is) {
        return function (f) {
            return function (xs) {
                return Control_Monad_ST.pureST(Data_Array_ST.withArray(function (res) {
                    return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(dictFoldable)(function (i) {
                        return Data_Array_ST.modifySTArray(res)(i)(f);
                    })(is);
                })(xs));
            };
        };
    };
};
var mapWithIndex = function (f) {
    return function (xs) {
        return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1 | 0))(xs);
    };
};
var some = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())($foreign.cons)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                return many(dictAlternative)(dictLazy)(v);
            }));
        };
    };
};
var many = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())([  ]));
        };
    };
};
var insertAt = $foreign._insertAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var init = function (xs) {
    if ($$null(xs)) {
        return Data_Maybe.Nothing.value;
    };
    if (Data_Boolean.otherwise) {
        return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1 | 0)(xs));
    };
    throw new Error("Failed pattern match at Data.Array line 249, column 1 - line 249, column 45: " + [ xs.constructor.name ]);
};
var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var last = function (xs) {
    return index(xs)($foreign.length(xs) - 1 | 0);
};
var unsnoc = function (xs) {
    return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
        return function (v1) {
            return {
                init: v, 
                last: v1
            };
        };
    })(init(xs)))(last(xs));
};
var modifyAt = function (i) {
    return function (f) {
        return function (xs) {
            var go = function (x) {
                return updateAt(i)(f(x))(xs);
            };
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
        };
    };
};
var span = function (p) {
    return function (arr) {
        var go = function ($copy_i) {
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(i) {
                var v = index(arr)(i);
                if (v instanceof Data_Maybe.Just) {
                    var $64 = p(v.value0);
                    if ($64) {
                        $copy_i = i + 1 | 0;
                        return;
                    };
                    $tco_done = true;
                    return new Data_Maybe.Just(i);
                };
                if (v instanceof Data_Maybe.Nothing) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at Data.Array line 541, column 5 - line 543, column 25: " + [ v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($copy_i);
            };
            return $tco_result;
        };
        var breakIndex = go(0);
        if (breakIndex instanceof Data_Maybe.Just && breakIndex.value0 === 0) {
            return {
                init: [  ], 
                rest: arr
            };
        };
        if (breakIndex instanceof Data_Maybe.Just) {
            return {
                init: $foreign.slice(0)(breakIndex.value0)(arr), 
                rest: $foreign.slice(breakIndex.value0)($foreign.length(arr))(arr)
            };
        };
        if (breakIndex instanceof Data_Maybe.Nothing) {
            return {
                init: arr, 
                rest: [  ]
            };
        };
        throw new Error("Failed pattern match at Data.Array line 528, column 3 - line 534, column 30: " + [ breakIndex.constructor.name ]);
    };
};
var takeWhile = function (p) {
    return function (xs) {
        return (span(p)(xs)).init;
    };
};
var unzip = function (xs) {
    return Control_Monad_ST.pureST(function __do() {
        var v = Data_Array_ST.emptySTArray();
        var v1 = Data_Array_ST.emptySTArray();
        var v2 = Data_Array_ST_Iterator.iterator(function (v2) {
            return index(xs)(v2);
        })();
        Data_Array_ST_Iterator.iterate(v2)(function (v3) {
            return function __do() {
                Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_Array_ST.pushSTArray(v)(v3.value0))();
                return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_Array_ST.pushSTArray(v1)(v3.value1))();
            };
        })();
        var v3 = Data_Array_ST.unsafeFreeze(v)();
        var v4 = Data_Array_ST.unsafeFreeze(v1)();
        return new Data_Tuple.Tuple(v3, v4);
    });
};
var head = function (xs) {
    return index(xs)(0);
};
var groupBy = function (op) {
    return function (xs) {
        return Control_Monad_ST.pureST(function __do() {
            var v = Data_Array_ST.emptySTArray();
            var v1 = Data_Array_ST_Iterator.iterator(function (v1) {
                return index(xs)(v1);
            })();
            Data_Array_ST_Iterator.iterate(v1)(function (x) {
                return Data_Functor["void"](Control_Monad_Eff.functorEff)(function __do() {
                    var v2 = Data_Array_ST.emptySTArray();
                    Data_Array_ST_Iterator.pushWhile(op(x))(v1)(v2)();
                    var v3 = Data_Array_ST.unsafeFreeze(v2)();
                    return Data_Array_ST.pushSTArray(v)(new Data_NonEmpty.NonEmpty(x, v3))();
                });
            })();
            return Data_Array_ST.unsafeFreeze(v)();
        });
    };
};
var group = function (dictEq) {
    return function (xs) {
        return groupBy(Data_Eq.eq(dictEq))(xs);
    };
};
var group$prime = function (dictOrd) {
    return function ($93) {
        return group(dictOrd.Eq0())(sort(dictOrd)($93));
    };
};
var fromFoldable = function (dictFoldable) {
    return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
};
var foldRecM = function (dictMonadRec) {
    return function (f) {
        return function (a) {
            return function (array) {
                var go = function (res) {
                    return function (i) {
                        if (i >= $foreign.length(array)) {
                            return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(res));
                        };
                        if (Data_Boolean.otherwise) {
                            return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(f(res)(unsafeIndex()(array)(i)))(function (v) {
                                return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop({
                                    a: v, 
                                    b: i + 1 | 0
                                }));
                            });
                        };
                        throw new Error("Failed pattern match at Data.Array line 693, column 3 - line 697, column 42: " + [ res.constructor.name, i.constructor.name ]);
                    };
                };
                return Control_Monad_Rec_Class.tailRecM2(dictMonadRec)(go)(a)(0);
            };
        };
    };
};
var foldM = function (dictMonad) {
    return function (f) {
        return function (a) {
            return $foreign["uncons'"](function (v) {
                return Control_Applicative.pure(dictMonad.Applicative0())(a);
            })(function (b) {
                return function (bs) {
                    return Control_Bind.bind(dictMonad.Bind1())(f(a)(b))(function (a$prime) {
                        return foldM(dictMonad)(f)(a$prime)(bs);
                    });
                };
            });
        };
    };
};
var findLastIndex = $foreign.findLastIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var insertBy = function (cmp) {
    return function (x) {
        return function (ys) {
            var i = Data_Maybe.maybe(0)(function (v) {
                return v + 1 | 0;
            })(findLastIndex(function (y) {
                return Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(x)(y))(Data_Ordering.GT.value);
            })(ys));
            return Data_Maybe.fromJust()(insertAt(i)(x)(ys));
        };
    };
};
var insert = function (dictOrd) {
    return insertBy(Data_Ord.compare(dictOrd));
};
var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var intersectBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return $foreign.filter(function (x) {
                return Data_Maybe.isJust(findIndex(eq(x))(ys));
            })(xs);
        };
    };
};
var intersect = function (dictEq) {
    return intersectBy(Data_Eq.eq(dictEq));
};
var elemLastIndex = function (dictEq) {
    return function (x) {
        return findLastIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var elemIndex = function (dictEq) {
    return function (x) {
        return findIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var dropWhile = function (p) {
    return function (xs) {
        return (span(p)(xs)).rest;
    };
};
var deleteAt = $foreign._deleteAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var deleteBy = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2.length === 0) {
                return [  ];
            };
            return Data_Maybe.maybe(v2)(function (i) {
                return Data_Maybe.fromJust()(deleteAt(i)(v2));
            })(findIndex(v(v1))(v2));
        };
    };
};
var unionBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return Data_Semigroup.append(Data_Semigroup.semigroupArray)(xs)(Data_Foldable.foldl(Data_Foldable.foldableArray)(Data_Function.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
        };
    };
};
var union = function (dictEq) {
    return unionBy(Data_Eq.eq(dictEq));
};
var $$delete = function (dictEq) {
    return deleteBy(Data_Eq.eq(dictEq));
};
var difference = function (dictEq) {
    return Data_Foldable.foldr(Data_Foldable.foldableArray)($$delete(dictEq));
};
var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
var mapMaybe = function (f) {
    return concatMap(function ($94) {
        return Data_Maybe.maybe([  ])(singleton)(f($94));
    });
};
var filterA = function (dictApplicative) {
    return function (p) {
        return function ($95) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(mapMaybe(function (v) {
                if (v.value1) {
                    return new Data_Maybe.Just(v.value0);
                };
                return Data_Maybe.Nothing.value;
            }))(Data_Traversable.traverse(Data_Traversable.traversableArray)(dictApplicative)(function (x) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Tuple.Tuple.create(x))(p(x));
            })($95));
        };
    };
};
var catMaybes = mapMaybe(Control_Category.id(Control_Category.categoryFn));
var alterAt = function (i) {
    return function (f) {
        return function (xs) {
            var go = function (x) {
                var v = f(x);
                if (v instanceof Data_Maybe.Nothing) {
                    return deleteAt(i)(xs);
                };
                if (v instanceof Data_Maybe.Just) {
                    return updateAt(i)(v.value0)(xs);
                };
                throw new Error("Failed pattern match at Data.Array line 390, column 10 - line 392, column 32: " + [ v.constructor.name ]);
            };
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
        };
    };
};
module.exports = {
    alterAt: alterAt, 
    catMaybes: catMaybes, 
    concatMap: concatMap, 
    "delete": $$delete, 
    deleteAt: deleteAt, 
    deleteBy: deleteBy, 
    difference: difference, 
    dropWhile: dropWhile, 
    elemIndex: elemIndex, 
    elemLastIndex: elemLastIndex, 
    filterA: filterA, 
    findIndex: findIndex, 
    findLastIndex: findLastIndex, 
    foldM: foldM, 
    foldRecM: foldRecM, 
    fromFoldable: fromFoldable, 
    group: group, 
    "group'": group$prime, 
    groupBy: groupBy, 
    head: head, 
    index: index, 
    init: init, 
    insert: insert, 
    insertAt: insertAt, 
    insertBy: insertBy, 
    intersect: intersect, 
    intersectBy: intersectBy, 
    last: last, 
    many: many, 
    mapMaybe: mapMaybe, 
    mapWithIndex: mapWithIndex, 
    modifyAt: modifyAt, 
    modifyAtIndices: modifyAtIndices, 
    nub: nub, 
    nubBy: nubBy, 
    "null": $$null, 
    singleton: singleton, 
    some: some, 
    sort: sort, 
    sortBy: sortBy, 
    sortWith: sortWith, 
    span: span, 
    tail: tail, 
    takeWhile: takeWhile, 
    toUnfoldable: toUnfoldable, 
    uncons: uncons, 
    union: union, 
    unionBy: unionBy, 
    unsafeIndex: unsafeIndex, 
    unsnoc: unsnoc, 
    unzip: unzip, 
    updateAt: updateAt, 
    updateAtIndices: updateAtIndices, 
    zip: zip, 
    zipWithA: zipWithA, 
    concat: $foreign.concat, 
    cons: $foreign.cons, 
    drop: $foreign.drop, 
    filter: $foreign.filter, 
    length: $foreign.length, 
    partition: $foreign.partition, 
    range: $foreign.range, 
    replicate: $foreign.replicate, 
    reverse: $foreign.reverse, 
    slice: $foreign.slice, 
    snoc: $foreign.snoc, 
    take: $foreign.take, 
    zipWith: $foreign.zipWith
};

},{"../Control.Alt":1,"../Control.Alternative":2,"../Control.Applicative":3,"../Control.Apply":5,"../Control.Bind":9,"../Control.Category":10,"../Control.Lazy":14,"../Control.Monad.Eff":20,"../Control.Monad.Rec.Class":25,"../Control.Monad.ST":27,"../Control.Semigroupoid":35,"../Data.Array.ST":38,"../Data.Array.ST.Iterator":36,"../Data.Boolean":49,"../Data.Eq":58,"../Data.Foldable":63,"../Data.Function":73,"../Data.Functor":76,"../Data.HeytingAlgebra":80,"../Data.Maybe":91,"../Data.NonEmpty":101,"../Data.Ord":107,"../Data.Ordering":108,"../Data.Ring":110,"../Data.Semigroup":114,"../Data.Semiring":116,"../Data.Traversable":130,"../Data.Tuple":133,"../Data.Unfoldable":135,"../Partial.Unsafe":225,"../Prelude":228,"./foreign":39}],41:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifunctor_Clown = require("../Data.Bifunctor.Clown");
var Data_Bifunctor_Flip = require("../Data.Bifunctor.Flip");
var Data_Bifunctor_Joker = require("../Data.Bifunctor.Joker");
var Data_Bifunctor_Product = require("../Data.Bifunctor.Product");
var Data_Bifunctor_Wrap = require("../Data.Bifunctor.Wrap");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Monoid = require("../Data.Monoid");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Endo = require("../Data.Monoid.Endo");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Bifoldable = function (bifoldMap, bifoldl, bifoldr) {
    this.bifoldMap = bifoldMap;
    this.bifoldl = bifoldl;
    this.bifoldr = bifoldr;
};
var bifoldr = function (dict) {
    return dict.bifoldr;
};
var bitraverse_ = function (dictBifoldable) {
    return function (dictApplicative) {
        return function (f) {
            return function (g) {
                return bifoldr(dictBifoldable)(function ($97) {
                    return Control_Apply.applySecond(dictApplicative.Apply0())(f($97));
                })(function ($98) {
                    return Control_Apply.applySecond(dictApplicative.Apply0())(g($98));
                })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
            };
        };
    };
};
var bifor_ = function (dictBifoldable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return function (g) {
                    return bitraverse_(dictBifoldable)(dictApplicative)(f)(g)(t);
                };
            };
        };
    };
};
var bisequence_ = function (dictBifoldable) {
    return function (dictApplicative) {
        return bitraverse_(dictBifoldable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn));
    };
};
var bifoldl = function (dict) {
    return dict.bifoldl;
};
var bifoldableJoker = function (dictFoldable) {
    return new Bifoldable(function (dictMonoid) {
        return function (v) {
            return function (r) {
                return function (v1) {
                    return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(r)(v1);
                };
            };
        };
    }, function (v) {
        return function (r) {
            return function (u) {
                return function (v1) {
                    return Data_Foldable.foldl(dictFoldable)(r)(u)(v1);
                };
            };
        };
    }, function (v) {
        return function (r) {
            return function (u) {
                return function (v1) {
                    return Data_Foldable.foldr(dictFoldable)(r)(u)(v1);
                };
            };
        };
    });
};
var bifoldableClown = function (dictFoldable) {
    return new Bifoldable(function (dictMonoid) {
        return function (l) {
            return function (v) {
                return function (v1) {
                    return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(l)(v1);
                };
            };
        };
    }, function (l) {
        return function (v) {
            return function (u) {
                return function (v1) {
                    return Data_Foldable.foldl(dictFoldable)(l)(u)(v1);
                };
            };
        };
    }, function (l) {
        return function (v) {
            return function (u) {
                return function (v1) {
                    return Data_Foldable.foldr(dictFoldable)(l)(u)(v1);
                };
            };
        };
    });
};
var bifoldMapDefaultR = function (dictBifoldable) {
    return function (dictMonoid) {
        return function (f) {
            return function (g) {
                return bifoldr(dictBifoldable)(function ($99) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(f($99));
                })(function ($100) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(g($100));
                })(Data_Monoid.mempty(dictMonoid));
            };
        };
    };
};
var bifoldMapDefaultL = function (dictBifoldable) {
    return function (dictMonoid) {
        return function (f) {
            return function (g) {
                return bifoldl(dictBifoldable)(function (m) {
                    return function (a) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(m)(f(a));
                    };
                })(function (m) {
                    return function (b) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(m)(g(b));
                    };
                })(Data_Monoid.mempty(dictMonoid));
            };
        };
    };
};
var bifoldMap = function (dict) {
    return dict.bifoldMap;
};
var bifoldableFlip = function (dictBifoldable) {
    return new Bifoldable(function (dictMonoid) {
        return function (r) {
            return function (l) {
                return function (v) {
                    return bifoldMap(dictBifoldable)(dictMonoid)(l)(r)(v);
                };
            };
        };
    }, function (r) {
        return function (l) {
            return function (u) {
                return function (v) {
                    return bifoldl(dictBifoldable)(l)(r)(u)(v);
                };
            };
        };
    }, function (r) {
        return function (l) {
            return function (u) {
                return function (v) {
                    return bifoldr(dictBifoldable)(l)(r)(u)(v);
                };
            };
        };
    });
};
var bifoldableWrap = function (dictBifoldable) {
    return new Bifoldable(function (dictMonoid) {
        return function (l) {
            return function (r) {
                return function (v) {
                    return bifoldMap(dictBifoldable)(dictMonoid)(l)(r)(v);
                };
            };
        };
    }, function (l) {
        return function (r) {
            return function (u) {
                return function (v) {
                    return bifoldl(dictBifoldable)(l)(r)(u)(v);
                };
            };
        };
    }, function (l) {
        return function (r) {
            return function (u) {
                return function (v) {
                    return bifoldr(dictBifoldable)(l)(r)(u)(v);
                };
            };
        };
    });
};
var bifoldlDefault = function (dictBifoldable) {
    return function (f) {
        return function (g) {
            return function (z) {
                return function (p) {
                    return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(Data_Newtype.unwrap(Data_Monoid_Dual.newtypeDual)(bifoldMap(dictBifoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function ($101) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(f)($101)));
                    })(function ($102) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(g)($102)));
                    })(p)))(z);
                };
            };
        };
    };
};
var bifoldrDefault = function (dictBifoldable) {
    return function (f) {
        return function (g) {
            return function (z) {
                return function (p) {
                    return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(bifoldMap(dictBifoldable)(Data_Monoid_Endo.monoidEndo)(function ($103) {
                        return Data_Monoid_Endo.Endo(f($103));
                    })(function ($104) {
                        return Data_Monoid_Endo.Endo(g($104));
                    })(p))(z);
                };
            };
        };
    };
};
var bifoldableProduct = function (dictBifoldable) {
    return function (dictBifoldable1) {
        return new Bifoldable(function (dictMonoid) {
            return function (l) {
                return function (r) {
                    return function (v) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(bifoldMap(dictBifoldable)(dictMonoid)(l)(r)(v.value0))(bifoldMap(dictBifoldable1)(dictMonoid)(l)(r)(v.value1));
                    };
                };
            };
        }, function (l) {
            return function (r) {
                return function (u) {
                    return function (m) {
                        return bifoldlDefault(bifoldableProduct(dictBifoldable)(dictBifoldable1))(l)(r)(u)(m);
                    };
                };
            };
        }, function (l) {
            return function (r) {
                return function (u) {
                    return function (m) {
                        return bifoldrDefault(bifoldableProduct(dictBifoldable)(dictBifoldable1))(l)(r)(u)(m);
                    };
                };
            };
        });
    };
};
var bifold = function (dictBifoldable) {
    return function (dictMonoid) {
        return bifoldMap(dictBifoldable)(dictMonoid)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn));
    };
};
var biany = function (dictBifoldable) {
    return function (dictBooleanAlgebra) {
        return function (p) {
            return function (q) {
                return function ($105) {
                    return Data_Newtype.unwrap(Data_Monoid_Disj.newtypeDisj)(bifoldMap(dictBifoldable)(Data_Monoid_Disj.monoidDisj(dictBooleanAlgebra.HeytingAlgebra0()))(function ($106) {
                        return Data_Monoid_Disj.Disj(p($106));
                    })(function ($107) {
                        return Data_Monoid_Disj.Disj(q($107));
                    })($105));
                };
            };
        };
    };
};
var biall = function (dictBifoldable) {
    return function (dictBooleanAlgebra) {
        return function (p) {
            return function (q) {
                return function ($108) {
                    return Data_Newtype.unwrap(Data_Monoid_Conj.newtypeConj)(bifoldMap(dictBifoldable)(Data_Monoid_Conj.monoidConj(dictBooleanAlgebra.HeytingAlgebra0()))(function ($109) {
                        return Data_Monoid_Conj.Conj(p($109));
                    })(function ($110) {
                        return Data_Monoid_Conj.Conj(q($110));
                    })($108));
                };
            };
        };
    };
};
module.exports = {
    Bifoldable: Bifoldable, 
    biall: biall, 
    biany: biany, 
    bifold: bifold, 
    bifoldMap: bifoldMap, 
    bifoldMapDefaultL: bifoldMapDefaultL, 
    bifoldMapDefaultR: bifoldMapDefaultR, 
    bifoldl: bifoldl, 
    bifoldlDefault: bifoldlDefault, 
    bifoldr: bifoldr, 
    bifoldrDefault: bifoldrDefault, 
    bifor_: bifor_, 
    bisequence_: bisequence_, 
    bitraverse_: bitraverse_, 
    bifoldableClown: bifoldableClown, 
    bifoldableJoker: bifoldableJoker, 
    bifoldableFlip: bifoldableFlip, 
    bifoldableProduct: bifoldableProduct, 
    bifoldableWrap: bifoldableWrap
};

},{"../Control.Applicative":3,"../Control.Apply":5,"../Control.Category":10,"../Control.Semigroupoid":35,"../Data.Bifunctor.Clown":42,"../Data.Bifunctor.Flip":43,"../Data.Bifunctor.Joker":44,"../Data.Bifunctor.Product":45,"../Data.Bifunctor.Wrap":46,"../Data.Foldable":63,"../Data.Function":73,"../Data.Monoid":98,"../Data.Monoid.Conj":93,"../Data.Monoid.Disj":94,"../Data.Monoid.Dual":95,"../Data.Monoid.Endo":96,"../Data.Newtype":100,"../Data.Semigroup":114,"../Data.Unit":137,"../Prelude":228}],42:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Clown = function (x) {
    return x;
};
var showClown = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Clown " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var ordClown = function (dictOrd) {
    return dictOrd;
};
var newtypeClown = new Data_Newtype.Newtype(function (n) {
    return n;
}, Clown);
var functorClown = new Data_Functor.Functor(function (v) {
    return function (v1) {
        return v1;
    };
});
var eqClown = function (dictEq) {
    return dictEq;
};
var bifunctorClown = function (dictFunctor) {
    return new Data_Bifunctor.Bifunctor(function (f) {
        return function (v) {
            return function (v1) {
                return Data_Functor.map(dictFunctor)(f)(v1);
            };
        };
    });
};
var biapplyClown = function (dictApply) {
    return new Control_Biapply.Biapply(function () {
        return bifunctorClown(dictApply.Functor0());
    }, function (v) {
        return function (v1) {
            return Control_Apply.apply(dictApply)(v)(v1);
        };
    });
};
var biapplicativeClown = function (dictApplicative) {
    return new Control_Biapplicative.Biapplicative(function () {
        return biapplyClown(dictApplicative.Apply0());
    }, function (a) {
        return function (v) {
            return Control_Applicative.pure(dictApplicative)(a);
        };
    });
};
module.exports = {
    Clown: Clown, 
    newtypeClown: newtypeClown, 
    eqClown: eqClown, 
    ordClown: ordClown, 
    showClown: showClown, 
    functorClown: functorClown, 
    bifunctorClown: bifunctorClown, 
    biapplyClown: biapplyClown, 
    biapplicativeClown: biapplicativeClown
};

},{"../Control.Applicative":3,"../Control.Apply":5,"../Control.Biapplicative":6,"../Control.Biapply":7,"../Data.Bifunctor":47,"../Data.Eq":58,"../Data.Functor":76,"../Data.Newtype":100,"../Data.Ord":107,"../Data.Semigroup":114,"../Data.Show":118,"../Prelude":228}],43:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Flip = function (x) {
    return x;
};
var showFlip = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Flip " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var ordFlip = function (dictOrd) {
    return dictOrd;
};
var newtypeFlip = new Data_Newtype.Newtype(function (n) {
    return n;
}, Flip);
var functorFlip = function (dictBifunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return Data_Bifunctor.lmap(dictBifunctor)(f)(v);
        };
    });
};
var eqFlip = function (dictEq) {
    return dictEq;
};
var bifunctorFlip = function (dictBifunctor) {
    return new Data_Bifunctor.Bifunctor(function (f) {
        return function (g) {
            return function (v) {
                return Data_Bifunctor.bimap(dictBifunctor)(g)(f)(v);
            };
        };
    });
};
var biapplyFlip = function (dictBiapply) {
    return new Control_Biapply.Biapply(function () {
        return bifunctorFlip(dictBiapply.Bifunctor0());
    }, function (v) {
        return function (v1) {
            return Control_Biapply.biapply(dictBiapply)(v)(v1);
        };
    });
};
var biapplicativeFlip = function (dictBiapplicative) {
    return new Control_Biapplicative.Biapplicative(function () {
        return biapplyFlip(dictBiapplicative.Biapply0());
    }, function (a) {
        return function (b) {
            return Control_Biapplicative.bipure(dictBiapplicative)(b)(a);
        };
    });
};
module.exports = {
    Flip: Flip, 
    newtypeFlip: newtypeFlip, 
    eqFlip: eqFlip, 
    ordFlip: ordFlip, 
    showFlip: showFlip, 
    functorFlip: functorFlip, 
    bifunctorFlip: bifunctorFlip, 
    biapplyFlip: biapplyFlip, 
    biapplicativeFlip: biapplicativeFlip
};

},{"../Control.Biapplicative":6,"../Control.Biapply":7,"../Data.Bifunctor":47,"../Data.Eq":58,"../Data.Functor":76,"../Data.Newtype":100,"../Data.Ord":107,"../Data.Semigroup":114,"../Data.Show":118,"../Prelude":228}],44:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Joker = function (x) {
    return x;
};
var showJoker = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Joker " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var ordJoker = function (dictOrd) {
    return dictOrd;
};
var newtypeJoker = new Data_Newtype.Newtype(function (n) {
    return n;
}, Joker);
var functorJoker = function (dictFunctor) {
    return new Data_Functor.Functor(function (g) {
        return function (v) {
            return Data_Functor.map(dictFunctor)(g)(v);
        };
    });
};
var eqJoker = function (dictEq) {
    return dictEq;
};
var bifunctorJoker = function (dictFunctor) {
    return new Data_Bifunctor.Bifunctor(function (v) {
        return function (g) {
            return function (v1) {
                return Data_Functor.map(dictFunctor)(g)(v1);
            };
        };
    });
};
var biapplyJoker = function (dictApply) {
    return new Control_Biapply.Biapply(function () {
        return bifunctorJoker(dictApply.Functor0());
    }, function (v) {
        return function (v1) {
            return Control_Apply.apply(dictApply)(v)(v1);
        };
    });
};
var biapplicativeJoker = function (dictApplicative) {
    return new Control_Biapplicative.Biapplicative(function () {
        return biapplyJoker(dictApplicative.Apply0());
    }, function (v) {
        return function (b) {
            return Control_Applicative.pure(dictApplicative)(b);
        };
    });
};
module.exports = {
    Joker: Joker, 
    newtypeJoker: newtypeJoker, 
    eqJoker: eqJoker, 
    ordJoker: ordJoker, 
    showJoker: showJoker, 
    functorJoker: functorJoker, 
    bifunctorJoker: bifunctorJoker, 
    biapplyJoker: biapplyJoker, 
    biapplicativeJoker: biapplicativeJoker
};

},{"../Control.Applicative":3,"../Control.Apply":5,"../Control.Biapplicative":6,"../Control.Biapply":7,"../Data.Bifunctor":47,"../Data.Eq":58,"../Data.Functor":76,"../Data.Newtype":100,"../Data.Ord":107,"../Data.Semigroup":114,"../Data.Show":118,"../Prelude":228}],45:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Eq = require("../Data.Eq");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Product = (function () {
    function Product(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Product.create = function (value0) {
        return function (value1) {
            return new Product(value0, value1);
        };
    };
    return Product;
})();
var showProduct = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            return "(Product " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
        });
    };
};
var eqProduct = function (dictEq) {
    return function (dictEq1) {
        return new Data_Eq.Eq(function (x) {
            return function (y) {
                return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
            };
        });
    };
};
var ordProduct = function (dictOrd) {
    return function (dictOrd1) {
        return new Data_Ord.Ord(function () {
            return eqProduct(dictOrd.Eq0())(dictOrd1.Eq0());
        }, function (x) {
            return function (y) {
                var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                if (v instanceof Data_Ordering.LT) {
                    return Data_Ordering.LT.value;
                };
                if (v instanceof Data_Ordering.GT) {
                    return Data_Ordering.GT.value;
                };
                return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
            };
        });
    };
};
var bifunctorProduct = function (dictBifunctor) {
    return function (dictBifunctor1) {
        return new Data_Bifunctor.Bifunctor(function (f) {
            return function (g) {
                return function (v) {
                    return new Product(Data_Bifunctor.bimap(dictBifunctor)(f)(g)(v.value0), Data_Bifunctor.bimap(dictBifunctor1)(f)(g)(v.value1));
                };
            };
        });
    };
};
var biapplyProduct = function (dictBiapply) {
    return function (dictBiapply1) {
        return new Control_Biapply.Biapply(function () {
            return bifunctorProduct(dictBiapply.Bifunctor0())(dictBiapply1.Bifunctor0());
        }, function (v) {
            return function (v1) {
                return new Product(Control_Biapply.biapply(dictBiapply)(v.value0)(v1.value0), Control_Biapply.biapply(dictBiapply1)(v.value1)(v1.value1));
            };
        });
    };
};
var biapplicativeProduct = function (dictBiapplicative) {
    return function (dictBiapplicative1) {
        return new Control_Biapplicative.Biapplicative(function () {
            return biapplyProduct(dictBiapplicative.Biapply0())(dictBiapplicative1.Biapply0());
        }, function (a) {
            return function (b) {
                return new Product(Control_Biapplicative.bipure(dictBiapplicative)(a)(b), Control_Biapplicative.bipure(dictBiapplicative1)(a)(b));
            };
        });
    };
};
module.exports = {
    Product: Product, 
    eqProduct: eqProduct, 
    ordProduct: ordProduct, 
    showProduct: showProduct, 
    bifunctorProduct: bifunctorProduct, 
    biapplyProduct: biapplyProduct, 
    biapplicativeProduct: biapplicativeProduct
};

},{"../Control.Biapplicative":6,"../Control.Biapply":7,"../Data.Bifunctor":47,"../Data.Eq":58,"../Data.HeytingAlgebra":80,"../Data.Ord":107,"../Data.Ordering":108,"../Data.Semigroup":114,"../Data.Show":118,"../Prelude":228}],46:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Wrap = function (x) {
    return x;
};
var showWrap = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Wrap " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var ordWrap = function (dictOrd) {
    return dictOrd;
};
var newtypeWrap = new Data_Newtype.Newtype(function (n) {
    return n;
}, Wrap);
var functorWrap = function (dictBifunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return Data_Bifunctor.rmap(dictBifunctor)(f)(v);
        };
    });
};
var eqWrap = function (dictEq) {
    return dictEq;
};
var bifunctorWrap = function (dictBifunctor) {
    return new Data_Bifunctor.Bifunctor(function (f) {
        return function (g) {
            return function (v) {
                return Data_Bifunctor.bimap(dictBifunctor)(f)(g)(v);
            };
        };
    });
};
var biapplyWrap = function (dictBiapply) {
    return new Control_Biapply.Biapply(function () {
        return bifunctorWrap(dictBiapply.Bifunctor0());
    }, function (v) {
        return function (v1) {
            return Control_Biapply.biapply(dictBiapply)(v)(v1);
        };
    });
};
var biapplicativeWrap = function (dictBiapplicative) {
    return new Control_Biapplicative.Biapplicative(function () {
        return biapplyWrap(dictBiapplicative.Biapply0());
    }, function (a) {
        return function (b) {
            return Control_Biapplicative.bipure(dictBiapplicative)(a)(b);
        };
    });
};
module.exports = {
    Wrap: Wrap, 
    newtypeWrap: newtypeWrap, 
    eqWrap: eqWrap, 
    ordWrap: ordWrap, 
    showWrap: showWrap, 
    functorWrap: functorWrap, 
    bifunctorWrap: bifunctorWrap, 
    biapplyWrap: biapplyWrap, 
    biapplicativeWrap: biapplicativeWrap
};

},{"../Control.Biapplicative":6,"../Control.Biapply":7,"../Data.Bifunctor":47,"../Data.Eq":58,"../Data.Functor":76,"../Data.Newtype":100,"../Data.Ord":107,"../Data.Semigroup":114,"../Data.Show":118,"../Prelude":228}],47:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Category = require("../Control.Category");
var Bifunctor = function (bimap) {
    this.bimap = bimap;
};
var bimap = function (dict) {
    return dict.bimap;
};
var lmap = function (dictBifunctor) {
    return function (f) {
        return bimap(dictBifunctor)(f)(Control_Category.id(Control_Category.categoryFn));
    };
};
var rmap = function (dictBifunctor) {
    return bimap(dictBifunctor)(Control_Category.id(Control_Category.categoryFn));
};
module.exports = {
    Bifunctor: Bifunctor, 
    bimap: bimap, 
    lmap: lmap, 
    rmap: rmap
};

},{"../Control.Category":10}],48:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Data_Bifoldable = require("../Data.Bifoldable");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Bifunctor_Clown = require("../Data.Bifunctor.Clown");
var Data_Bifunctor_Flip = require("../Data.Bifunctor.Flip");
var Data_Bifunctor_Joker = require("../Data.Bifunctor.Joker");
var Data_Bifunctor_Product = require("../Data.Bifunctor.Product");
var Data_Bifunctor_Wrap = require("../Data.Bifunctor.Wrap");
var Data_Functor = require("../Data.Functor");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var Bitraversable = function (Bifoldable1, Bifunctor0, bisequence, bitraverse) {
    this.Bifoldable1 = Bifoldable1;
    this.Bifunctor0 = Bifunctor0;
    this.bisequence = bisequence;
    this.bitraverse = bitraverse;
};
var bitraverse = function (dict) {
    return dict.bitraverse;
};
var lfor = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return bitraverse(dictBitraversable)(dictApplicative)(f)(Control_Applicative.pure(dictApplicative))(t);
            };
        };
    };
};
var ltraverse = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (f) {
            return bitraverse(dictBitraversable)(dictApplicative)(f)(Control_Applicative.pure(dictApplicative));
        };
    };
};
var rfor = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return bitraverse(dictBitraversable)(dictApplicative)(Control_Applicative.pure(dictApplicative))(f)(t);
            };
        };
    };
};
var rtraverse = function (dictBitraversable) {
    return function (dictApplicative) {
        return bitraverse(dictBitraversable)(dictApplicative)(Control_Applicative.pure(dictApplicative));
    };
};
var bitraversableJoker = function (dictTraversable) {
    return new Bitraversable(function () {
        return Data_Bifoldable.bifoldableJoker(dictTraversable.Foldable1());
    }, function () {
        return Data_Bifunctor_Joker.bifunctorJoker(dictTraversable.Functor0());
    }, function (dictApplicative) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Joker.Joker)(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v));
        };
    }, function (dictApplicative) {
        return function (v) {
            return function (r) {
                return function (v1) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Joker.Joker)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(r)(v1));
                };
            };
        };
    });
};
var bitraversableClown = function (dictTraversable) {
    return new Bitraversable(function () {
        return Data_Bifoldable.bifoldableClown(dictTraversable.Foldable1());
    }, function () {
        return Data_Bifunctor_Clown.bifunctorClown(dictTraversable.Functor0());
    }, function (dictApplicative) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Clown.Clown)(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v));
        };
    }, function (dictApplicative) {
        return function (l) {
            return function (v) {
                return function (v1) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Clown.Clown)(Data_Traversable.traverse(dictTraversable)(dictApplicative)(l)(v1));
                };
            };
        };
    });
};
var bisequenceDefault = function (dictBitraversable) {
    return function (dictApplicative) {
        return bitraverse(dictBitraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn));
    };
};
var bisequence = function (dict) {
    return dict.bisequence;
};
var bitraversableFlip = function (dictBitraversable) {
    return new Bitraversable(function () {
        return Data_Bifoldable.bifoldableFlip(dictBitraversable.Bifoldable1());
    }, function () {
        return Data_Bifunctor_Flip.bifunctorFlip(dictBitraversable.Bifunctor0());
    }, function (dictApplicative) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Flip.Flip)(bisequence(dictBitraversable)(dictApplicative)(v));
        };
    }, function (dictApplicative) {
        return function (r) {
            return function (l) {
                return function (v) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Flip.Flip)(bitraverse(dictBitraversable)(dictApplicative)(l)(r)(v));
                };
            };
        };
    });
};
var bitraversableProduct = function (dictBitraversable) {
    return function (dictBitraversable1) {
        return new Bitraversable(function () {
            return Data_Bifoldable.bifoldableProduct(dictBitraversable.Bifoldable1())(dictBitraversable1.Bifoldable1());
        }, function () {
            return Data_Bifunctor_Product.bifunctorProduct(dictBitraversable.Bifunctor0())(dictBitraversable1.Bifunctor0());
        }, function (dictApplicative) {
            return function (v) {
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Product.Product.create)(bisequence(dictBitraversable)(dictApplicative)(v.value0)))(bisequence(dictBitraversable1)(dictApplicative)(v.value1));
            };
        }, function (dictApplicative) {
            return function (l) {
                return function (r) {
                    return function (v) {
                        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Product.Product.create)(bitraverse(dictBitraversable)(dictApplicative)(l)(r)(v.value0)))(bitraverse(dictBitraversable1)(dictApplicative)(l)(r)(v.value1));
                    };
                };
            };
        });
    };
};
var bitraversableWrap = function (dictBitraversable) {
    return new Bitraversable(function () {
        return Data_Bifoldable.bifoldableWrap(dictBitraversable.Bifoldable1());
    }, function () {
        return Data_Bifunctor_Wrap.bifunctorWrap(dictBitraversable.Bifunctor0());
    }, function (dictApplicative) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Wrap.Wrap)(bisequence(dictBitraversable)(dictApplicative)(v));
        };
    }, function (dictApplicative) {
        return function (l) {
            return function (r) {
                return function (v) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Bifunctor_Wrap.Wrap)(bitraverse(dictBitraversable)(dictApplicative)(l)(r)(v));
                };
            };
        };
    });
};
var bitraverseDefault = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (f) {
            return function (g) {
                return function (t) {
                    return bisequence(dictBitraversable)(dictApplicative)(Data_Bifunctor.bimap(dictBitraversable.Bifunctor0())(f)(g)(t));
                };
            };
        };
    };
};
var bifor = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return function (g) {
                    return bitraverse(dictBitraversable)(dictApplicative)(f)(g)(t);
                };
            };
        };
    };
};
module.exports = {
    Bitraversable: Bitraversable, 
    bifor: bifor, 
    bisequence: bisequence, 
    bisequenceDefault: bisequenceDefault, 
    bitraverse: bitraverse, 
    bitraverseDefault: bitraverseDefault, 
    lfor: lfor, 
    ltraverse: ltraverse, 
    rfor: rfor, 
    rtraverse: rtraverse, 
    bitraversableClown: bitraversableClown, 
    bitraversableJoker: bitraversableJoker, 
    bitraversableFlip: bitraversableFlip, 
    bitraversableProduct: bitraversableProduct, 
    bitraversableWrap: bitraversableWrap
};

},{"../Control.Applicative":3,"../Control.Apply":5,"../Control.Category":10,"../Data.Bifoldable":41,"../Data.Bifunctor":47,"../Data.Bifunctor.Clown":42,"../Data.Bifunctor.Flip":43,"../Data.Bifunctor.Joker":44,"../Data.Bifunctor.Product":45,"../Data.Bifunctor.Wrap":46,"../Data.Functor":76,"../Data.Traversable":130,"../Prelude":228}],49:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var otherwise = true;
module.exports = {
    otherwise: otherwise
};

},{}],50:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Unit = require("../Data.Unit");
var BooleanAlgebra = function (HeytingAlgebra0) {
    this.HeytingAlgebra0 = HeytingAlgebra0;
};
var booleanAlgebraUnit = new BooleanAlgebra(function () {
    return Data_HeytingAlgebra.heytingAlgebraUnit;
});
var booleanAlgebraFn = function (dictBooleanAlgebra) {
    return new BooleanAlgebra(function () {
        return Data_HeytingAlgebra.heytingAlgebraFunction(dictBooleanAlgebra.HeytingAlgebra0());
    });
};
var booleanAlgebraBoolean = new BooleanAlgebra(function () {
    return Data_HeytingAlgebra.heytingAlgebraBoolean;
});
module.exports = {
    BooleanAlgebra: BooleanAlgebra, 
    booleanAlgebraBoolean: booleanAlgebraBoolean, 
    booleanAlgebraUnit: booleanAlgebraUnit, 
    booleanAlgebraFn: booleanAlgebraFn
};

},{"../Data.HeytingAlgebra":80,"../Data.Unit":137}],51:[function(require,module,exports){
"use strict";

exports.topInt = 2147483647;
exports.bottomInt = -2147483648;

exports.topChar = String.fromCharCode(65535);
exports.bottomChar = String.fromCharCode(0);

},{}],52:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Unit = require("../Data.Unit");
var Bounded = function (Ord0, bottom, top) {
    this.Ord0 = Ord0;
    this.bottom = bottom;
    this.top = top;
};
var top = function (dict) {
    return dict.top;
};
var boundedUnit = new Bounded(function () {
    return Data_Ord.ordUnit;
}, Data_Unit.unit, Data_Unit.unit);
var boundedOrdering = new Bounded(function () {
    return Data_Ord.ordOrdering;
}, Data_Ordering.LT.value, Data_Ordering.GT.value);
var boundedInt = new Bounded(function () {
    return Data_Ord.ordInt;
}, $foreign.bottomInt, $foreign.topInt);
var boundedChar = new Bounded(function () {
    return Data_Ord.ordChar;
}, $foreign.bottomChar, $foreign.topChar);
var boundedBoolean = new Bounded(function () {
    return Data_Ord.ordBoolean;
}, false, true);
var bottom = function (dict) {
    return dict.bottom;
};
module.exports = {
    Bounded: Bounded, 
    bottom: bottom, 
    top: top, 
    boundedBoolean: boundedBoolean, 
    boundedInt: boundedInt, 
    boundedChar: boundedChar, 
    boundedOrdering: boundedOrdering, 
    boundedUnit: boundedUnit
};

},{"../Data.Ord":107,"../Data.Ordering":108,"../Data.Unit":137,"./foreign":51}],53:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_Unit = require("../Data.Unit");
var CommutativeRing = function (Ring0) {
    this.Ring0 = Ring0;
};
var commutativeRingUnit = new CommutativeRing(function () {
    return Data_Ring.ringUnit;
});
var commutativeRingNumber = new CommutativeRing(function () {
    return Data_Ring.ringNumber;
});
var commutativeRingInt = new CommutativeRing(function () {
    return Data_Ring.ringInt;
});
var commutativeRingFn = function (dictCommutativeRing) {
    return new CommutativeRing(function () {
        return Data_Ring.ringFn(dictCommutativeRing.Ring0());
    });
};
module.exports = {
    CommutativeRing: CommutativeRing, 
    commutativeRingInt: commutativeRingInt, 
    commutativeRingNumber: commutativeRingNumber, 
    commutativeRingUnit: commutativeRingUnit, 
    commutativeRingFn: commutativeRingFn
};

},{"../Data.Ring":110,"../Data.Semiring":116,"../Data.Unit":137}],54:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Identity = require("../Data.Identity");
var Data_Newtype = require("../Data.Newtype");
var Prelude = require("../Prelude");
var Distributive = function (Functor0, collect, distribute) {
    this.Functor0 = Functor0;
    this.collect = collect;
    this.distribute = distribute;
};
var distributiveIdentity = new Distributive(function () {
    return Data_Identity.functorIdentity;
}, function (dictFunctor) {
    return function (f) {
        return function ($11) {
            return Data_Identity.Identity(Data_Functor.map(dictFunctor)(function ($12) {
                return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(f($12));
            })($11));
        };
    };
}, function (dictFunctor) {
    return function ($13) {
        return Data_Identity.Identity(Data_Functor.map(dictFunctor)(Data_Newtype.unwrap(Data_Identity.newtypeIdentity))($13));
    };
});
var distribute = function (dict) {
    return dict.distribute;
};
var distributiveFunction = new Distributive(function () {
    return Data_Functor.functorFn;
}, function (dictFunctor) {
    return function (f) {
        return function ($14) {
            return distribute(distributiveFunction)(dictFunctor)(Data_Functor.map(dictFunctor)(f)($14));
        };
    };
}, function (dictFunctor) {
    return function (a) {
        return function (e) {
            return Data_Functor.map(dictFunctor)(function (v) {
                return v(e);
            })(a);
        };
    };
});
var cotraverse = function (dictDistributive) {
    return function (dictFunctor) {
        return function (f) {
            return function ($15) {
                return Data_Functor.map(dictDistributive.Functor0())(f)(distribute(dictDistributive)(dictFunctor)($15));
            };
        };
    };
};
var collectDefault = function (dictDistributive) {
    return function (dictFunctor) {
        return function (f) {
            return function ($16) {
                return distribute(dictDistributive)(dictFunctor)(Data_Functor.map(dictFunctor)(f)($16));
            };
        };
    };
};
var collect = function (dict) {
    return dict.collect;
};
var distributeDefault = function (dictDistributive) {
    return function (dictFunctor) {
        return collect(dictDistributive)(dictFunctor)(Control_Category.id(Control_Category.categoryFn));
    };
};
module.exports = {
    Distributive: Distributive, 
    collect: collect, 
    collectDefault: collectDefault, 
    cotraverse: cotraverse, 
    distribute: distribute, 
    distributeDefault: distributeDefault, 
    distributiveIdentity: distributiveIdentity, 
    distributiveFunction: distributiveFunction
};

},{"../Control.Category":10,"../Control.Semigroupoid":35,"../Data.Function":73,"../Data.Functor":76,"../Data.Identity":81,"../Data.Newtype":100,"../Prelude":228}],55:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var DivisionRing = function (Ring0, recip) {
    this.Ring0 = Ring0;
    this.recip = recip;
};
var recip = function (dict) {
    return dict.recip;
};
var rightDiv = function (dictDivisionRing) {
    return function (a) {
        return function (b) {
            return Data_Semiring.mul((dictDivisionRing.Ring0()).Semiring0())(a)(recip(dictDivisionRing)(b));
        };
    };
};
var leftDiv = function (dictDivisionRing) {
    return function (a) {
        return function (b) {
            return Data_Semiring.mul((dictDivisionRing.Ring0()).Semiring0())(recip(dictDivisionRing)(b))(a);
        };
    };
};
var divisionringNumber = new DivisionRing(function () {
    return Data_Ring.ringNumber;
}, function (x) {
    return 1.0 / x;
});
module.exports = {
    DivisionRing: DivisionRing, 
    leftDiv: leftDiv, 
    recip: recip, 
    rightDiv: rightDiv, 
    divisionringNumber: divisionringNumber
};

},{"../Data.EuclideanRing":60,"../Data.Ring":110,"../Data.Semiring":116}],56:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Data_Bifoldable = require("../Data.Bifoldable");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Bitraversable = require("../Data.Bitraversable");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var Left = (function () {
    function Left(value0) {
        this.value0 = value0;
    };
    Left.create = function (value0) {
        return new Left(value0);
    };
    return Left;
})();
var Right = (function () {
    function Right(value0) {
        this.value0 = value0;
    };
    Right.create = function (value0) {
        return new Right(value0);
    };
    return Right;
})();
var showEither = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            if (v instanceof Left) {
                return "(Left " + (Data_Show.show(dictShow)(v.value0) + ")");
            };
            if (v instanceof Right) {
                return "(Right " + (Data_Show.show(dictShow1)(v.value0) + ")");
            };
            throw new Error("Failed pattern match at Data.Either line 160, column 1 - line 160, column 61: " + [ v.constructor.name ]);
        });
    };
};
var functorEither = new Data_Functor.Functor(function (v) {
    return function (v1) {
        if (v1 instanceof Left) {
            return new Left(v1.value0);
        };
        if (v1 instanceof Right) {
            return new Right(v(v1.value0));
        };
        throw new Error("Failed pattern match at Data.Either line 36, column 1 - line 36, column 45: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var invariantEither = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorEither));
var fromRight = function (dictPartial) {
    return function (v) {
        var __unused = function (dictPartial1) {
            return function ($dollar62) {
                return $dollar62;
            };
        };
        return __unused(dictPartial)((function () {
            if (v instanceof Right) {
                return v.value0;
            };
            throw new Error("Failed pattern match at Data.Either line 252, column 1 - line 252, column 52: " + [ v.constructor.name ]);
        })());
    };
};
var fromLeft = function (dictPartial) {
    return function (v) {
        var __unused = function (dictPartial1) {
            return function ($dollar66) {
                return $dollar66;
            };
        };
        return __unused(dictPartial)((function () {
            if (v instanceof Left) {
                return v.value0;
            };
            throw new Error("Failed pattern match at Data.Either line 247, column 1 - line 247, column 51: " + [ v.constructor.name ]);
        })());
    };
};
var foldableEither = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            if (v instanceof Left) {
                return Data_Monoid.mempty(dictMonoid);
            };
            if (v instanceof Right) {
                return f(v.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 184, column 1 - line 184, column 47: " + [ f.constructor.name, v.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Left) {
                return z;
            };
            if (v1 instanceof Right) {
                return v(z)(v1.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 184, column 1 - line 184, column 47: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Left) {
                return z;
            };
            if (v1 instanceof Right) {
                return v(v1.value0)(z);
            };
            throw new Error("Failed pattern match at Data.Either line 184, column 1 - line 184, column 47: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
});
var traversableEither = new Data_Traversable.Traversable(function () {
    return foldableEither;
}, function () {
    return functorEither;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Left) {
            return Control_Applicative.pure(dictApplicative)(new Left(v.value0));
        };
        if (v instanceof Right) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Right.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Either line 200, column 1 - line 200, column 53: " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Left) {
                return Control_Applicative.pure(dictApplicative)(new Left(v1.value0));
            };
            if (v1 instanceof Right) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Right.create)(v(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Either line 200, column 1 - line 200, column 53: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
});
var extendEither = new Control_Extend.Extend(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v1 instanceof Left) {
            return new Left(v1.value0);
        };
        return new Right(v(v1));
    };
});
var eqEither = function (dictEq) {
    return function (dictEq1) {
        return new Data_Eq.Eq(function (x) {
            return function (y) {
                if (x instanceof Left && y instanceof Left) {
                    return Data_Eq.eq(dictEq)(x.value0)(y.value0);
                };
                if (x instanceof Right && y instanceof Right) {
                    return Data_Eq.eq(dictEq1)(x.value0)(y.value0);
                };
                return false;
            };
        });
    };
};
var ordEither = function (dictOrd) {
    return function (dictOrd1) {
        return new Data_Ord.Ord(function () {
            return eqEither(dictOrd.Eq0())(dictOrd1.Eq0());
        }, function (x) {
            return function (y) {
                if (x instanceof Left && y instanceof Left) {
                    return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                };
                if (x instanceof Left) {
                    return Data_Ordering.LT.value;
                };
                if (y instanceof Left) {
                    return Data_Ordering.GT.value;
                };
                if (x instanceof Right && y instanceof Right) {
                    return Data_Ord.compare(dictOrd1)(x.value0)(y.value0);
                };
                throw new Error("Failed pattern match at Data.Either line 176, column 8 - line 176, column 64: " + [ x.constructor.name, y.constructor.name ]);
            };
        });
    };
};
var eq1Either = function (dictEq) {
    return new Data_Eq.Eq1(function (dictEq1) {
        return Data_Eq.eq(eqEither(dictEq)(dictEq1));
    });
};
var ord1Either = function (dictOrd) {
    return new Data_Ord.Ord1(function () {
        return eq1Either(dictOrd.Eq0());
    }, function (dictOrd1) {
        return Data_Ord.compare(ordEither(dictOrd)(dictOrd1));
    });
};
var either = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Left) {
                return v(v2.value0);
            };
            if (v2 instanceof Right) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 229, column 1 - line 229, column 64: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var isLeft = either(Data_Function["const"](true))(Data_Function["const"](false));
var isRight = either(Data_Function["const"](false))(Data_Function["const"](true));
var choose = function (dictAlt) {
    return function (a) {
        return function (b) {
            return Control_Alt.alt(dictAlt)(Data_Functor.map(dictAlt.Functor0())(Left.create)(a))(Data_Functor.map(dictAlt.Functor0())(Right.create)(b));
        };
    };
};
var boundedEither = function (dictBounded) {
    return function (dictBounded1) {
        return new Data_Bounded.Bounded(function () {
            return ordEither(dictBounded.Ord0())(dictBounded1.Ord0());
        }, new Left(Data_Bounded.bottom(dictBounded)), new Right(Data_Bounded.top(dictBounded1)));
    };
};
var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Left) {
                return new Left(v(v2.value0));
            };
            if (v2 instanceof Right) {
                return new Right(v1(v2.value0));
            };
            throw new Error("Failed pattern match at Data.Either line 43, column 1 - line 43, column 45: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
});
var bifoldableEither = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(v2.value0);
                };
                if (v2 instanceof Right) {
                    return v1(v2.value0);
                };
                throw new Error("Failed pattern match at Data.Either line 192, column 1 - line 192, column 47: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
            };
        };
    };
}, function (v) {
    return function (v1) {
        return function (z) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(z)(v2.value0);
                };
                if (v2 instanceof Right) {
                    return v1(z)(v2.value0);
                };
                throw new Error("Failed pattern match at Data.Either line 192, column 1 - line 192, column 47: " + [ v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name ]);
            };
        };
    };
}, function (v) {
    return function (v1) {
        return function (z) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(v2.value0)(z);
                };
                if (v2 instanceof Right) {
                    return v1(v2.value0)(z);
                };
                throw new Error("Failed pattern match at Data.Either line 192, column 1 - line 192, column 47: " + [ v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name ]);
            };
        };
    };
});
var bitraversableEither = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableEither;
}, function () {
    return bifunctorEither;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Left) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Left.create)(v.value0);
        };
        if (v instanceof Right) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Right.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Either line 206, column 1 - line 206, column 53: " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Left.create)(v(v2.value0));
                };
                if (v2 instanceof Right) {
                    return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Right.create)(v1(v2.value0));
                };
                throw new Error("Failed pattern match at Data.Either line 206, column 1 - line 206, column 53: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
            };
        };
    };
});
var applyEither = new Control_Apply.Apply(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v instanceof Left) {
            return new Left(v.value0);
        };
        if (v instanceof Right) {
            return Data_Functor.map(functorEither)(v.value0)(v1);
        };
        throw new Error("Failed pattern match at Data.Either line 79, column 1 - line 79, column 41: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var bindEither = new Control_Bind.Bind(function () {
    return applyEither;
}, either(function (e) {
    return function (v) {
        return new Left(e);
    };
})(function (a) {
    return function (f) {
        return f(a);
    };
}));
var semigroupEither = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (x) {
        return function (y) {
            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semigroup.append(dictSemigroup))(x))(y);
        };
    });
};
var semiringEither = function (dictSemiring) {
    return new Data_Semiring.Semiring(function (x) {
        return function (y) {
            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semiring.add(dictSemiring))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semiring.mul(dictSemiring))(x))(y);
        };
    }, new Right(Data_Semiring.one(dictSemiring)), new Right(Data_Semiring.zero(dictSemiring)));
};
var applicativeEither = new Control_Applicative.Applicative(function () {
    return applyEither;
}, Right.create);
var monadEither = new Control_Monad.Monad(function () {
    return applicativeEither;
}, function () {
    return bindEither;
});
var altEither = new Control_Alt.Alt(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v instanceof Left) {
            return v1;
        };
        return v;
    };
});
module.exports = {
    Left: Left, 
    Right: Right, 
    choose: choose, 
    either: either, 
    fromLeft: fromLeft, 
    fromRight: fromRight, 
    isLeft: isLeft, 
    isRight: isRight, 
    functorEither: functorEither, 
    invariantEither: invariantEither, 
    bifunctorEither: bifunctorEither, 
    applyEither: applyEither, 
    applicativeEither: applicativeEither, 
    altEither: altEither, 
    bindEither: bindEither, 
    monadEither: monadEither, 
    extendEither: extendEither, 
    showEither: showEither, 
    eqEither: eqEither, 
    eq1Either: eq1Either, 
    ordEither: ordEither, 
    ord1Either: ord1Either, 
    boundedEither: boundedEither, 
    foldableEither: foldableEither, 
    bifoldableEither: bifoldableEither, 
    traversableEither: traversableEither, 
    bitraversableEither: bitraversableEither, 
    semiringEither: semiringEither, 
    semigroupEither: semigroupEither
};

},{"../Control.Alt":1,"../Control.Applicative":3,"../Control.Apply":5,"../Control.Bind":9,"../Control.Extend":13,"../Control.Monad":31,"../Data.Bifoldable":41,"../Data.Bifunctor":47,"../Data.Bitraversable":48,"../Data.Bounded":52,"../Data.Eq":58,"../Data.Foldable":63,"../Data.Function":73,"../Data.Functor":76,"../Data.Functor.Invariant":74,"../Data.Monoid":98,"../Data.Ord":107,"../Data.Ordering":108,"../Data.Semigroup":114,"../Data.Semiring":116,"../Data.Show":118,"../Data.Traversable":130,"../Prelude":228}],57:[function(require,module,exports){
"use strict";

exports.refEq = function (r1) {
  return function (r2) {
    return r1 === r2;
  };
};

exports.refIneq = function (r1) {
  return function (r2) {
    return r1 !== r2;
  };
};

exports.eqArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      if (xs.length !== ys.length) return false;
      for (var i = 0; i < xs.length; i++) {
        if (!f(xs[i])(ys[i])) return false;
      }
      return true;
    };
  };
};

},{}],58:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Data_Unit = require("../Data.Unit");
var Data_Void = require("../Data.Void");
var Eq = function (eq) {
    this.eq = eq;
};
var Eq1 = function (eq1) {
    this.eq1 = eq1;
};
var eqVoid = new Eq(function (v) {
    return function (v1) {
        return true;
    };
});
var eqUnit = new Eq(function (v) {
    return function (v1) {
        return true;
    };
});
var eqString = new Eq($foreign.refEq);
var eqNumber = new Eq($foreign.refEq);
var eqInt = new Eq($foreign.refEq);
var eqChar = new Eq($foreign.refEq);
var eqBoolean = new Eq($foreign.refEq);
var eq1 = function (dict) {
    return dict.eq1;
};
var eq = function (dict) {
    return dict.eq;
};
var eqArray = function (dictEq) {
    return new Eq($foreign.eqArrayImpl(eq(dictEq)));
};
var eq1Array = new Eq1(function (dictEq) {
    return eq(eqArray(dictEq));
});
var notEq = function (dictEq) {
    return function (x) {
        return function (y) {
            return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
        };
    };
};
var notEq1 = function (dictEq1) {
    return function (dictEq) {
        return function (x) {
            return function (y) {
                return eq(eqBoolean)(eq1(dictEq1)(dictEq)(x)(y))(false);
            };
        };
    };
};
module.exports = {
    Eq: Eq, 
    Eq1: Eq1, 
    eq: eq, 
    eq1: eq1, 
    notEq: notEq, 
    notEq1: notEq1, 
    eqBoolean: eqBoolean, 
    eqInt: eqInt, 
    eqNumber: eqNumber, 
    eqChar: eqChar, 
    eqString: eqString, 
    eqUnit: eqUnit, 
    eqVoid: eqVoid, 
    eqArray: eqArray, 
    eq1Array: eq1Array
};

},{"../Data.Unit":137,"../Data.Void":138,"./foreign":57}],59:[function(require,module,exports){
"use strict";

exports.intDegree = function (x) {
  return Math.min(Math.abs(x), 2147483647);
};

exports.intDiv = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x / y | 0;
  };
};

exports.intMod = function (x) {
  return function (y) {
    return x % y;
  };
};

exports.numDiv = function (n1) {
  return function (n2) {
    return n1 / n2;
  };
};

},{}],60:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_Eq = require("../Data.Eq");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var EuclideanRing = function (CommutativeRing0, degree, div, mod) {
    this.CommutativeRing0 = CommutativeRing0;
    this.degree = degree;
    this.div = div;
    this.mod = mod;
};
var mod = function (dict) {
    return dict.mod;
};
var gcd = function ($copy_dictEq) {
    return function ($copy_dictEuclideanRing) {
        return function ($copy_a) {
            return function ($copy_b) {
                var $tco_var_dictEq = $copy_dictEq;
                var $tco_var_dictEuclideanRing = $copy_dictEuclideanRing;
                var $tco_var_a = $copy_a;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(dictEq, dictEuclideanRing, a, b) {
                    var $7 = Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
                    if ($7) {
                        $tco_done = true;
                        return a;
                    };
                    $tco_var_dictEq = dictEq;
                    $tco_var_dictEuclideanRing = dictEuclideanRing;
                    $tco_var_a = b;
                    $copy_b = mod(dictEuclideanRing)(a)(b);
                    return;
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_dictEq, $tco_var_dictEuclideanRing, $tco_var_a, $copy_b);
                };
                return $tco_result;
            };
        };
    };
};
var euclideanRingNumber = new EuclideanRing(function () {
    return Data_CommutativeRing.commutativeRingNumber;
}, function (v) {
    return 1;
}, $foreign.numDiv, function (v) {
    return function (v1) {
        return 0.0;
    };
});
var euclideanRingInt = new EuclideanRing(function () {
    return Data_CommutativeRing.commutativeRingInt;
}, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
var div = function (dict) {
    return dict.div;
};
var lcm = function (dictEq) {
    return function (dictEuclideanRing) {
        return function (a) {
            return function (b) {
                var $8 = Data_Eq.eq(dictEq)(a)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())) || Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0()));
                if ($8) {
                    return Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0());
                };
                return div(dictEuclideanRing)(Data_Semiring.mul(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0())(a)(b))(gcd(dictEq)(dictEuclideanRing)(a)(b));
            };
        };
    };
};
var degree = function (dict) {
    return dict.degree;
};
module.exports = {
    EuclideanRing: EuclideanRing, 
    degree: degree, 
    div: div, 
    gcd: gcd, 
    lcm: lcm, 
    mod: mod, 
    euclideanRingInt: euclideanRingInt, 
    euclideanRingNumber: euclideanRingNumber
};

},{"../Data.BooleanAlgebra":50,"../Data.CommutativeRing":53,"../Data.Eq":58,"../Data.HeytingAlgebra":80,"../Data.Ring":110,"../Data.Semiring":116,"./foreign":59}],61:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_DivisionRing = require("../Data.DivisionRing");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Field = function (EuclideanRing0) {
    this.EuclideanRing0 = EuclideanRing0;
};
var fieldNumber = new Field(function () {
    return Data_EuclideanRing.euclideanRingNumber;
});
module.exports = {
    Field: Field, 
    fieldNumber: fieldNumber
};

},{"../Data.CommutativeRing":53,"../Data.DivisionRing":55,"../Data.EuclideanRing":60,"../Data.Ring":110,"../Data.Semiring":116}],62:[function(require,module,exports){
"use strict";

exports.foldrArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;
      for (var i = len - 1; i >= 0; i--) {
        acc = f(xs[i])(acc);
      }
      return acc;
    };
  };
};

exports.foldlArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;
      for (var i = 0; i < len; i++) {
        acc = f(acc)(xs[i]);
      }
      return acc;
    };
  };
};

},{}],63:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Maybe_Last = require("../Data.Maybe.Last");
var Data_Monoid = require("../Data.Monoid");
var Data_Monoid_Additive = require("../Data.Monoid.Additive");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Endo = require("../Data.Monoid.Endo");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Foldable = function (foldMap, foldl, foldr) {
    this.foldMap = foldMap;
    this.foldl = foldl;
    this.foldr = foldr;
};
var foldr = function (dict) {
    return dict.foldr;
};
var $$null = function (dictFoldable) {
    return foldr(dictFoldable)(function (v) {
        return function (v1) {
            return false;
        };
    })(true);
};
var oneOf = function (dictFoldable) {
    return function (dictPlus) {
        return foldr(dictFoldable)(Control_Alt.alt(dictPlus.Alt0()))(Control_Plus.empty(dictPlus));
    };
};
var traverse_ = function (dictApplicative) {
    return function (dictFoldable) {
        return function (f) {
            return foldr(dictFoldable)(function ($181) {
                return Control_Apply.applySecond(dictApplicative.Apply0())(f($181));
            })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
        };
    };
};
var for_ = function (dictApplicative) {
    return function (dictFoldable) {
        return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
    };
};
var sequence_ = function (dictApplicative) {
    return function (dictFoldable) {
        return traverse_(dictApplicative)(dictFoldable)(Control_Category.id(Control_Category.categoryFn));
    };
};
var foldl = function (dict) {
    return dict.foldl;
};
var intercalate = function (dictFoldable) {
    return function (dictMonoid) {
        return function (sep) {
            return function (xs) {
                var go = function (v) {
                    return function (x) {
                        if (v.init) {
                            return {
                                init: false, 
                                acc: x
                            };
                        };
                        return {
                            init: false, 
                            acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
                        };
                    };
                };
                return (foldl(dictFoldable)(go)({
                    init: true, 
                    acc: Data_Monoid.mempty(dictMonoid)
                })(xs)).acc;
            };
        };
    };
};
var length = function (dictFoldable) {
    return function (dictSemiring) {
        return foldl(dictFoldable)(function (c) {
            return function (v) {
                return Data_Semiring.add(dictSemiring)(Data_Semiring.one(dictSemiring))(c);
            };
        })(Data_Semiring.zero(dictSemiring));
    };
};
var maximumBy = function (dictFoldable) {
    return function (cmp) {
        var max$prime = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing) {
                    return new Data_Maybe.Just(v1);
                };
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Maybe.Just((function () {
                        var $104 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.GT.value);
                        if ($104) {
                            return v.value0;
                        };
                        return v1;
                    })());
                };
                throw new Error("Failed pattern match at Data.Foldable line 347, column 3 - line 347, column 27: " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
        return foldl(dictFoldable)(max$prime)(Data_Maybe.Nothing.value);
    };
};
var maximum = function (dictOrd) {
    return function (dictFoldable) {
        return maximumBy(dictFoldable)(Data_Ord.compare(dictOrd));
    };
};
var minimumBy = function (dictFoldable) {
    return function (cmp) {
        var min$prime = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing) {
                    return new Data_Maybe.Just(v1);
                };
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Maybe.Just((function () {
                        var $108 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.LT.value);
                        if ($108) {
                            return v.value0;
                        };
                        return v1;
                    })());
                };
                throw new Error("Failed pattern match at Data.Foldable line 360, column 3 - line 360, column 27: " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
        return foldl(dictFoldable)(min$prime)(Data_Maybe.Nothing.value);
    };
};
var minimum = function (dictOrd) {
    return function (dictFoldable) {
        return minimumBy(dictFoldable)(Data_Ord.compare(dictOrd));
    };
};
var product = function (dictFoldable) {
    return function (dictSemiring) {
        return foldl(dictFoldable)(Data_Semiring.mul(dictSemiring))(Data_Semiring.one(dictSemiring));
    };
};
var sum = function (dictFoldable) {
    return function (dictSemiring) {
        return foldl(dictFoldable)(Data_Semiring.add(dictSemiring))(Data_Semiring.zero(dictSemiring));
    };
};
var foldableMultiplicative = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableMaybe = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            if (v instanceof Data_Maybe.Nothing) {
                return Data_Monoid.mempty(dictMonoid);
            };
            if (v instanceof Data_Maybe.Just) {
                return f(v.value0);
            };
            throw new Error("Failed pattern match at Data.Foldable line 128, column 1 - line 128, column 41: " + [ f.constructor.name, v.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return z;
            };
            if (v1 instanceof Data_Maybe.Just) {
                return v(z)(v1.value0);
            };
            throw new Error("Failed pattern match at Data.Foldable line 128, column 1 - line 128, column 41: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return z;
            };
            if (v1 instanceof Data_Maybe.Just) {
                return v(v1.value0)(z);
            };
            throw new Error("Failed pattern match at Data.Foldable line 128, column 1 - line 128, column 41: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
});
var foldableDual = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableDisj = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableConj = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableAdditive = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldMapDefaultR = function (dictFoldable) {
    return function (dictMonoid) {
        return function (f) {
            return foldr(dictFoldable)(function (x) {
                return function (acc) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                };
            })(Data_Monoid.mempty(dictMonoid));
        };
    };
};
var foldableArray = new Foldable(function (dictMonoid) {
    return foldMapDefaultR(foldableArray)(dictMonoid);
}, $foreign.foldlArray, $foreign.foldrArray);
var foldMapDefaultL = function (dictFoldable) {
    return function (dictMonoid) {
        return function (f) {
            return foldl(dictFoldable)(function (acc) {
                return function (x) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(x));
                };
            })(Data_Monoid.mempty(dictMonoid));
        };
    };
};
var foldMap = function (dict) {
    return dict.foldMap;
};
var foldableFirst = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldl(foldableMaybe)(f)(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldr(foldableMaybe)(f)(z)(v);
        };
    };
});
var foldableLast = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldl(foldableMaybe)(f)(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldr(foldableMaybe)(f)(z)(v);
        };
    };
});
var foldlDefault = function (dictFoldable) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(Data_Newtype.unwrap(Data_Monoid_Dual.newtypeDual)(foldMap(dictFoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function ($182) {
                    return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(c)($182)));
                })(xs)))(u);
            };
        };
    };
};
var foldrDefault = function (dictFoldable) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo)(function ($183) {
                    return Data_Monoid_Endo.Endo(c($183));
                })(xs))(u);
            };
        };
    };
};
var surroundMap = function (dictFoldable) {
    return function (dictSemigroup) {
        return function (d) {
            return function (t) {
                return function (f) {
                    var joined = function (a) {
                        return function (m) {
                            return Data_Semigroup.append(dictSemigroup)(d)(Data_Semigroup.append(dictSemigroup)(t(a))(m));
                        };
                    };
                    return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo)(joined)(f))(d);
                };
            };
        };
    };
};
var surround = function (dictFoldable) {
    return function (dictSemigroup) {
        return function (d) {
            return surroundMap(dictFoldable)(dictSemigroup)(d)(Control_Category.id(Control_Category.categoryFn));
        };
    };
};
var foldM = function (dictFoldable) {
    return function (dictMonad) {
        return function (f) {
            return function (a0) {
                return foldl(dictFoldable)(function (ma) {
                    return function (b) {
                        return Control_Bind.bind(dictMonad.Bind1())(ma)(Data_Function.flip(f)(b));
                    };
                })(Control_Applicative.pure(dictMonad.Applicative0())(a0));
            };
        };
    };
};
var fold = function (dictFoldable) {
    return function (dictMonoid) {
        return foldMap(dictFoldable)(dictMonoid)(Control_Category.id(Control_Category.categoryFn));
    };
};
var findMap = function (dictFoldable) {
    return function (p) {
        var go = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing) {
                    return p(v1);
                };
                return v;
            };
        };
        return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
    };
};
var find = function (dictFoldable) {
    return function (p) {
        var go = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing && p(v1)) {
                    return new Data_Maybe.Just(v1);
                };
                return v;
            };
        };
        return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
    };
};
var any = function (dictFoldable) {
    return function (dictHeytingAlgebra) {
        return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
    };
};
var elem = function (dictFoldable) {
    return function (dictEq) {
        return function ($184) {
            return any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Eq.eq(dictEq)($184));
        };
    };
};
var notElem = function (dictFoldable) {
    return function (dictEq) {
        return function (x) {
            return function ($185) {
                return !elem(dictFoldable)(dictEq)(x)($185);
            };
        };
    };
};
var or = function (dictFoldable) {
    return function (dictHeytingAlgebra) {
        return any(dictFoldable)(dictHeytingAlgebra)(Control_Category.id(Control_Category.categoryFn));
    };
};
var all = function (dictFoldable) {
    return function (dictHeytingAlgebra) {
        return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Conj.newtypeConj)(Data_Monoid_Conj.newtypeConj)(Data_Monoid_Conj.Conj)(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)));
    };
};
var and = function (dictFoldable) {
    return function (dictHeytingAlgebra) {
        return all(dictFoldable)(dictHeytingAlgebra)(Control_Category.id(Control_Category.categoryFn));
    };
};
module.exports = {
    Foldable: Foldable, 
    all: all, 
    and: and, 
    any: any, 
    elem: elem, 
    find: find, 
    findMap: findMap, 
    fold: fold, 
    foldM: foldM, 
    foldMap: foldMap, 
    foldMapDefaultL: foldMapDefaultL, 
    foldMapDefaultR: foldMapDefaultR, 
    foldl: foldl, 
    foldlDefault: foldlDefault, 
    foldr: foldr, 
    foldrDefault: foldrDefault, 
    for_: for_, 
    intercalate: intercalate, 
    length: length, 
    maximum: maximum, 
    maximumBy: maximumBy, 
    minimum: minimum, 
    minimumBy: minimumBy, 
    notElem: notElem, 
    "null": $$null, 
    oneOf: oneOf, 
    or: or, 
    product: product, 
    sequence_: sequence_, 
    sum: sum, 
    surround: surround, 
    surroundMap: surroundMap, 
    traverse_: traverse_, 
    foldableArray: foldableArray, 
    foldableMaybe: foldableMaybe, 
    foldableFirst: foldableFirst, 
    foldableLast: foldableLast, 
    foldableAdditive: foldableAdditive, 
    foldableDual: foldableDual, 
    foldableDisj: foldableDisj, 
    foldableConj: foldableConj, 
    foldableMultiplicative: foldableMultiplicative
};

},{"../Control.Alt":1,"../Control.Applicative":3,"../Control.Apply":5,"../Control.Bind":9,"../Control.Category":10,"../Control.Plus":34,"../Control.Semigroupoid":35,"../Data.Eq":58,"../Data.Function":73,"../Data.Functor":76,"../Data.HeytingAlgebra":80,"../Data.Maybe":91,"../Data.Maybe.First":89,"../Data.Maybe.Last":90,"../Data.Monoid":98,"../Data.Monoid.Additive":92,"../Data.Monoid.Conj":93,"../Data.Monoid.Disj":94,"../Data.Monoid.Dual":95,"../Data.Monoid.Endo":96,"../Data.Monoid.Multiplicative":97,"../Data.Newtype":100,"../Data.Ord":107,"../Data.Ordering":108,"../Data.Semigroup":114,"../Data.Semiring":116,"../Data.Unit":137,"../Prelude":228,"./foreign":62}],64:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Maybe_Last = require("../Data.Maybe.Last");
var Data_Monoid = require("../Data.Monoid");
var Data_Monoid_Additive = require("../Data.Monoid.Additive");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Endo = require("../Data.Monoid.Endo");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Tuple = (function () {
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    return Tuple;
})();
var FoldableWithIndex = function (Foldable0, foldMapWithIndex, foldlWithIndex, foldrWithIndex) {
    this.Foldable0 = Foldable0;
    this.foldMapWithIndex = foldMapWithIndex;
    this.foldlWithIndex = foldlWithIndex;
    this.foldrWithIndex = foldrWithIndex;
};
var foldrWithIndex = function (dict) {
    return dict.foldrWithIndex;
};
var traverseWithIndex_ = function (dictApplicative) {
    return function (dictFoldableWithIndex) {
        return function (f) {
            return foldrWithIndex(dictFoldableWithIndex)(function (i) {
                return function ($41) {
                    return Control_Apply.applySecond(dictApplicative.Apply0())(f(i)($41));
                };
            })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
        };
    };
};
var forWithIndex_ = function (dictApplicative) {
    return function (dictFoldableWithIndex) {
        return Data_Function.flip(traverseWithIndex_(dictApplicative)(dictFoldableWithIndex));
    };
};
var foldlWithIndex = function (dict) {
    return dict.foldlWithIndex;
};
var foldableWithIndexMultiplicative = new FoldableWithIndex(function () {
    return Data_Foldable.foldableMultiplicative;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableMultiplicative)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableMultiplicative)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableMultiplicative)(f(Data_Unit.unit));
});
var foldableWithIndexMaybe = new FoldableWithIndex(function () {
    return Data_Foldable.foldableMaybe;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableMaybe)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableMaybe)(f(Data_Unit.unit));
});
var foldableWithIndexLast = new FoldableWithIndex(function () {
    return Data_Foldable.foldableLast;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableLast)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableLast)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableLast)(f(Data_Unit.unit));
});
var foldableWithIndexFirst = new FoldableWithIndex(function () {
    return Data_Foldable.foldableFirst;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableFirst)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableFirst)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableFirst)(f(Data_Unit.unit));
});
var foldableWithIndexDual = new FoldableWithIndex(function () {
    return Data_Foldable.foldableDual;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableDual)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableDual)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableDual)(f(Data_Unit.unit));
});
var foldableWithIndexDisj = new FoldableWithIndex(function () {
    return Data_Foldable.foldableDisj;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableDisj)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableDisj)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableDisj)(f(Data_Unit.unit));
});
var foldableWithIndexConj = new FoldableWithIndex(function () {
    return Data_Foldable.foldableConj;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableConj)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableConj)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableConj)(f(Data_Unit.unit));
});
var foldableWithIndexAdditive = new FoldableWithIndex(function () {
    return Data_Foldable.foldableAdditive;
}, function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldMap(Data_Foldable.foldableAdditive)(dictMonoid)(f(Data_Unit.unit));
    };
}, function (f) {
    return Data_Foldable.foldl(Data_Foldable.foldableAdditive)(f(Data_Unit.unit));
}, function (f) {
    return Data_Foldable.foldr(Data_Foldable.foldableAdditive)(f(Data_Unit.unit));
});
var foldWithIndexM = function (dictFoldableWithIndex) {
    return function (dictMonad) {
        return function (f) {
            return function (a0) {
                return foldlWithIndex(dictFoldableWithIndex)(function (i) {
                    return function (ma) {
                        return function (b) {
                            return Control_Bind.bind(dictMonad.Bind1())(ma)(Data_Function.flip(f(i))(b));
                        };
                    };
                })(Control_Applicative.pure(dictMonad.Applicative0())(a0));
            };
        };
    };
};
var foldMapWithIndexDefaultR = function (dictFoldableWithIndex) {
    return function (dictMonoid) {
        return function (f) {
            return foldrWithIndex(dictFoldableWithIndex)(function (i) {
                return function (x) {
                    return function (acc) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(f(i)(x))(acc);
                    };
                };
            })(Data_Monoid.mempty(dictMonoid));
        };
    };
};
var foldableWithIndexArray = new FoldableWithIndex(function () {
    return Data_Foldable.foldableArray;
}, function (dictMonoid) {
    return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);
}, function (f) {
    return function (z) {
        return function ($42) {
            return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (y) {
                return function (v) {
                    return f(v.value0)(y)(v.value1);
                };
            })(z)(Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Tuple.create)($42));
        };
    };
}, function (f) {
    return function (z) {
        return function ($43) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (v) {
                return function (y) {
                    return f(v.value0)(v.value1)(y);
                };
            })(z)(Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Tuple.create)($43));
        };
    };
});
var foldMapWithIndexDefaultL = function (dictFoldableWithIndex) {
    return function (dictMonoid) {
        return function (f) {
            return foldlWithIndex(dictFoldableWithIndex)(function (i) {
                return function (acc) {
                    return function (x) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(i)(x));
                    };
                };
            })(Data_Monoid.mempty(dictMonoid));
        };
    };
};
var foldMapWithIndex = function (dict) {
    return dict.foldMapWithIndex;
};
var foldlWithIndexDefault = function (dictFoldableWithIndex) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(Data_Newtype.unwrap(Data_Monoid_Dual.newtypeDual)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function (i) {
                    return function ($44) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(c(i))($44)));
                    };
                })(xs)))(u);
            };
        };
    };
};
var foldrWithIndexDefault = function (dictFoldableWithIndex) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Endo.monoidEndo)(function (i) {
                    return function ($45) {
                        return Data_Monoid_Endo.Endo(c(i)($45));
                    };
                })(xs))(u);
            };
        };
    };
};
var surroundMapWithIndex = function (dictFoldableWithIndex) {
    return function (dictSemigroup) {
        return function (d) {
            return function (t) {
                return function (f) {
                    var joined = function (i) {
                        return function (a) {
                            return function (m) {
                                return Data_Semigroup.append(dictSemigroup)(d)(Data_Semigroup.append(dictSemigroup)(t(i)(a))(m));
                            };
                        };
                    };
                    return Data_Newtype.unwrap(Data_Monoid_Endo.newtypeEndo)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Endo.monoidEndo)(joined)(f))(d);
                };
            };
        };
    };
};
var findWithIndex = function (dictFoldableWithIndex) {
    return function (p) {
        var go = function (i) {
            return function (v) {
                return function (v1) {
                    if (v instanceof Data_Maybe.Nothing && p(i)(v1)) {
                        return new Data_Maybe.Just(v1);
                    };
                    return v;
                };
            };
        };
        return foldlWithIndex(dictFoldableWithIndex)(go)(Data_Maybe.Nothing.value);
    };
};
var anyWithIndex = function (dictFoldableWithIndex) {
    return function (dictHeytingAlgebra) {
        return function (t) {
            return function ($46) {
                return Data_Newtype.unwrap(Data_Monoid_Disj.newtypeDisj)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra))(function (i) {
                    return function ($47) {
                        return Data_Monoid_Disj.Disj(t(i)($47));
                    };
                })($46));
            };
        };
    };
};
var allWithIndex = function (dictFoldableWithIndex) {
    return function (dictHeytingAlgebra) {
        return function (t) {
            return function ($48) {
                return Data_Newtype.unwrap(Data_Monoid_Conj.newtypeConj)(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra))(function (i) {
                    return function ($49) {
                        return Data_Monoid_Conj.Conj(t(i)($49));
                    };
                })($48));
            };
        };
    };
};
module.exports = {
    FoldableWithIndex: FoldableWithIndex, 
    allWithIndex: allWithIndex, 
    anyWithIndex: anyWithIndex, 
    findWithIndex: findWithIndex, 
    foldMapWithIndex: foldMapWithIndex, 
    foldMapWithIndexDefaultL: foldMapWithIndexDefaultL, 
    foldMapWithIndexDefaultR: foldMapWithIndexDefaultR, 
    foldWithIndexM: foldWithIndexM, 
    foldlWithIndex: foldlWithIndex, 
    foldlWithIndexDefault: foldlWithIndexDefault, 
    foldrWithIndex: foldrWithIndex, 
    foldrWithIndexDefault: foldrWithIndexDefault, 
    forWithIndex_: forWithIndex_, 
    surroundMapWithIndex: surroundMapWithIndex, 
    traverseWithIndex_: traverseWithIndex_, 
    foldableWithIndexArray: foldableWithIndexArray, 
    foldableWithIndexMaybe: foldableWithIndexMaybe, 
    foldableWithIndexFirst: foldableWithIndexFirst, 
    foldableWithIndexLast: foldableWithIndexLast, 
    foldableWithIndexAdditive: foldableWithIndexAdditive, 
    foldableWithIndexDual: foldableWithIndexDual, 
    foldableWithIndexDisj: foldableWithIndexDisj, 
    foldableWithIndexConj: foldableWithIndexConj, 
    foldableWithIndexMultiplicative: foldableWithIndexMultiplicative
};

},{"../Control.Applicative":3,"../Control.Apply":5,"../Control.Bind":9,"../Control.Semigroupoid":35,"../Data.Foldable":63,"../Data.Function":73,"../Data.FunctorWithIndex":78,"../Data.Maybe":91,"../Data.Maybe.First":89,"../Data.Maybe.Last":90,"../Data.Monoid":98,"../Data.Monoid.Additive":92,"../Data.Monoid.Conj":93,"../Data.Monoid.Disj":94,"../Data.Monoid.Dual":95,"../Data.Monoid.Endo":96,"../Data.Monoid.Multiplicative":97,"../Data.Newtype":100,"../Data.Semigroup":114,"../Data.Unit":137,"../Prelude":228}],65:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad_Except = require("../Control.Monad.Except");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Either = require("../Data.Either");
var Data_Foreign = require("../Data.Foreign");
var Data_Foreign_Internal = require("../Data.Foreign.Internal");
var Data_Foreign_NullOrUndefined = require("../Data.Foreign.NullOrUndefined");
var Data_Functor = require("../Data.Functor");
var Data_Identity = require("../Data.Identity");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_StrMap = require("../Data.StrMap");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var Decode = function (decode) {
    this.decode = decode;
};
var Encode = function (encode) {
    this.encode = encode;
};
var stringEncode = new Encode(Data_Foreign.toForeign);
var stringDecode = new Decode(Data_Foreign.readString);
var numberEncode = new Encode(Data_Foreign.toForeign);
var numberDecode = new Decode(Data_Foreign.readNumber);
var intEncode = new Encode(Data_Foreign.toForeign);
var intDecode = new Decode(Data_Foreign.readInt);
var foreignEncode = new Encode(Control_Category.id(Control_Category.categoryFn));
var foreignDecode = new Decode(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)));
var encode = function (dict) {
    return dict.encode;
};
var encodeNullOrUndefined = function (dictEncode) {
    return new Encode(function (v) {
        return Data_Maybe.maybe(Data_Foreign_NullOrUndefined["undefined"])(encode(dictEncode))(v);
    });
};
var strMapEncode = function (dictEncode) {
    return new Encode(function ($10) {
        return Data_Foreign.toForeign(Data_StrMap.mapWithKey(function (v) {
            return encode(dictEncode);
        })($10));
    });
};
var decode = function (dict) {
    return dict.decode;
};
var decodeNullOrUndefined = function (dictDecode) {
    return new Decode(Data_Foreign_NullOrUndefined.readNullOrUndefined(decode(dictDecode)));
};
var strMapDecode = function (dictDecode) {
    return new Decode(Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(function ($11) {
        return Data_Traversable.sequence(Data_StrMap.traversableStrMap)(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_StrMap.mapWithKey(function (v) {
            return decode(dictDecode);
        })($11));
    })(Data_Foreign_Internal.readStrMap));
};
var charEncode = new Encode(Data_Foreign.toForeign);
var charDecode = new Decode(Data_Foreign.readChar);
var booleanEncode = new Encode(Data_Foreign.toForeign);
var booleanDecode = new Decode(Data_Foreign.readBoolean);
var arrayEncode = function (dictEncode) {
    return new Encode(function ($12) {
        return Data_Foreign.toForeign(Data_Functor.map(Data_Functor.functorArray)(encode(dictEncode))($12));
    });
};
var arrayDecode = function (dictDecode) {
    return new Decode((function () {
        var readElement = function (i) {
            return function (value) {
                return Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Foreign.ErrorAtIndex.create(i))))(decode(dictDecode)(value));
            };
        };
        var readElements = function (arr) {
            return Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Array.zipWith(readElement)(Data_Array.range(0)(Data_Array.length(arr)))(arr));
        };
        return Control_Bind.composeKleisli(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign.readArray)(readElements);
    })());
};
module.exports = {
    Decode: Decode, 
    Encode: Encode, 
    decode: decode, 
    encode: encode, 
    foreignDecode: foreignDecode, 
    stringDecode: stringDecode, 
    charDecode: charDecode, 
    booleanDecode: booleanDecode, 
    numberDecode: numberDecode, 
    intDecode: intDecode, 
    arrayDecode: arrayDecode, 
    strMapDecode: strMapDecode, 
    foreignEncode: foreignEncode, 
    stringEncode: stringEncode, 
    charEncode: charEncode, 
    booleanEncode: booleanEncode, 
    numberEncode: numberEncode, 
    intEncode: intEncode, 
    arrayEncode: arrayEncode, 
    decodeNullOrUndefined: decodeNullOrUndefined, 
    encodeNullOrUndefined: encodeNullOrUndefined, 
    strMapEncode: strMapEncode
};

},{"../Control.Applicative":3,"../Control.Bind":9,"../Control.Category":10,"../Control.Monad.Except":23,"../Control.Monad.Except.Trans":22,"../Control.Semigroupoid":35,"../Data.Array":40,"../Data.Bifunctor":47,"../Data.Either":56,"../Data.Foreign":70,"../Data.Foreign.Internal":66,"../Data.Foreign.NullOrUndefined":68,"../Data.Functor":76,"../Data.Identity":81,"../Data.List.Types":87,"../Data.Maybe":91,"../Data.StrMap":122,"../Data.Traversable":130,"../Prelude":228}],66:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Foreign = require("../Data.Foreign");
var Data_Function = require("../Data.Function");
var Data_Identity = require("../Data.Identity");
var Data_StrMap = require("../Data.StrMap");
var Prelude = require("../Prelude");
var isStrMap = function (v) {
    return Data_Foreign.tagOf(v) === "Object";
};
var readStrMap = function (value) {
    if (isStrMap(value)) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Foreign.unsafeFromForeign(value));
    };
    if (Data_Boolean.otherwise) {
        return Data_Foreign.fail(new Data_Foreign.TypeMismatch("StrMap", Data_Foreign.tagOf(value)));
    };
    throw new Error("Failed pattern match at Data.Foreign.Internal line 13, column 1 - line 13, column 44: " + [ value.constructor.name ]);
};
module.exports = {
    isStrMap: isStrMap, 
    readStrMap: readStrMap
};

},{"../Control.Applicative":3,"../Control.Monad.Except.Trans":22,"../Data.Boolean":49,"../Data.Eq":58,"../Data.Foreign":70,"../Data.Function":73,"../Data.Identity":81,"../Data.StrMap":122,"../Prelude":228}],67:[function(require,module,exports){
exports['undefined'] = undefined;

},{}],68:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Foreign = require("../Data.Foreign");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Identity = require("../Data.Identity");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var NullOrUndefined = function (x) {
    return x;
};
var unNullOrUndefined = function (v) {
    return v;
};
var readNullOrUndefined = function (v) {
    return function (value) {
        if (Data_Foreign.isNull(value) || Data_Foreign.isUndefined(value)) {
            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
        };
        return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(function ($23) {
            return NullOrUndefined(Data_Maybe.Just.create($23));
        })(v(value));
    };
};
var newtypeNullOrUndefined = new Data_Newtype.Newtype(function (n) {
    return n;
}, NullOrUndefined);
var showNullOrUndefined = function (dictShow) {
    return new Data_Show.Show(function (x) {
        return "(NullOrUndefined " + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(Data_Newtype.unwrap(newtypeNullOrUndefined)(x)) + ")");
    });
};
var eqNullOrUndefined = function (dictEq) {
    return new Data_Eq.Eq(function (x) {
        return function (y) {
            return Data_Eq.eq(Data_Maybe.eqMaybe(dictEq))(x)(y);
        };
    });
};
var ordNullOrUndefined = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqNullOrUndefined(dictOrd.Eq0());
    }, function (x) {
        return function (y) {
            return Data_Ord.compare(Data_Maybe.ordMaybe(dictOrd))(x)(y);
        };
    });
};
module.exports = {
    NullOrUndefined: NullOrUndefined, 
    readNullOrUndefined: readNullOrUndefined, 
    unNullOrUndefined: unNullOrUndefined, 
    newtypeNullOrUndefined: newtypeNullOrUndefined, 
    eqNullOrUndefined: eqNullOrUndefined, 
    ordNullOrUndefined: ordNullOrUndefined, 
    showNullOrUndefined: showNullOrUndefined, 
    "undefined": $foreign["undefined"]
};

},{"../Control.Applicative":3,"../Control.Monad.Except.Trans":22,"../Control.Semigroupoid":35,"../Data.Eq":58,"../Data.Foreign":70,"../Data.Functor":76,"../Data.HeytingAlgebra":80,"../Data.Identity":81,"../Data.Maybe":91,"../Data.Newtype":100,"../Data.Ord":107,"../Data.Semigroup":114,"../Data.Show":118,"../Prelude":228,"./foreign":67}],69:[function(require,module,exports){
"use strict";

exports.toForeign = function (value) {
  return value;
};

exports.unsafeFromForeign = function (value) {
  return value;
};

exports.typeOf = function (value) {
  return typeof value;
};

exports.tagOf = function (value) {
  return Object.prototype.toString.call(value).slice(8, -1);
};

exports.isNull = function (value) {
  return value === null;
};

exports.isUndefined = function (value) {
  return value === undefined;
};

exports.isArray = Array.isArray || function (value) {
  return Object.prototype.toString.call(value) === "[object Array]";
};

},{}],70:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Except = require("../Control.Monad.Except");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Identity = require("../Data.Identity");
var Data_Int = require("../Data.Int");
var Data_List_NonEmpty = require("../Data.List.NonEmpty");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_String = require("../Data.String");
var Prelude = require("../Prelude");
var ForeignError = (function () {
    function ForeignError(value0) {
        this.value0 = value0;
    };
    ForeignError.create = function (value0) {
        return new ForeignError(value0);
    };
    return ForeignError;
})();
var TypeMismatch = (function () {
    function TypeMismatch(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TypeMismatch.create = function (value0) {
        return function (value1) {
            return new TypeMismatch(value0, value1);
        };
    };
    return TypeMismatch;
})();
var ErrorAtIndex = (function () {
    function ErrorAtIndex(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtIndex.create = function (value0) {
        return function (value1) {
            return new ErrorAtIndex(value0, value1);
        };
    };
    return ErrorAtIndex;
})();
var ErrorAtProperty = (function () {
    function ErrorAtProperty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtProperty.create = function (value0) {
        return function (value1) {
            return new ErrorAtProperty(value0, value1);
        };
    };
    return ErrorAtProperty;
})();
var JSONError = (function () {
    function JSONError(value0) {
        this.value0 = value0;
    };
    JSONError.create = function (value0) {
        return new JSONError(value0);
    };
    return JSONError;
})();
var showForeignError = new Data_Show.Show(function (v) {
    if (v instanceof ForeignError) {
        return "(ForeignError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
    };
    if (v instanceof ErrorAtIndex) {
        return "(ErrorAtIndex " + (Data_Show.show(Data_Show.showInt)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
    };
    if (v instanceof ErrorAtProperty) {
        return "(ErrorAtProperty " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
    };
    if (v instanceof JSONError) {
        return "(JSONError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
    };
    if (v instanceof TypeMismatch) {
        return "(TypeMismatch " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
    };
    throw new Error("Failed pattern match at Data.Foreign line 64, column 1 - line 64, column 47: " + [ v.constructor.name ]);
});
var renderForeignError = function (v) {
    if (v instanceof ForeignError) {
        return v.value0;
    };
    if (v instanceof ErrorAtIndex) {
        return "Error at array index " + (Data_Show.show(Data_Show.showInt)(v.value0) + (": " + Data_Show.show(showForeignError)(v.value1)));
    };
    if (v instanceof ErrorAtProperty) {
        return "Error at property " + (Data_Show.show(Data_Show.showString)(v.value0) + (": " + Data_Show.show(showForeignError)(v.value1)));
    };
    if (v instanceof JSONError) {
        return "JSON error: " + v.value0;
    };
    if (v instanceof TypeMismatch) {
        return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
    };
    throw new Error("Failed pattern match at Data.Foreign line 74, column 1 - line 74, column 45: " + [ v.constructor.name ]);
};
var readUndefined = function (value) {
    if ($foreign.isUndefined(value)) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
    };
    if (Data_Boolean.otherwise) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_Maybe.Just(value));
    };
    throw new Error("Failed pattern match at Data.Foreign line 155, column 1 - line 155, column 46: " + [ value.constructor.name ]);
};
var readNullOrUndefined = function (value) {
    if ($foreign.isNull(value) || $foreign.isUndefined(value)) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
    };
    if (Data_Boolean.otherwise) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_Maybe.Just(value));
    };
    throw new Error("Failed pattern match at Data.Foreign line 160, column 1 - line 160, column 52: " + [ value.constructor.name ]);
};
var readNull = function (value) {
    if ($foreign.isNull(value)) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
    };
    if (Data_Boolean.otherwise) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Data_Maybe.Just(value));
    };
    throw new Error("Failed pattern match at Data.Foreign line 150, column 1 - line 150, column 41: " + [ value.constructor.name ]);
};
var fail = function ($121) {
    return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity))(Data_List_NonEmpty.singleton($121));
};
var readArray = function (value) {
    if ($foreign.isArray(value)) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
    };
    if (Data_Boolean.otherwise) {
        return fail(new TypeMismatch("array", $foreign.tagOf(value)));
    };
    throw new Error("Failed pattern match at Data.Foreign line 145, column 1 - line 145, column 42: " + [ value.constructor.name ]);
};
var unsafeReadTagged = function (tag) {
    return function (value) {
        if ($foreign.tagOf(value) === tag) {
            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
        };
        if (Data_Boolean.otherwise) {
            return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
        };
        throw new Error("Failed pattern match at Data.Foreign line 104, column 1 - line 104, column 55: " + [ tag.constructor.name, value.constructor.name ]);
    };
};
var readBoolean = unsafeReadTagged("Boolean");
var readNumber = unsafeReadTagged("Number");
var readInt = function (value) {
    var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Int", $foreign.tagOf(value))));
    var fromNumber = function ($122) {
        return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Int.fromNumber($122));
    };
    return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromNumber))(readNumber(value));
};
var readString = unsafeReadTagged("String");
var readChar = function (value) {
    var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Char", $foreign.tagOf(value))));
    var fromString = function ($123) {
        return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_String.toChar($123));
    };
    return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromString))(readString(value));
};
var eqForeignError = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof ForeignError && y instanceof ForeignError) {
            return x.value0 === y.value0;
        };
        if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
            return x.value0 === y.value0 && x.value1 === y.value1;
        };
        if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
            return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
        };
        if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
            return x.value0 === y.value0 && Data_Eq.eq(eqForeignError)(x.value1)(y.value1);
        };
        if (x instanceof JSONError && y instanceof JSONError) {
            return x.value0 === y.value0;
        };
        return false;
    };
});
var ordForeignError = new Data_Ord.Ord(function () {
    return eqForeignError;
}, function (x) {
    return function (y) {
        if (x instanceof ForeignError && y instanceof ForeignError) {
            return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
        };
        if (x instanceof ForeignError) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ForeignError) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof TypeMismatch && y instanceof TypeMismatch) {
            var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
        };
        if (x instanceof TypeMismatch) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof TypeMismatch) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ErrorAtIndex && y instanceof ErrorAtIndex) {
            var v = Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
        };
        if (x instanceof ErrorAtIndex) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ErrorAtIndex) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof ErrorAtProperty && y instanceof ErrorAtProperty) {
            var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(ordForeignError)(x.value1)(y.value1);
        };
        if (x instanceof ErrorAtProperty) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof ErrorAtProperty) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof JSONError && y instanceof JSONError) {
            return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
        };
        throw new Error("Failed pattern match at Data.Foreign line 62, column 8 - line 62, column 52: " + [ x.constructor.name, y.constructor.name ]);
    };
});
module.exports = {
    ForeignError: ForeignError, 
    TypeMismatch: TypeMismatch, 
    ErrorAtIndex: ErrorAtIndex, 
    ErrorAtProperty: ErrorAtProperty, 
    JSONError: JSONError, 
    fail: fail, 
    readArray: readArray, 
    readBoolean: readBoolean, 
    readChar: readChar, 
    readInt: readInt, 
    readNull: readNull, 
    readNullOrUndefined: readNullOrUndefined, 
    readNumber: readNumber, 
    readString: readString, 
    readUndefined: readUndefined, 
    renderForeignError: renderForeignError, 
    unsafeReadTagged: unsafeReadTagged, 
    eqForeignError: eqForeignError, 
    ordForeignError: ordForeignError, 
    showForeignError: showForeignError, 
    isArray: $foreign.isArray, 
    isNull: $foreign.isNull, 
    isUndefined: $foreign.isUndefined, 
    tagOf: $foreign.tagOf, 
    toForeign: $foreign.toForeign, 
    typeOf: $foreign.typeOf, 
    unsafeFromForeign: $foreign.unsafeFromForeign
};

},{"../Control.Applicative":3,"../Control.Monad.Error.Class":21,"../Control.Monad.Except":23,"../Control.Monad.Except.Trans":22,"../Control.Semigroupoid":35,"../Data.Boolean":49,"../Data.Either":56,"../Data.Eq":58,"../Data.Function":73,"../Data.HeytingAlgebra":80,"../Data.Identity":81,"../Data.Int":85,"../Data.List.NonEmpty":86,"../Data.Maybe":91,"../Data.Ord":107,"../Data.Ordering":108,"../Data.Semigroup":114,"../Data.Show":118,"../Data.String":126,"../Prelude":228,"./foreign":69}],71:[function(require,module,exports){
"use strict";

// module Data.Function.Uncurried

exports.mkFn0 = function (fn) {
  return function () {
    return fn({});
  };
};

exports.mkFn2 = function (fn) {
  /* jshint maxparams: 2 */
  return function (a, b) {
    return fn(a)(b);
  };
};

exports.mkFn3 = function (fn) {
  /* jshint maxparams: 3 */
  return function (a, b, c) {
    return fn(a)(b)(c);
  };
};

exports.mkFn4 = function (fn) {
  /* jshint maxparams: 4 */
  return function (a, b, c, d) {
    return fn(a)(b)(c)(d);
  };
};

exports.mkFn5 = function (fn) {
  /* jshint maxparams: 5 */
  return function (a, b, c, d, e) {
    return fn(a)(b)(c)(d)(e);
  };
};

exports.mkFn6 = function (fn) {
  /* jshint maxparams: 6 */
  return function (a, b, c, d, e, f) {
    return fn(a)(b)(c)(d)(e)(f);
  };
};

exports.mkFn7 = function (fn) {
  /* jshint maxparams: 7 */
  return function (a, b, c, d, e, f, g) {
    return fn(a)(b)(c)(d)(e)(f)(g);
  };
};

exports.mkFn8 = function (fn) {
  /* jshint maxparams: 8 */
  return function (a, b, c, d, e, f, g, h) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h);
  };
};

exports.mkFn9 = function (fn) {
  /* jshint maxparams: 9 */
  return function (a, b, c, d, e, f, g, h, i) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);
  };
};

exports.mkFn10 = function (fn) {
  /* jshint maxparams: 10 */
  return function (a, b, c, d, e, f, g, h, i, j) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);
  };
};

exports.runFn0 = function (fn) {
  return fn();
};

exports.runFn2 = function (fn) {
  return function (a) {
    return function (b) {
      return fn(a, b);
    };
  };
};

exports.runFn3 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return fn(a, b, c);
      };
    };
  };
};

exports.runFn4 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return fn(a, b, c, d);
        };
      };
    };
  };
};

exports.runFn5 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return fn(a, b, c, d, e);
          };
        };
      };
    };
  };
};

exports.runFn6 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return fn(a, b, c, d, e, f);
            };
          };
        };
      };
    };
  };
};

exports.runFn7 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return fn(a, b, c, d, e, f, g);
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn8 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return fn(a, b, c, d, e, f, g, h);
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn9 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return fn(a, b, c, d, e, f, g, h, i);
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn10 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return function (j) {
                      return fn(a, b, c, d, e, f, g, h, i, j);
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

},{}],72:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Data_Unit = require("../Data.Unit");
var runFn1 = function (f) {
    return f;
};
var mkFn1 = function (f) {
    return f;
};
module.exports = {
    mkFn1: mkFn1, 
    runFn1: runFn1, 
    mkFn0: $foreign.mkFn0, 
    mkFn10: $foreign.mkFn10, 
    mkFn2: $foreign.mkFn2, 
    mkFn3: $foreign.mkFn3, 
    mkFn4: $foreign.mkFn4, 
    mkFn5: $foreign.mkFn5, 
    mkFn6: $foreign.mkFn6, 
    mkFn7: $foreign.mkFn7, 
    mkFn8: $foreign.mkFn8, 
    mkFn9: $foreign.mkFn9, 
    runFn0: $foreign.runFn0, 
    runFn10: $foreign.runFn10, 
    runFn2: $foreign.runFn2, 
    runFn3: $foreign.runFn3, 
    runFn4: $foreign.runFn4, 
    runFn5: $foreign.runFn5, 
    runFn6: $foreign.runFn6, 
    runFn7: $foreign.runFn7, 
    runFn8: $foreign.runFn8, 
    runFn9: $foreign.runFn9
};

},{"../Data.Unit":137,"./foreign":71}],73:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Category = require("../Control.Category");
var on = function (f) {
    return function (g) {
        return function (x) {
            return function (y) {
                return f(g(x))(g(y));
            };
        };
    };
};
var flip = function (f) {
    return function (b) {
        return function (a) {
            return f(a)(b);
        };
    };
};
var $$const = function (a) {
    return function (v) {
        return a;
    };
};
var applyFlipped = function (x) {
    return function (f) {
        return f(x);
    };
};
var apply = function (f) {
    return function (x) {
        return f(x);
    };
};
module.exports = {
    apply: apply, 
    applyFlipped: applyFlipped, 
    "const": $$const, 
    flip: flip, 
    on: on
};

},{"../Control.Category":10}],74:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Functor = require("../Data.Functor");
var Invariant = function (imap) {
    this.imap = imap;
};
var imapF = function (dictFunctor) {
    return function (f) {
        return function (v) {
            return Data_Functor.map(dictFunctor)(f);
        };
    };
};
var invariantArray = new Invariant(imapF(Data_Functor.functorArray));
var invariantFn = new Invariant(imapF(Data_Functor.functorFn));
var imap = function (dict) {
    return dict.imap;
};
module.exports = {
    Invariant: Invariant, 
    imap: imap, 
    imapF: imapF, 
    invariantFn: invariantFn, 
    invariantArray: invariantArray
};

},{"../Data.Functor":76}],75:[function(require,module,exports){
"use strict";

exports.arrayMap = function (f) {
  return function (arr) {
    var l = arr.length;
    var result = new Array(l);
    for (var i = 0; i < l; i++) {
      result[i] = f(arr[i]);
    }
    return result;
  };
};

},{}],76:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Unit = require("../Data.Unit");
var Functor = function (map) {
    this.map = map;
};
var map = function (dict) {
    return dict.map;
};
var mapFlipped = function (dictFunctor) {
    return function (fa) {
        return function (f) {
            return map(dictFunctor)(f)(fa);
        };
    };
};
var $$void = function (dictFunctor) {
    return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
};
var voidLeft = function (dictFunctor) {
    return function (f) {
        return function (x) {
            return map(dictFunctor)(Data_Function["const"](x))(f);
        };
    };
};
var voidRight = function (dictFunctor) {
    return function (x) {
        return map(dictFunctor)(Data_Function["const"](x));
    };
};
var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
var functorArray = new Functor($foreign.arrayMap);
var flap = function (dictFunctor) {
    return function (ff) {
        return function (x) {
            return map(dictFunctor)(function (f) {
                return f(x);
            })(ff);
        };
    };
};
module.exports = {
    Functor: Functor, 
    flap: flap, 
    map: map, 
    mapFlipped: mapFlipped, 
    "void": $$void, 
    voidLeft: voidLeft, 
    voidRight: voidRight, 
    functorFn: functorFn, 
    functorArray: functorArray
};

},{"../Control.Semigroupoid":35,"../Data.Function":73,"../Data.Unit":137,"./foreign":75}],77:[function(require,module,exports){
"use strict";

exports.mapWithIndexArray = function (f) {
  return function (xs) {
    var l = xs.length;
    var result = Array(l);
    for (var i = 0; i < l; i++) {
      result[i] = f(i)(xs[i]);
    }
    return result;
  };
};

},{}],78:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Maybe_Last = require("../Data.Maybe.Last");
var Data_Monoid_Additive = require("../Data.Monoid.Additive");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var FunctorWithIndex = function (Functor0, mapWithIndex) {
    this.Functor0 = Functor0;
    this.mapWithIndex = mapWithIndex;
};
var mapWithIndex = function (dict) {
    return dict.mapWithIndex;
};
var functorWithIndexMultiplicative = new FunctorWithIndex(function () {
    return Data_Monoid_Multiplicative.functorMultiplicative;
}, function (f) {
    return Data_Functor.map(Data_Monoid_Multiplicative.functorMultiplicative)(f(Data_Unit.unit));
});
var functorWithIndexMaybe = new FunctorWithIndex(function () {
    return Data_Maybe.functorMaybe;
}, function (f) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(f(Data_Unit.unit));
});
var functorWithIndexLast = new FunctorWithIndex(function () {
    return Data_Maybe_Last.functorLast;
}, function (f) {
    return Data_Functor.map(Data_Maybe_Last.functorLast)(f(Data_Unit.unit));
});
var functorWithIndexFirst = new FunctorWithIndex(function () {
    return Data_Maybe_First.functorFirst;
}, function (f) {
    return Data_Functor.map(Data_Maybe_First.functorFirst)(f(Data_Unit.unit));
});
var functorWithIndexDual = new FunctorWithIndex(function () {
    return Data_Monoid_Dual.functorDual;
}, function (f) {
    return Data_Functor.map(Data_Monoid_Dual.functorDual)(f(Data_Unit.unit));
});
var functorWithIndexDisj = new FunctorWithIndex(function () {
    return Data_Monoid_Disj.functorDisj;
}, function (f) {
    return Data_Functor.map(Data_Monoid_Disj.functorDisj)(f(Data_Unit.unit));
});
var functorWithIndexConj = new FunctorWithIndex(function () {
    return Data_Monoid_Conj.functorConj;
}, function (f) {
    return Data_Functor.map(Data_Monoid_Conj.functorConj)(f(Data_Unit.unit));
});
var functorWithIndexArray = new FunctorWithIndex(function () {
    return Data_Functor.functorArray;
}, $foreign.mapWithIndexArray);
var functorWithIndexAdditive = new FunctorWithIndex(function () {
    return Data_Monoid_Additive.functorAdditive;
}, function (f) {
    return Data_Functor.map(Data_Monoid_Additive.functorAdditive)(f(Data_Unit.unit));
});
module.exports = {
    FunctorWithIndex: FunctorWithIndex, 
    mapWithIndex: mapWithIndex, 
    functorWithIndexArray: functorWithIndexArray, 
    functorWithIndexMaybe: functorWithIndexMaybe, 
    functorWithIndexFirst: functorWithIndexFirst, 
    functorWithIndexLast: functorWithIndexLast, 
    functorWithIndexAdditive: functorWithIndexAdditive, 
    functorWithIndexDual: functorWithIndexDual, 
    functorWithIndexConj: functorWithIndexConj, 
    functorWithIndexDisj: functorWithIndexDisj, 
    functorWithIndexMultiplicative: functorWithIndexMultiplicative
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Maybe.First":89,"../Data.Maybe.Last":90,"../Data.Monoid.Additive":92,"../Data.Monoid.Conj":93,"../Data.Monoid.Disj":94,"../Data.Monoid.Dual":95,"../Data.Monoid.Multiplicative":97,"../Data.Unit":137,"../Prelude":228,"./foreign":77}],79:[function(require,module,exports){
"use strict";

exports.boolConj = function (b1) {
  return function (b2) {
    return b1 && b2;
  };
};

exports.boolDisj = function (b1) {
  return function (b2) {
    return b1 || b2;
  };
};

exports.boolNot = function (b) {
  return !b;
};

},{}],80:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Data_Unit = require("../Data.Unit");
var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
    this.conj = conj;
    this.disj = disj;
    this.ff = ff;
    this.implies = implies;
    this.not = not;
    this.tt = tt;
};
var tt = function (dict) {
    return dict.tt;
};
var not = function (dict) {
    return dict.not;
};
var implies = function (dict) {
    return dict.implies;
};
var heytingAlgebraUnit = new HeytingAlgebra(function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, Data_Unit.unit, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, function (v) {
    return Data_Unit.unit;
}, Data_Unit.unit);
var ff = function (dict) {
    return dict.ff;
};
var disj = function (dict) {
    return dict.disj;
};
var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
    return function (b) {
        return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
    };
}, $foreign.boolNot, true);
var conj = function (dict) {
    return dict.conj;
};
var heytingAlgebraFunction = function (dictHeytingAlgebra) {
    return new HeytingAlgebra(function (f) {
        return function (g) {
            return function (a) {
                return conj(dictHeytingAlgebra)(f(a))(g(a));
            };
        };
    }, function (f) {
        return function (g) {
            return function (a) {
                return disj(dictHeytingAlgebra)(f(a))(g(a));
            };
        };
    }, function (v) {
        return ff(dictHeytingAlgebra);
    }, function (f) {
        return function (g) {
            return function (a) {
                return implies(dictHeytingAlgebra)(f(a))(g(a));
            };
        };
    }, function (f) {
        return function (a) {
            return not(dictHeytingAlgebra)(f(a));
        };
    }, function (v) {
        return tt(dictHeytingAlgebra);
    });
};
module.exports = {
    HeytingAlgebra: HeytingAlgebra, 
    conj: conj, 
    disj: disj, 
    ff: ff, 
    implies: implies, 
    not: not, 
    tt: tt, 
    heytingAlgebraBoolean: heytingAlgebraBoolean, 
    heytingAlgebraUnit: heytingAlgebraUnit, 
    heytingAlgebraFunction: heytingAlgebraFunction
};

},{"../Data.Unit":137,"./foreign":79}],81:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad = require("../Control.Monad");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Data_Bounded = require("../Data.Bounded");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Field = require("../Data.Field");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var Identity = function (x) {
    return x;
};
var showIdentity = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Identity " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semiringIdentity = function (dictSemiring) {
    return dictSemiring;
};
var semigroupIdenity = function (dictSemigroup) {
    return dictSemigroup;
};
var ringIdentity = function (dictRing) {
    return dictRing;
};
var ordIdentity = function (dictOrd) {
    return dictOrd;
};
var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
    return n;
}, Identity);
var monoidIdentity = function (dictMonoid) {
    return dictMonoid;
};
var lazyIdentity = function (dictLazy) {
    return dictLazy;
};
var heytingAlgebraIdentity = function (dictHeytingAlgebra) {
    return dictHeytingAlgebra;
};
var functorIdentity = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var invariantIdentity = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorIdentity));
var foldableIdentity = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var traversableIdentity = new Data_Traversable.Traversable(function () {
    return foldableIdentity;
}, function () {
    return functorIdentity;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Identity)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Identity)(f(v));
        };
    };
});
var fieldIdentity = function (dictField) {
    return dictField;
};
var extendIdentity = new Control_Extend.Extend(function () {
    return functorIdentity;
}, function (f) {
    return function (m) {
        return f(m);
    };
});
var euclideanRingIdentity = function (dictEuclideanRing) {
    return dictEuclideanRing;
};
var eqIdentity = function (dictEq) {
    return dictEq;
};
var eq1Identity = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqIdentity(dictEq));
});
var ord1Identity = new Data_Ord.Ord1(function () {
    return eq1Identity;
}, function (dictOrd) {
    return Data_Ord.compare(ordIdentity(dictOrd));
});
var comonadIdentity = new Control_Comonad.Comonad(function () {
    return extendIdentity;
}, function (v) {
    return v;
});
var commutativeRingIdentity = function (dictCommutativeRing) {
    return dictCommutativeRing;
};
var boundedIdentity = function (dictBounded) {
    return dictBounded;
};
var booleanAlgebraIdentity = function (dictBooleanAlgebra) {
    return dictBooleanAlgebra;
};
var applyIdentity = new Control_Apply.Apply(function () {
    return functorIdentity;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindIdentity = new Control_Bind.Bind(function () {
    return applyIdentity;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeIdentity = new Control_Applicative.Applicative(function () {
    return applyIdentity;
}, Identity);
var monadIdentity = new Control_Monad.Monad(function () {
    return applicativeIdentity;
}, function () {
    return bindIdentity;
});
var altIdentity = new Control_Alt.Alt(function () {
    return functorIdentity;
}, function (x) {
    return function (v) {
        return x;
    };
});
module.exports = {
    Identity: Identity, 
    newtypeIdentity: newtypeIdentity, 
    eqIdentity: eqIdentity, 
    ordIdentity: ordIdentity, 
    boundedIdentity: boundedIdentity, 
    heytingAlgebraIdentity: heytingAlgebraIdentity, 
    booleanAlgebraIdentity: booleanAlgebraIdentity, 
    semigroupIdenity: semigroupIdenity, 
    monoidIdentity: monoidIdentity, 
    semiringIdentity: semiringIdentity, 
    euclideanRingIdentity: euclideanRingIdentity, 
    ringIdentity: ringIdentity, 
    commutativeRingIdentity: commutativeRingIdentity, 
    fieldIdentity: fieldIdentity, 
    lazyIdentity: lazyIdentity, 
    showIdentity: showIdentity, 
    eq1Identity: eq1Identity, 
    ord1Identity: ord1Identity, 
    functorIdentity: functorIdentity, 
    invariantIdentity: invariantIdentity, 
    altIdentity: altIdentity, 
    applyIdentity: applyIdentity, 
    applicativeIdentity: applicativeIdentity, 
    bindIdentity: bindIdentity, 
    monadIdentity: monadIdentity, 
    extendIdentity: extendIdentity, 
    comonadIdentity: comonadIdentity, 
    foldableIdentity: foldableIdentity, 
    traversableIdentity: traversableIdentity
};

},{"../Control.Alt":1,"../Control.Applicative":3,"../Control.Apply":5,"../Control.Bind":9,"../Control.Comonad":11,"../Control.Extend":13,"../Control.Lazy":14,"../Control.Monad":31,"../Data.BooleanAlgebra":50,"../Data.Bounded":52,"../Data.CommutativeRing":53,"../Data.Eq":58,"../Data.EuclideanRing":60,"../Data.Field":61,"../Data.Foldable":63,"../Data.Functor":76,"../Data.Functor.Invariant":74,"../Data.HeytingAlgebra":80,"../Data.Monoid":98,"../Data.Newtype":100,"../Data.Ord":107,"../Data.Ring":110,"../Data.Semigroup":114,"../Data.Semiring":116,"../Data.Show":118,"../Data.Traversable":130,"../Prelude":228}],82:[function(require,module,exports){
"use strict";

// module Data.Int.Bits

exports.and = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 & n2;
  };
};

exports.or = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 | n2;
  };
};

exports.xor = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 ^ n2;
  };
};

exports.shl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 << n2;
  };
};

exports.shr = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 >> n2;
  };
};

exports.zshr = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 >>> n2;
  };
};

exports.complement = function (n) {
  /* jshint bitwise: false */
  return ~n;
};

},{}],83:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
module.exports = {
    and: $foreign.and, 
    complement: $foreign.complement, 
    or: $foreign.or, 
    shl: $foreign.shl, 
    shr: $foreign.shr, 
    xor: $foreign.xor, 
    zshr: $foreign.zshr
};

},{"./foreign":82}],84:[function(require,module,exports){
"use strict";

// module Data.Int

exports.fromNumberImpl = function (just) {
  return function (nothing) {
    return function (n) {
      /* jshint bitwise: false */
      return (n | 0) === n ? just(n) : nothing;
    };
  };
};

exports.toNumber = function (n) {
  return n;
};

exports.fromStringAsImpl = function (just) {
  return function (nothing) {
    return function (radix) {
      var digits;
      if (radix < 11) {
        digits = "[0-" + (radix - 1).toString() + "]";
      } else if (radix === 11) {
        digits = "[0-9a]";
      } else {
        digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
      }
      var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");

      return function (s) {
        /* jshint bitwise: false */
        if (pattern.test(s)) {
          var i = parseInt(s, radix);
          return (i | 0) === i ? just(i) : nothing;
        } else {
          return nothing;
        }
      };
    };
  };
};

exports.toStringAs = function (radix) {
  return function (i) {
    return i.toString(radix);
  };
};

exports.pow = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return Math.pow(x,y) | 0;
  };
};

},{}],85:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Int_Bits = require("../Data.Int.Bits");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Show = require("../Data.Show");
var Global = require("../Global");
var $$Math = require("../Math");
var Prelude = require("../Prelude");
var Radix = function (x) {
    return x;
};
var Even = (function () {
    function Even() {

    };
    Even.value = new Even();
    return Even;
})();
var Odd = (function () {
    function Odd() {

    };
    Odd.value = new Odd();
    return Odd;
})();
var showParity = new Data_Show.Show(function (v) {
    if (v instanceof Even) {
        return "Even";
    };
    if (v instanceof Odd) {
        return "Odd";
    };
    throw new Error("Failed pattern match at Data.Int line 88, column 1 - line 88, column 35: " + [ v.constructor.name ]);
});
var radix = function (n) {
    if (n >= 2 && n <= 36) {
        return new Data_Maybe.Just(n);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
    };
    throw new Error("Failed pattern match at Data.Int line 148, column 1 - line 148, column 28: " + [ n.constructor.name ]);
};
var odd = function (x) {
    return (x & 1) !== 0;
};
var octal = 8;
var hexadecimal = 16;
var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var fromString = fromStringAs(10);
var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var unsafeClamp = function (x) {
    if (x === Global.infinity) {
        return 0;
    };
    if (x === -Global.infinity) {
        return 0;
    };
    if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
        return Data_Bounded.top(Data_Bounded.boundedInt);
    };
    if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
        return Data_Bounded.bottom(Data_Bounded.boundedInt);
    };
    if (Data_Boolean.otherwise) {
        return Data_Maybe.fromMaybe(0)(fromNumber(x));
    };
    throw new Error("Failed pattern match at Data.Int line 64, column 1 - line 64, column 29: " + [ x.constructor.name ]);
};
var round = function ($13) {
    return unsafeClamp($$Math.round($13));
};
var floor = function ($14) {
    return unsafeClamp($$Math.floor($14));
};
var even = function (x) {
    return (x & 1) === 0;
};
var parity = function (n) {
    var $8 = even(n);
    if ($8) {
        return Even.value;
    };
    return Odd.value;
};
var eqParity = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Even && y instanceof Even) {
            return true;
        };
        if (x instanceof Odd && y instanceof Odd) {
            return true;
        };
        return false;
    };
});
var ordParity = new Data_Ord.Ord(function () {
    return eqParity;
}, function (x) {
    return function (y) {
        if (x instanceof Even && y instanceof Even) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Even) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Even) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Odd && y instanceof Odd) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Data.Int line 86, column 8 - line 86, column 40: " + [ x.constructor.name, y.constructor.name ]);
    };
});
var decimal = 10;
var ceil = function ($15) {
    return unsafeClamp($$Math.ceil($15));
};
var boundedParity = new Data_Bounded.Bounded(function () {
    return ordParity;
}, Even.value, Odd.value);
var binary = 2;
var base36 = 36;
module.exports = {
    Even: Even, 
    Odd: Odd, 
    base36: base36, 
    binary: binary, 
    ceil: ceil, 
    decimal: decimal, 
    even: even, 
    floor: floor, 
    fromNumber: fromNumber, 
    fromString: fromString, 
    fromStringAs: fromStringAs, 
    hexadecimal: hexadecimal, 
    octal: octal, 
    odd: odd, 
    parity: parity, 
    radix: radix, 
    round: round, 
    eqParity: eqParity, 
    ordParity: ordParity, 
    showParity: showParity, 
    boundedParity: boundedParity, 
    pow: $foreign.pow, 
    toNumber: $foreign.toNumber, 
    toStringAs: $foreign.toStringAs
};

},{"../Control.Semigroupoid":35,"../Data.Boolean":49,"../Data.Bounded":52,"../Data.Eq":58,"../Data.HeytingAlgebra":80,"../Data.Int.Bits":83,"../Data.Maybe":91,"../Data.Ord":107,"../Data.Ordering":108,"../Data.Ring":110,"../Data.Show":118,"../Global":140,"../Math":143,"../Prelude":228,"./foreign":84}],86:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable");
var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable");
var Data_Semiring = require("../Data.Semiring");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var zipWith = function (f) {
    return function (v) {
        return function (v1) {
            return new Data_NonEmpty.NonEmpty(f(v.value0)(v1.value0), Data_List.zipWith(f)(v.value1)(v1.value1));
        };
    };
};
var zipWithA = function (dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Semigroup_Traversable.sequence1(Data_List_Types.traversable1NonEmptyList)(dictApplicative.Apply0())(zipWith(f)(xs)(ys));
            };
        };
    };
};
var zip = zipWith(Data_Tuple.Tuple.create);
var wrappedOperation2 = function (name) {
    return function (f) {
        return function (v) {
            return function (v1) {
                var v2 = f(new Data_List_Types.Cons(v.value0, v.value1))(new Data_List_Types.Cons(v1.value0, v1.value1));
                if (v2 instanceof Data_List_Types.Cons) {
                    return new Data_NonEmpty.NonEmpty(v2.value0, v2.value1);
                };
                if (v2 instanceof Data_List_Types.Nil) {
                    return Partial_Unsafe.unsafeCrashWith("Impossible: empty list in NonEmptyList " + name);
                };
                throw new Error("Failed pattern match at Data.List.NonEmpty line 101, column 3 - line 103, column 81: " + [ v2.constructor.name ]);
            };
        };
    };
};
var wrappedOperation = function (name) {
    return function (f) {
        return function (v) {
            var v1 = f(new Data_List_Types.Cons(v.value0, v.value1));
            if (v1 instanceof Data_List_Types.Cons) {
                return new Data_NonEmpty.NonEmpty(v1.value0, v1.value1);
            };
            if (v1 instanceof Data_List_Types.Nil) {
                return Partial_Unsafe.unsafeCrashWith("Impossible: empty list in NonEmptyList " + name);
            };
            throw new Error("Failed pattern match at Data.List.NonEmpty line 88, column 3 - line 90, column 81: " + [ v1.constructor.name ]);
        };
    };
};
var updateAt = function (i) {
    return function (a) {
        return function (v) {
            if (i === 0) {
                return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(a, v.value1));
            };
            if (Data_Boolean.otherwise) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function ($156) {
                    return Data_List_Types.NonEmptyList((function (v1) {
                        return new Data_NonEmpty.NonEmpty(v.value0, v1);
                    })($156));
                })(Data_List.updateAt(i - 1 | 0)(a)(v.value1));
            };
            throw new Error("Failed pattern match at Data.List.NonEmpty line 187, column 1 - line 187, column 75: " + [ i.constructor.name, a.constructor.name, v.constructor.name ]);
        };
    };
};
var unzip = function (ts) {
    return new Data_Tuple.Tuple(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Tuple.fst)(ts), Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Tuple.snd)(ts));
};
var unsnoc = function (v) {
    var v1 = Data_List.unsnoc(v.value1);
    if (v1 instanceof Data_Maybe.Nothing) {
        return {
            init: Data_List_Types.Nil.value, 
            last: v.value0
        };
    };
    if (v1 instanceof Data_Maybe.Just) {
        return {
            init: new Data_List_Types.Cons(v.value0, v1.value0.init), 
            last: v1.value0.last
        };
    };
    throw new Error("Failed pattern match at Data.List.NonEmpty line 149, column 35 - line 151, column 50: " + [ v1.constructor.name ]);
};
var unionBy = function ($157) {
    return wrappedOperation2("unionBy")(Data_List.unionBy($157));
};
var union = function (dictEq) {
    return wrappedOperation2("union")(Data_List.union(dictEq));
};
var uncons = function (v) {
    return {
        head: v.value0, 
        tail: v.value1
    };
};
var toList = function (v) {
    return new Data_List_Types.Cons(v.value0, v.value1);
};
var toUnfoldable = function (dictUnfoldable) {
    return function ($158) {
        return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
                return new Data_Tuple.Tuple(rec.head, rec.tail);
            })(Data_List.uncons(xs));
        })(toList($158));
    };
};
var tail = function (v) {
    return v.value1;
};
var sortBy = function ($159) {
    return wrappedOperation("sortBy")(Data_List.sortBy($159));
};
var sort = function (dictOrd) {
    return function (xs) {
        return sortBy(Data_Ord.compare(dictOrd))(xs);
    };
};
var snoc = function (v) {
    return function (y) {
        return new Data_NonEmpty.NonEmpty(v.value0, Data_List.snoc(v.value1)(y));
    };
};
var singleton = function ($160) {
    return Data_List_Types.NonEmptyList(Data_NonEmpty.singleton(Data_List_Types.plusList)($160));
};
var reverse = wrappedOperation("reverse")(Data_List.reverse);
var nubBy = function ($161) {
    return wrappedOperation("nubBy")(Data_List.nubBy($161));
};
var nub = function (dictEq) {
    return wrappedOperation("nub")(Data_List.nub(dictEq));
};
var modifyAt = function (i) {
    return function (f) {
        return function (v) {
            if (i === 0) {
                return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(f(v.value0), v.value1));
            };
            if (Data_Boolean.otherwise) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function ($162) {
                    return Data_List_Types.NonEmptyList((function (v1) {
                        return new Data_NonEmpty.NonEmpty(v.value0, v1);
                    })($162));
                })(Data_List.modifyAt(i - 1 | 0)(f)(v.value1));
            };
            throw new Error("Failed pattern match at Data.List.NonEmpty line 192, column 1 - line 192, column 82: " + [ i.constructor.name, f.constructor.name, v.constructor.name ]);
        };
    };
};
var mapWithIndex = function ($163) {
    return wrappedOperation("mapWithIndex")(Data_List.mapWithIndex($163));
};
var lift = function (f) {
    return function (v) {
        return f(new Data_List_Types.Cons(v.value0, v.value1));
    };
};
var mapMaybe = function ($164) {
    return lift(Data_List.mapMaybe($164));
};
var partition = function ($165) {
    return lift(Data_List.partition($165));
};
var span = function ($166) {
    return lift(Data_List.span($166));
};
var take = function ($167) {
    return lift(Data_List.take($167));
};
var takeWhile = function ($168) {
    return lift(Data_List.takeWhile($168));
};
var length = function (v) {
    return 1 + Data_List.length(v.value1) | 0;
};
var last = function (v) {
    return Data_Maybe.fromMaybe(v.value0)(Data_List.last(v.value1));
};
var intersectBy = function ($169) {
    return wrappedOperation2("intersectBy")(Data_List.intersectBy($169));
};
var intersect = function (dictEq) {
    return wrappedOperation2("intersect")(Data_List.intersect(dictEq));
};
var insertAt = function (i) {
    return function (a) {
        return function (v) {
            if (i === 0) {
                return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(a, new Data_List_Types.Cons(v.value0, v.value1)));
            };
            if (Data_Boolean.otherwise) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function ($170) {
                    return Data_List_Types.NonEmptyList((function (v1) {
                        return new Data_NonEmpty.NonEmpty(v.value0, v1);
                    })($170));
                })(Data_List.insertAt(i - 1 | 0)(a)(v.value1));
            };
            throw new Error("Failed pattern match at Data.List.NonEmpty line 182, column 1 - line 182, column 75: " + [ i.constructor.name, a.constructor.name, v.constructor.name ]);
        };
    };
};
var init = function (v) {
    return Data_Maybe.maybe(Data_List_Types.Nil.value)(function (v1) {
        return new Data_List_Types.Cons(v.value0, v1);
    })(Data_List.init(v.value1));
};
var index = function (v) {
    return function (i) {
        if (i === 0) {
            return new Data_Maybe.Just(v.value0);
        };
        if (Data_Boolean.otherwise) {
            return Data_List.index(v.value1)(i - 1 | 0);
        };
        throw new Error("Failed pattern match at Data.List.NonEmpty line 156, column 1 - line 156, column 52: " + [ v.constructor.name, i.constructor.name ]);
    };
};
var head = function (v) {
    return v.value0;
};
var groupBy = function ($171) {
    return wrappedOperation("groupBy")(Data_List.groupBy($171));
};
var group$prime = function (dictOrd) {
    return wrappedOperation("group'")(Data_List["group'"](dictOrd));
};
var group = function (dictEq) {
    return wrappedOperation("group")(Data_List.group(dictEq));
};
var fromList = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just(new Data_NonEmpty.NonEmpty(v.value0, v.value1));
    };
    throw new Error("Failed pattern match at Data.List.NonEmpty line 117, column 1 - line 117, column 57: " + [ v.constructor.name ]);
};
var fromFoldable = function (dictFoldable) {
    return function ($172) {
        return fromList(Data_List.fromFoldable(dictFoldable)($172));
    };
};
var foldM = function (dictMonad) {
    return function (f) {
        return function (a) {
            return function (v) {
                return Control_Bind.bind(dictMonad.Bind1())(f(a)(v.value0))(function (a$prime) {
                    return Data_List.foldM(dictMonad)(f)(a$prime)(v.value1);
                });
            };
        };
    };
};
var findLastIndex = function (f) {
    return function (v) {
        var v1 = Data_List.findLastIndex(f)(v.value1);
        if (v1 instanceof Data_Maybe.Just) {
            return new Data_Maybe.Just(v1.value0 + 1 | 0);
        };
        if (v1 instanceof Data_Maybe.Nothing) {
            if (f(v.value0)) {
                return new Data_Maybe.Just(0);
            };
            if (Data_Boolean.otherwise) {
                return Data_Maybe.Nothing.value;
            };
        };
        throw new Error("Failed pattern match at Data.List.NonEmpty line 176, column 3 - line 180, column 29: " + [ v1.constructor.name ]);
    };
};
var findIndex = function (f) {
    return function (v) {
        if (f(v.value0)) {
            return new Data_Maybe.Just(0);
        };
        if (Data_Boolean.otherwise) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
                return v1 + 1 | 0;
            })(Data_List.findIndex(f)(v.value1));
        };
        throw new Error("Failed pattern match at Data.List.NonEmpty line 169, column 1 - line 169, column 69: " + [ f.constructor.name, v.constructor.name ]);
    };
};
var filterM = function (dictMonad) {
    return function ($173) {
        return lift(Data_List.filterM(dictMonad)($173));
    };
};
var filter = function ($174) {
    return lift(Data_List.filter($174));
};
var elemLastIndex = function (dictEq) {
    return function (x) {
        return findLastIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var elemIndex = function (dictEq) {
    return function (x) {
        return findIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var dropWhile = function ($175) {
    return lift(Data_List.dropWhile($175));
};
var drop = function ($176) {
    return lift(Data_List.drop($176));
};
var cons = function (y) {
    return function (v) {
        return new Data_NonEmpty.NonEmpty(y, new Data_List_Types.Cons(v.value0, v.value1));
    };
};
var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Types.bindNonEmptyList));
var concat = function (v) {
    return Control_Bind.bind(Data_List_Types.bindNonEmptyList)(v)(Control_Category.id(Control_Category.categoryFn));
};
var catMaybes = lift(Data_List.catMaybes);
var appendFoldable = function (dictFoldable) {
    return function (v) {
        return function (ys) {
            return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(Data_List_Types.semigroupList)(v.value1)(Data_List.fromFoldable(dictFoldable)(ys)));
        };
    };
};
module.exports = {
    appendFoldable: appendFoldable, 
    catMaybes: catMaybes, 
    concat: concat, 
    concatMap: concatMap, 
    cons: cons, 
    drop: drop, 
    dropWhile: dropWhile, 
    elemIndex: elemIndex, 
    elemLastIndex: elemLastIndex, 
    filter: filter, 
    filterM: filterM, 
    findIndex: findIndex, 
    findLastIndex: findLastIndex, 
    foldM: foldM, 
    fromFoldable: fromFoldable, 
    fromList: fromList, 
    group: group, 
    "group'": group$prime, 
    groupBy: groupBy, 
    head: head, 
    index: index, 
    init: init, 
    insertAt: insertAt, 
    intersect: intersect, 
    intersectBy: intersectBy, 
    last: last, 
    length: length, 
    mapMaybe: mapMaybe, 
    mapWithIndex: mapWithIndex, 
    modifyAt: modifyAt, 
    nub: nub, 
    nubBy: nubBy, 
    partition: partition, 
    reverse: reverse, 
    singleton: singleton, 
    snoc: snoc, 
    sort: sort, 
    sortBy: sortBy, 
    span: span, 
    tail: tail, 
    take: take, 
    takeWhile: takeWhile, 
    toList: toList, 
    toUnfoldable: toUnfoldable, 
    uncons: uncons, 
    union: union, 
    unionBy: unionBy, 
    unsnoc: unsnoc, 
    unzip: unzip, 
    updateAt: updateAt, 
    zip: zip, 
    zipWith: zipWith, 
    zipWithA: zipWithA
};

},{"../Control.Bind":9,"../Control.Category":10,"../Control.Semigroupoid":35,"../Data.Boolean":49,"../Data.Eq":58,"../Data.Foldable":63,"../Data.Function":73,"../Data.Functor":76,"../Data.List":88,"../Data.List.Types":87,"../Data.Maybe":91,"../Data.NonEmpty":101,"../Data.Ord":107,"../Data.Ring":110,"../Data.Semigroup":114,"../Data.Semigroup.Foldable":111,"../Data.Semigroup.Traversable":112,"../Data.Semiring":116,"../Data.Traversable":130,"../Data.Tuple":133,"../Data.Unfoldable":135,"../Partial.Unsafe":225,"../Prelude":228}],87:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Control_MonadPlus = require("../Control.MonadPlus");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable");
var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Prelude = require("../Prelude");
var Nil = (function () {
    function Nil() {

    };
    Nil.value = new Nil();
    return Nil;
})();
var Cons = (function () {
    function Cons(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Cons.create = function (value0) {
        return function (value1) {
            return new Cons(value0, value1);
        };
    };
    return Cons;
})();
var NonEmptyList = function (x) {
    return x;
};
var toList = function (v) {
    return new Cons(v.value0, v.value1);
};
var newtypeNonEmptyList = new Data_Newtype.Newtype(function (n) {
    return n;
}, NonEmptyList);
var nelCons = function (a) {
    return function (v) {
        return new Data_NonEmpty.NonEmpty(a, new Cons(v.value0, v.value1));
    };
};
var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldl(foldableList)(function (acc) {
            return function ($143) {
                return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f($143));
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
}, function (f) {
    var go = function ($copy_b) {
        return function ($copy_v) {
            var $tco_var_b = $copy_b;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(b, v) {
                if (v instanceof Nil) {
                    $tco_done = true;
                    return b;
                };
                if (v instanceof Cons) {
                    $tco_var_b = f(b)(v.value0);
                    $copy_v = v.value1;
                    return;
                };
                throw new Error("Failed pattern match at Data.List.Types line 78, column 12 - line 80, column 30: " + [ v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_b, $copy_v);
            };
            return $tco_result;
        };
    };
    return go;
}, function (f) {
    return function (b) {
        var rev = function ($copy_acc) {
            return function ($copy_v) {
                var $tco_var_acc = $copy_acc;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(acc, v) {
                    if (v instanceof Nil) {
                        $tco_done = true;
                        return acc;
                    };
                    if (v instanceof Cons) {
                        $tco_var_acc = new Cons(v.value0, acc);
                        $copy_v = v.value1;
                        return;
                    };
                    throw new Error("Failed pattern match at Data.List.Types line 73, column 15 - line 75, column 33: " + [ v.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_acc, $copy_v);
                };
                return $tco_result;
            };
        };
        return function ($144) {
            return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev(Nil.value)($144));
        };
    };
});
var foldableNonEmptyList = Data_NonEmpty.foldableNonEmpty(foldableList);
var functorList = new Data_Functor.Functor(function (f) {
    return Data_Foldable.foldr(foldableList)(function (x) {
        return function (acc) {
            return new Cons(f(x), acc);
        };
    })(Nil.value);
});
var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
    return function (ys) {
        return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
    };
});
var monoidList = new Data_Monoid.Monoid(function () {
    return semigroupList;
}, Nil.value);
var semigroupNonEmptyList = new Data_Semigroup.Semigroup(function (v) {
    return function (as$prime) {
        return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(toList(as$prime)));
    };
});
var showList = function (dictShow) {
    return new Data_Show.Show(function (v) {
        if (v instanceof Nil) {
            return "Nil";
        };
        return "(" + (Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString)(" : ")(Data_Functor.map(functorList)(Data_Show.show(dictShow))(v)) + " : Nil)");
    });
};
var showNonEmptyList = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(NonEmptyList " + (Data_Show.show(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow)))(v) + ")");
    });
};
var traversableList = new Data_Traversable.Traversable(function () {
    return foldableList;
}, function () {
    return functorList;
}, function (dictApplicative) {
    return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
}, function (dictApplicative) {
    return function (f) {
        return function ($145) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value))(Data_Foldable.foldl(foldableList)(function (acc) {
                return function ($146) {
                    return Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc)(f($146));
                };
            })(Control_Applicative.pure(dictApplicative)(Nil.value))($145));
        };
    };
});
var traversableNonEmptyList = Data_NonEmpty.traversableNonEmpty(traversableList);
var unfoldableList = new Data_Unfoldable.Unfoldable(function (f) {
    return function (b) {
        var go = function ($copy_source) {
            return function ($copy_memo) {
                var $tco_var_source = $copy_source;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(source, memo) {
                    var v = f(source);
                    if (v instanceof Data_Maybe.Nothing) {
                        $tco_done = true;
                        return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(memo);
                    };
                    if (v instanceof Data_Maybe.Just) {
                        $tco_var_source = v.value0.value1;
                        $copy_memo = new Cons(v.value0.value0, memo);
                        return;
                    };
                    throw new Error("Failed pattern match at Data.List.Types line 86, column 22 - line 88, column 52: " + [ v.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_source, $copy_memo);
                };
                return $tco_result;
            };
        };
        return go(b)(Nil.value);
    };
});
var foldable1NonEmptyList = new Data_Semigroup_Foldable.Foldable1(function () {
    return foldableNonEmptyList;
}, function (dictSemigroup) {
    return function (v) {
        return Data_Foldable.foldl(foldableList)(Data_Semigroup.append(dictSemigroup))(v.value0)(v.value1);
    };
}, function (dictSemigroup) {
    return function (f) {
        return function (v) {
            return Data_Foldable.foldl(foldableList)(function (acc) {
                return function ($147) {
                    return Data_Semigroup.append(dictSemigroup)(acc)(f($147));
                };
            })(f(v.value0))(v.value1);
        };
    };
});
var extendNonEmptyList = new Control_Extend.Extend(function () {
    return functorNonEmptyList;
}, function (f) {
    return function (v) {
        var go = function (a) {
            return function (v1) {
                return {
                    val: new Cons(f(new Data_NonEmpty.NonEmpty(a, v1.acc)), v1.val), 
                    acc: new Cons(a, v1.acc)
                };
            };
        };
        return new Data_NonEmpty.NonEmpty(f(v), (Data_Foldable.foldr(foldableList)(go)({
            val: Nil.value, 
            acc: Nil.value
        })(v.value1)).val);
    };
});
var extendList = new Control_Extend.Extend(function () {
    return functorList;
}, function (f) {
    return function (v) {
        if (v instanceof Nil) {
            return Nil.value;
        };
        if (v instanceof Cons) {
            var go = function (a$prime) {
                return function (v1) {
                    var acc$prime = new Cons(a$prime, v1.acc);
                    return {
                        val: new Cons(f(acc$prime), v1.val), 
                        acc: acc$prime
                    };
                };
            };
            return new Cons(f(v), (Data_Foldable.foldr(foldableList)(go)({
                val: Nil.value, 
                acc: Nil.value
            })(v.value1)).val);
        };
        throw new Error("Failed pattern match at Data.List.Types line 119, column 1 - line 119, column 35: " + [ f.constructor.name, v.constructor.name ]);
    };
});
var eq1List = new Data_Eq.Eq1(function (dictEq) {
    return function (xs) {
        return function (ys) {
            var go = function ($copy_v) {
                return function ($copy_v1) {
                    return function ($copy_v2) {
                        var $tco_var_v = $copy_v;
                        var $tco_var_v1 = $copy_v1;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(v, v1, v2) {
                            if (!v2) {
                                $tco_done = true;
                                return false;
                            };
                            if (v instanceof Nil && v1 instanceof Nil) {
                                $tco_done = true;
                                return v2;
                            };
                            if (v instanceof Cons && v1 instanceof Cons) {
                                $tco_var_v = v.value1;
                                $tco_var_v1 = v1.value1;
                                $copy_v2 = v2 && Data_Eq.eq(dictEq)(v1.value0)(v.value0);
                                return;
                            };
                            $tco_done = true;
                            return false;
                        };
                        while (!$tco_done) {
                            $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
                        };
                        return $tco_result;
                    };
                };
            };
            return go(xs)(ys)(true);
        };
    };
});
var eqList = function (dictEq) {
    return new Data_Eq.Eq(Data_Eq.eq1(eq1List)(dictEq));
};
var eqNonEmptyList = function (dictEq) {
    return Data_NonEmpty.eqNonEmpty(eq1List)(dictEq);
};
var ord1List = new Data_Ord.Ord1(function () {
    return eq1List;
}, function (dictOrd) {
    return function (xs) {
        return function (ys) {
            var go = function ($copy_v) {
                return function ($copy_v1) {
                    var $tco_var_v = $copy_v;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(v, v1) {
                        if (v instanceof Nil && v1 instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.EQ.value;
                        };
                        if (v instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.LT.value;
                        };
                        if (v1 instanceof Nil) {
                            $tco_done = true;
                            return Data_Ordering.GT.value;
                        };
                        if (v instanceof Cons && v1 instanceof Cons) {
                            var v2 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
                            if (v2 instanceof Data_Ordering.EQ) {
                                $tco_var_v = v.value1;
                                $copy_v1 = v1.value1;
                                return;
                            };
                            $tco_done = true;
                            return v2;
                        };
                        throw new Error("Failed pattern match at Data.List.Types line 53, column 5 - line 53, column 20: " + [ v.constructor.name, v1.constructor.name ]);
                    };
                    while (!$tco_done) {
                        $tco_result = $tco_loop($tco_var_v, $copy_v1);
                    };
                    return $tco_result;
                };
            };
            return go(xs)(ys);
        };
    };
});
var ordList = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqList(dictOrd.Eq0());
    }, Data_Ord.compare1(ord1List)(dictOrd));
};
var ordNonEmptyList = function (dictOrd) {
    return Data_NonEmpty.ordNonEmpty(ord1List)(dictOrd);
};
var comonadNonEmptyList = new Control_Comonad.Comonad(function () {
    return extendNonEmptyList;
}, function (v) {
    return v.value0;
});
var applyList = new Control_Apply.Apply(function () {
    return functorList;
}, function (v) {
    return function (v1) {
        if (v instanceof Nil) {
            return Nil.value;
        };
        if (v instanceof Cons) {
            return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
        };
        throw new Error("Failed pattern match at Data.List.Types line 94, column 1 - line 94, column 33: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var applyNonEmptyList = new Control_Apply.Apply(function () {
    return functorNonEmptyList;
}, function (v) {
    return function (v1) {
        return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons(v1.value0, Nil.value)))(Control_Apply.apply(applyList)(new Cons(v.value0, v.value1))(v1.value1)));
    };
});
var bindList = new Control_Bind.Bind(function () {
    return applyList;
}, function (v) {
    return function (v1) {
        if (v instanceof Nil) {
            return Nil.value;
        };
        if (v instanceof Cons) {
            return Data_Semigroup.append(semigroupList)(v1(v.value0))(Control_Bind.bind(bindList)(v.value1)(v1));
        };
        throw new Error("Failed pattern match at Data.List.Types line 101, column 1 - line 101, column 31: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var bindNonEmptyList = new Control_Bind.Bind(function () {
    return applyNonEmptyList;
}, function (v) {
    return function (f) {
        var v1 = f(v.value0);
        return new Data_NonEmpty.NonEmpty(v1.value0, Data_Semigroup.append(semigroupList)(v1.value1)(Control_Bind.bind(bindList)(v.value1)(function ($148) {
            return toList(f($148));
        })));
    };
});
var applicativeList = new Control_Applicative.Applicative(function () {
    return applyList;
}, function (a) {
    return new Cons(a, Nil.value);
});
var monadList = new Control_Monad.Monad(function () {
    return applicativeList;
}, function () {
    return bindList;
});
var altNonEmptyList = new Control_Alt.Alt(function () {
    return functorNonEmptyList;
}, Data_Semigroup.append(semigroupNonEmptyList));
var altList = new Control_Alt.Alt(function () {
    return functorList;
}, Data_Semigroup.append(semigroupList));
var plusList = new Control_Plus.Plus(function () {
    return altList;
}, Nil.value);
var alternativeList = new Control_Alternative.Alternative(function () {
    return applicativeList;
}, function () {
    return plusList;
});
var monadZeroList = new Control_MonadZero.MonadZero(function () {
    return alternativeList;
}, function () {
    return monadList;
});
var monadPlusList = new Control_MonadPlus.MonadPlus(function () {
    return monadZeroList;
});
var applicativeNonEmptyList = new Control_Applicative.Applicative(function () {
    return applyNonEmptyList;
}, function ($149) {
    return NonEmptyList(Data_NonEmpty.singleton(plusList)($149));
});
var monadNonEmptyList = new Control_Monad.Monad(function () {
    return applicativeNonEmptyList;
}, function () {
    return bindNonEmptyList;
});
var traversable1NonEmptyList = new Data_Semigroup_Traversable.Traversable1(function () {
    return foldable1NonEmptyList;
}, function () {
    return traversableNonEmptyList;
}, function (dictApply) {
    return Data_Semigroup_Traversable.traverse1(traversable1NonEmptyList)(dictApply)(Control_Category.id(Control_Category.categoryFn));
}, function (dictApply) {
    return function (f) {
        return function (v) {
            return Data_Functor.mapFlipped(dictApply.Functor0())(Data_Foldable.foldl(foldableList)(function (acc) {
                return function ($150) {
                    return Control_Apply.lift2(dictApply)(Data_Function.flip(nelCons))(acc)(f($150));
                };
            })(Data_Functor.map(dictApply.Functor0())(Control_Applicative.pure(applicativeNonEmptyList))(f(v.value0)))(v.value1))(function (v1) {
                return Data_Foldable.foldl(foldableList)(Data_Function.flip(nelCons))(Control_Applicative.pure(applicativeNonEmptyList)(v1.value0))(v1.value1);
            });
        };
    };
});
module.exports = {
    Nil: Nil, 
    Cons: Cons, 
    NonEmptyList: NonEmptyList, 
    nelCons: nelCons, 
    toList: toList, 
    showList: showList, 
    eqList: eqList, 
    eq1List: eq1List, 
    ordList: ordList, 
    ord1List: ord1List, 
    semigroupList: semigroupList, 
    monoidList: monoidList, 
    functorList: functorList, 
    foldableList: foldableList, 
    unfoldableList: unfoldableList, 
    traversableList: traversableList, 
    applyList: applyList, 
    applicativeList: applicativeList, 
    bindList: bindList, 
    monadList: monadList, 
    altList: altList, 
    plusList: plusList, 
    alternativeList: alternativeList, 
    monadZeroList: monadZeroList, 
    monadPlusList: monadPlusList, 
    extendList: extendList, 
    newtypeNonEmptyList: newtypeNonEmptyList, 
    eqNonEmptyList: eqNonEmptyList, 
    ordNonEmptyList: ordNonEmptyList, 
    showNonEmptyList: showNonEmptyList, 
    functorNonEmptyList: functorNonEmptyList, 
    applyNonEmptyList: applyNonEmptyList, 
    applicativeNonEmptyList: applicativeNonEmptyList, 
    bindNonEmptyList: bindNonEmptyList, 
    monadNonEmptyList: monadNonEmptyList, 
    altNonEmptyList: altNonEmptyList, 
    extendNonEmptyList: extendNonEmptyList, 
    comonadNonEmptyList: comonadNonEmptyList, 
    semigroupNonEmptyList: semigroupNonEmptyList, 
    foldableNonEmptyList: foldableNonEmptyList, 
    traversableNonEmptyList: traversableNonEmptyList, 
    foldable1NonEmptyList: foldable1NonEmptyList, 
    traversable1NonEmptyList: traversable1NonEmptyList
};

},{"../Control.Alt":1,"../Control.Alternative":2,"../Control.Applicative":3,"../Control.Apply":5,"../Control.Bind":9,"../Control.Category":10,"../Control.Comonad":11,"../Control.Extend":13,"../Control.Monad":31,"../Control.MonadPlus":32,"../Control.MonadZero":33,"../Control.Plus":34,"../Control.Semigroupoid":35,"../Data.Eq":58,"../Data.Foldable":63,"../Data.Function":73,"../Data.Functor":76,"../Data.HeytingAlgebra":80,"../Data.Maybe":91,"../Data.Monoid":98,"../Data.Newtype":100,"../Data.NonEmpty":101,"../Data.Ord":107,"../Data.Ordering":108,"../Data.Semigroup":114,"../Data.Semigroup.Foldable":111,"../Data.Semigroup.Traversable":112,"../Data.Show":118,"../Data.Traversable":130,"../Data.Tuple":133,"../Data.Unfoldable":135,"../Prelude":228}],88:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Pattern = function (x) {
    return x;
};
var updateAt = function (v) {
    return function (v1) {
        return function (v2) {
            if (v === 0 && v2 instanceof Data_List_Types.Cons) {
                return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2.value1));
            };
            if (v2 instanceof Data_List_Types.Cons) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
                    return new Data_List_Types.Cons(v2.value0, v3);
                })(updateAt(v - 1 | 0)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var unzip = Data_Foldable.foldr(Data_List_Types.foldableList)(function (v) {
    return function (v1) {
        return new Data_Tuple.Tuple(new Data_List_Types.Cons(v.value0, v1.value0), new Data_List_Types.Cons(v.value1, v1.value1));
    };
})(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_Types.Nil.value));
var uncons = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just({
            head: v.value0, 
            tail: v.value1
        });
    };
    throw new Error("Failed pattern match at Data.List line 256, column 1 - line 256, column 66: " + [ v.constructor.name ]);
};
var toUnfoldable = function (dictUnfoldable) {
    return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
            return new Data_Tuple.Tuple(rec.head, rec.tail);
        })(uncons(xs));
    });
};
var tail = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just(v.value1);
    };
    throw new Error("Failed pattern match at Data.List line 242, column 1 - line 242, column 43: " + [ v.constructor.name ]);
};
var stripPrefix = function (dictEq) {
    return function (v) {
        return function (s) {
            var go = function (prefix) {
                return function (input) {
                    if (prefix instanceof Data_List_Types.Cons && (input instanceof Data_List_Types.Cons && Data_Eq.eq(dictEq)(prefix.value0)(input.value0))) {
                        return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Loop({
                            a: prefix.value1, 
                            b: input.value1
                        }));
                    };
                    if (prefix instanceof Data_List_Types.Nil) {
                        return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Done(input));
                    };
                    return Data_Maybe.Nothing.value;
                };
            };
            return Control_Monad_Rec_Class.tailRecM2(Control_Monad_Rec_Class.monadRecMaybe)(go)(v)(s);
        };
    };
};
var span = function (v) {
    return function (v1) {
        if (v1 instanceof Data_List_Types.Cons && v(v1.value0)) {
            var v2 = span(v)(v1.value1);
            return {
                init: new Data_List_Types.Cons(v1.value0, v2.init), 
                rest: v2.rest
            };
        };
        return {
            init: Data_List_Types.Nil.value, 
            rest: v1
        };
    };
};
var snoc = function (xs) {
    return function (x) {
        return Data_Foldable.foldr(Data_List_Types.foldableList)(Data_List_Types.Cons.create)(new Data_List_Types.Cons(x, Data_List_Types.Nil.value))(xs);
    };
};
var singleton = function (a) {
    return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
};
var sortBy = function (cmp) {
    var merge = function (v) {
        return function (v1) {
            if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1.value0))(Data_Ordering.GT.value)) {
                    return new Data_List_Types.Cons(v1.value0, merge(v)(v1.value1));
                };
                if (Data_Boolean.otherwise) {
                    return new Data_List_Types.Cons(v.value0, merge(v.value1)(v1));
                };
            };
            if (v instanceof Data_List_Types.Nil) {
                return v1;
            };
            if (v1 instanceof Data_List_Types.Nil) {
                return v;
            };
            throw new Error("Failed pattern match at Data.List line 471, column 3 - line 471, column 38: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
    var mergePairs = function (v) {
        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
            return new Data_List_Types.Cons(merge(v.value0)(v.value1.value0), mergePairs(v.value1.value1));
        };
        return v;
    };
    var mergeAll = function ($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return v.value0;
            };
            $copy_v = mergePairs(v);
            return;
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    var sequences = function (v) {
        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
            if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v.value1.value0))(Data_Ordering.GT.value)) {
                return descending(v.value1.value0)(singleton(v.value0))(v.value1.value1);
            };
            if (Data_Boolean.otherwise) {
                return ascending(v.value1.value0)(function (v1) {
                    return new Data_List_Types.Cons(v.value0, v1);
                })(v.value1.value1);
            };
        };
        return singleton(v);
    };
    var descending = function ($copy_a) {
        return function ($copy_as) {
            return function ($copy_v) {
                var $tco_var_a = $copy_a;
                var $tco_var_as = $copy_as;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(a, as, v) {
                    if (v instanceof Data_List_Types.Cons && Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
                        $tco_var_a = v.value0;
                        $tco_var_as = new Data_List_Types.Cons(a, as);
                        $copy_v = v.value1;
                        return;
                    };
                    $tco_done = true;
                    return new Data_List_Types.Cons(new Data_List_Types.Cons(a, as), sequences(v));
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
                };
                return $tco_result;
            };
        };
    };
    var ascending = function ($copy_a) {
        return function ($copy_as) {
            return function ($copy_v) {
                var $tco_var_a = $copy_a;
                var $tco_var_as = $copy_as;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(a, as, v) {
                    if (v instanceof Data_List_Types.Cons && Data_Eq.notEq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
                        $tco_var_a = v.value0;
                        $tco_var_as = function (ys) {
                            return as(new Data_List_Types.Cons(a, ys));
                        };
                        $copy_v = v.value1;
                        return;
                    };
                    $tco_done = true;
                    return new Data_List_Types.Cons(as(singleton(a)), sequences(v));
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
                };
                return $tco_result;
            };
        };
    };
    return function ($340) {
        return mergeAll(sequences($340));
    };
};
var sort = function (dictOrd) {
    return function (xs) {
        return sortBy(Data_Ord.compare(dictOrd))(xs);
    };
};
var showPattern = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Pattern " + (Data_Show.show(Data_List_Types.showList(dictShow))(v) + ")");
    });
};
var reverse = (function () {
    var go = function ($copy_acc) {
        return function ($copy_v) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, v) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return acc;
                };
                if (v instanceof Data_List_Types.Cons) {
                    $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                    $copy_v = v.value1;
                    return;
                };
                throw new Error("Failed pattern match at Data.List line 365, column 3 - line 365, column 19: " + [ acc.constructor.name, v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_acc, $copy_v);
            };
            return $tco_result;
        };
    };
    return go(Data_List_Types.Nil.value);
})();
var take = (function () {
    var go = function ($copy_acc) {
        return function ($copy_v) {
            return function ($copy_v1) {
                var $tco_var_acc = $copy_acc;
                var $tco_var_v = $copy_v;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(acc, v, v1) {
                    if (v === 0) {
                        $tco_done = true;
                        return reverse(acc);
                    };
                    if (v1 instanceof Data_List_Types.Nil) {
                        $tco_done = true;
                        return reverse(acc);
                    };
                    if (v1 instanceof Data_List_Types.Cons) {
                        $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
                        $tco_var_v = v - 1 | 0;
                        $copy_v1 = v1.value1;
                        return;
                    };
                    throw new Error("Failed pattern match at Data.List line 518, column 3 - line 518, column 27: " + [ acc.constructor.name, v.constructor.name, v1.constructor.name ]);
                };
                while (!$tco_done) {
                    $tco_result = $tco_loop($tco_var_acc, $tco_var_v, $copy_v1);
                };
                return $tco_result;
            };
        };
    };
    return go(Data_List_Types.Nil.value);
})();
var takeWhile = function (p) {
    var go = function ($copy_acc) {
        return function ($copy_v) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, v) {
                if (v instanceof Data_List_Types.Cons && p(v.value0)) {
                    $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                    $copy_v = v.value1;
                    return;
                };
                $tco_done = true;
                return reverse(acc);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_acc, $copy_v);
            };
            return $tco_result;
        };
    };
    return go(Data_List_Types.Nil.value);
};
var unsnoc = function (lst) {
    var go = function ($copy_v) {
        return function ($copy_acc) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, acc) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                };
                if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return new Data_Maybe.Just({
                        revInit: acc, 
                        last: v.value0
                    });
                };
                if (v instanceof Data_List_Types.Cons) {
                    $tco_var_v = v.value1;
                    $copy_acc = new Data_List_Types.Cons(v.value0, acc);
                    return;
                };
                throw new Error("Failed pattern match at Data.List line 267, column 3 - line 267, column 23: " + [ v.constructor.name, acc.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_acc);
            };
            return $tco_result;
        };
    };
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (h) {
        return {
            init: reverse(h.revInit), 
            last: h.last
        };
    })(go(lst)(Data_List_Types.Nil.value));
};
var zipWith = function (f) {
    return function (xs) {
        return function (ys) {
            var go = function ($copy_v) {
                return function ($copy_v1) {
                    return function ($copy_acc) {
                        var $tco_var_v = $copy_v;
                        var $tco_var_v1 = $copy_v1;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(v, v1, acc) {
                            if (v instanceof Data_List_Types.Nil) {
                                $tco_done = true;
                                return acc;
                            };
                            if (v1 instanceof Data_List_Types.Nil) {
                                $tco_done = true;
                                return acc;
                            };
                            if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                                $tco_var_v = v.value1;
                                $tco_var_v1 = v1.value1;
                                $copy_acc = new Data_List_Types.Cons(f(v.value0)(v1.value0), acc);
                                return;
                            };
                            throw new Error("Failed pattern match at Data.List line 692, column 3 - line 692, column 21: " + [ v.constructor.name, v1.constructor.name, acc.constructor.name ]);
                        };
                        while (!$tco_done) {
                            $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_acc);
                        };
                        return $tco_result;
                    };
                };
            };
            return reverse(go(xs)(ys)(Data_List_Types.Nil.value));
        };
    };
};
var zip = zipWith(Data_Tuple.Tuple.create);
var zipWithA = function (dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Traversable.sequence(Data_List_Types.traversableList)(dictApplicative)(zipWith(f)(xs)(ys));
            };
        };
    };
};
var range = function (start) {
    return function (end) {
        if (start === end) {
            return singleton(start);
        };
        if (Data_Boolean.otherwise) {
            var go = function ($copy_s) {
                return function ($copy_e) {
                    return function ($copy_step) {
                        return function ($copy_rest) {
                            var $tco_var_s = $copy_s;
                            var $tco_var_e = $copy_e;
                            var $tco_var_step = $copy_step;
                            var $tco_done = false;
                            var $tco_result;
                            function $tco_loop(s, e, step, rest) {
                                if (s === e) {
                                    $tco_done = true;
                                    return new Data_List_Types.Cons(s, rest);
                                };
                                if (Data_Boolean.otherwise) {
                                    $tco_var_s = s + step | 0;
                                    $tco_var_e = e;
                                    $tco_var_step = step;
                                    $copy_rest = new Data_List_Types.Cons(s, rest);
                                    return;
                                };
                                throw new Error("Failed pattern match at Data.List line 145, column 3 - line 146, column 65: " + [ s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name ]);
                            };
                            while (!$tco_done) {
                                $tco_result = $tco_loop($tco_var_s, $tco_var_e, $tco_var_step, $copy_rest);
                            };
                            return $tco_result;
                        };
                    };
                };
            };
            return go(end)(start)((function () {
                var $221 = start > end;
                if ($221) {
                    return 1;
                };
                return -1 | 0;
            })())(Data_List_Types.Nil.value);
        };
        throw new Error("Failed pattern match at Data.List line 141, column 1 - line 141, column 32: " + [ start.constructor.name, end.constructor.name ]);
    };
};
var partition = function (p) {
    return function (xs) {
        var select = function (x) {
            return function (v) {
                var $224 = p(x);
                if ($224) {
                    return {
                        no: v.no, 
                        yes: new Data_List_Types.Cons(x, v.yes)
                    };
                };
                return {
                    no: new Data_List_Types.Cons(x, v.no), 
                    yes: v.yes
                };
            };
        };
        return Data_Foldable.foldr(Data_List_Types.foldableList)(select)({
            no: Data_List_Types.Nil.value, 
            yes: Data_List_Types.Nil.value
        })(xs);
    };
};
var $$null = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return true;
    };
    return false;
};
var newtypePattern = new Data_Newtype.Newtype(function (n) {
    return n;
}, Pattern);
var mapWithIndex = function (f) {
    return function (lst) {
        var go = function ($copy_v) {
            return function ($copy_v1) {
                return function ($copy_acc) {
                    var $tco_var_v = $copy_v;
                    var $tco_var_v1 = $copy_v1;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(v, v1, acc) {
                        if (v1 instanceof Data_List_Types.Nil) {
                            $tco_done = true;
                            return acc;
                        };
                        if (v1 instanceof Data_List_Types.Cons) {
                            $tco_var_v = v + 1 | 0;
                            $tco_var_v1 = v1.value1;
                            $copy_acc = new Data_List_Types.Cons(f(v)(v1.value0), acc);
                            return;
                        };
                        throw new Error("Failed pattern match at Data.List line 430, column 3 - line 430, column 21: " + [ v.constructor.name, v1.constructor.name, acc.constructor.name ]);
                    };
                    while (!$tco_done) {
                        $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_acc);
                    };
                    return $tco_result;
                };
            };
        };
        return reverse(go(0)(lst)(Data_List_Types.Nil.value));
    };
};
var mapMaybe = function (f) {
    var go = function ($copy_acc) {
        return function ($copy_v) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, v) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return reverse(acc);
                };
                if (v instanceof Data_List_Types.Cons) {
                    var v1 = f(v.value0);
                    if (v1 instanceof Data_Maybe.Nothing) {
                        $tco_var_acc = acc;
                        $copy_v = v.value1;
                        return;
                    };
                    if (v1 instanceof Data_Maybe.Just) {
                        $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
                        $copy_v = v.value1;
                        return;
                    };
                    throw new Error("Failed pattern match at Data.List line 416, column 5 - line 418, column 32: " + [ v1.constructor.name ]);
                };
                throw new Error("Failed pattern match at Data.List line 414, column 3 - line 414, column 27: " + [ acc.constructor.name, v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_acc, $copy_v);
            };
            return $tco_result;
        };
    };
    return go(Data_List_Types.Nil.value);
};
var manyRec = function (dictMonadRec) {
    return function (dictAlternative) {
        return function (p) {
            var go = function (acc) {
                return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(Control_Alt.alt((dictAlternative.Plus1()).Alt0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Control_Monad_Rec_Class.Loop.create)(p))(Control_Applicative.pure(dictAlternative.Applicative0())(new Control_Monad_Rec_Class.Done(Data_Unit.unit))))(function (v) {
                    return Control_Applicative.pure(dictAlternative.Applicative0())(Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep)(function (v1) {
                        return new Data_List_Types.Cons(v1, acc);
                    })(function (v1) {
                        return reverse(acc);
                    })(v));
                });
            };
            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go)(Data_List_Types.Nil.value);
        };
    };
};
var someRec = function (dictMonadRec) {
    return function (dictAlternative) {
        return function (v) {
            return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Data_List_Types.Cons.create)(v))(manyRec(dictMonadRec)(dictAlternative)(v));
        };
    };
};
var some = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Apply.apply((dictAlternative.Applicative0()).Apply0())(Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0())(Data_List_Types.Cons.create)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                return many(dictAlternative)(dictLazy)(v);
            }));
        };
    };
};
var many = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value));
        };
    };
};
var length = Data_Foldable.foldl(Data_List_Types.foldableList)(function (acc) {
    return function (v) {
        return acc + 1 | 0;
    };
})(0);
var last = function ($copy_v) {
    var $tco_done = false;
    var $tco_result;
    function $tco_loop(v) {
        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return new Data_Maybe.Just(v.value0);
        };
        if (v instanceof Data_List_Types.Cons) {
            $copy_v = v.value1;
            return;
        };
        $tco_done = true;
        return Data_Maybe.Nothing.value;
    };
    while (!$tco_done) {
        $tco_result = $tco_loop($copy_v);
    };
    return $tco_result;
};
var insertBy = function (v) {
    return function (x) {
        return function (v1) {
            if (v1 instanceof Data_List_Types.Nil) {
                return singleton(x);
            };
            if (v1 instanceof Data_List_Types.Cons) {
                var v2 = v(x)(v1.value0);
                if (v2 instanceof Data_Ordering.GT) {
                    return new Data_List_Types.Cons(v1.value0, insertBy(v)(x)(v1.value1));
                };
                return new Data_List_Types.Cons(x, v1);
            };
            throw new Error("Failed pattern match at Data.List line 213, column 1 - line 213, column 68: " + [ v.constructor.name, x.constructor.name, v1.constructor.name ]);
        };
    };
};
var insertAt = function (v) {
    return function (v1) {
        return function (v2) {
            if (v === 0) {
                return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2));
            };
            if (v2 instanceof Data_List_Types.Cons) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
                    return new Data_List_Types.Cons(v2.value0, v3);
                })(insertAt(v - 1 | 0)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var insert = function (dictOrd) {
    return insertBy(Data_Ord.compare(dictOrd));
};
var init = function (lst) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
        return v.init;
    })(unsnoc(lst));
};
var index = function ($copy_v) {
    return function ($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
            if (v instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return Data_Maybe.Nothing.value;
            };
            if (v instanceof Data_List_Types.Cons && v1 === 0) {
                $tco_done = true;
                return new Data_Maybe.Just(v.value0);
            };
            if (v instanceof Data_List_Types.Cons) {
                $tco_var_v = v.value1;
                $copy_v1 = v1 - 1 | 0;
                return;
            };
            throw new Error("Failed pattern match at Data.List line 278, column 1 - line 278, column 44: " + [ v.constructor.name, v1.constructor.name ]);
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v, $copy_v1);
        };
        return $tco_result;
    };
};
var head = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just(v.value0);
    };
    throw new Error("Failed pattern match at Data.List line 227, column 1 - line 227, column 22: " + [ v.constructor.name ]);
};
var transpose = function (v) {
    if (v instanceof Data_List_Types.Nil) {
        return Data_List_Types.Nil.value;
    };
    if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Nil) {
        return transpose(v.value1);
    };
    if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Cons) {
        return new Data_List_Types.Cons(new Data_List_Types.Cons(v.value0.value0, mapMaybe(head)(v.value1)), transpose(new Data_List_Types.Cons(v.value0.value1, mapMaybe(tail)(v.value1))));
    };
    throw new Error("Failed pattern match at Data.List line 726, column 1 - line 726, column 54: " + [ v.constructor.name ]);
};
var groupBy = function (v) {
    return function (v1) {
        if (v1 instanceof Data_List_Types.Nil) {
            return Data_List_Types.Nil.value;
        };
        if (v1 instanceof Data_List_Types.Cons) {
            var v2 = span(v(v1.value0))(v1.value1);
            return new Data_List_Types.Cons(new Data_NonEmpty.NonEmpty(v1.value0, v2.init), groupBy(v)(v2.rest));
        };
        throw new Error("Failed pattern match at Data.List line 589, column 1 - line 589, column 80: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var group = function (dictEq) {
    return groupBy(Data_Eq.eq(dictEq));
};
var group$prime = function (dictOrd) {
    return function ($341) {
        return group(dictOrd.Eq0())(sort(dictOrd)($341));
    };
};
var fromFoldable = function (dictFoldable) {
    return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
};
var foldM = function (dictMonad) {
    return function (v) {
        return function (a) {
            return function (v1) {
                if (v1 instanceof Data_List_Types.Nil) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(a);
                };
                if (v1 instanceof Data_List_Types.Cons) {
                    return Control_Bind.bind(dictMonad.Bind1())(v(a)(v1.value0))(function (a$prime) {
                        return foldM(dictMonad)(v)(a$prime)(v1.value1);
                    });
                };
                throw new Error("Failed pattern match at Data.List line 737, column 1 - line 737, column 72: " + [ v.constructor.name, a.constructor.name, v1.constructor.name ]);
            };
        };
    };
};
var findIndex = function (fn) {
    var go = function ($copy_v) {
        return function ($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v, v1) {
                if (v1 instanceof Data_List_Types.Cons) {
                    if (fn(v1.value0)) {
                        $tco_done = true;
                        return new Data_Maybe.Just(v);
                    };
                    if (Data_Boolean.otherwise) {
                        $tco_var_v = v + 1 | 0;
                        $copy_v1 = v1.value1;
                        return;
                    };
                };
                if (v1 instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at Data.List line 298, column 3 - line 298, column 35: " + [ v.constructor.name, v1.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $copy_v1);
            };
            return $tco_result;
        };
    };
    return go(0);
};
var findLastIndex = function (fn) {
    return function (xs) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
            return (length(xs) - 1 | 0) - v | 0;
        })(findIndex(fn)(reverse(xs)));
    };
};
var filterM = function (dictMonad) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Data_List_Types.Nil) {
                return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Types.Nil.value);
            };
            if (v1 instanceof Data_List_Types.Cons) {
                return Control_Bind.bind(dictMonad.Bind1())(v(v1.value0))(function (v2) {
                    return Control_Bind.bind(dictMonad.Bind1())(filterM(dictMonad)(v)(v1.value1))(function (v3) {
                        return Control_Applicative.pure(dictMonad.Applicative0())((function () {
                            if (v2) {
                                return new Data_List_Types.Cons(v1.value0, v3);
                            };
                            return v3;
                        })());
                    });
                });
            };
            throw new Error("Failed pattern match at Data.List line 400, column 1 - line 400, column 75: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var filter = function (p) {
    var go = function ($copy_acc) {
        return function ($copy_v) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, v) {
                if (v instanceof Data_List_Types.Nil) {
                    $tco_done = true;
                    return reverse(acc);
                };
                if (v instanceof Data_List_Types.Cons) {
                    if (p(v.value0)) {
                        $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                        $copy_v = v.value1;
                        return;
                    };
                    if (Data_Boolean.otherwise) {
                        $tco_var_acc = acc;
                        $copy_v = v.value1;
                        return;
                    };
                };
                throw new Error("Failed pattern match at Data.List line 387, column 3 - line 387, column 27: " + [ acc.constructor.name, v.constructor.name ]);
            };
            while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_acc, $copy_v);
            };
            return $tco_result;
        };
    };
    return go(Data_List_Types.Nil.value);
};
var intersectBy = function (v) {
    return function (v1) {
        return function (v2) {
            if (v1 instanceof Data_List_Types.Nil) {
                return Data_List_Types.Nil.value;
            };
            if (v2 instanceof Data_List_Types.Nil) {
                return Data_List_Types.Nil.value;
            };
            return filter(function (x) {
                return Data_Foldable.any(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(v(x))(v2);
            })(v1);
        };
    };
};
var intersect = function (dictEq) {
    return intersectBy(Data_Eq.eq(dictEq));
};
var nubBy = function (v) {
    return function (v1) {
        if (v1 instanceof Data_List_Types.Nil) {
            return Data_List_Types.Nil.value;
        };
        if (v1 instanceof Data_List_Types.Cons) {
            return new Data_List_Types.Cons(v1.value0, nubBy(v)(filter(function (y) {
                return !v(v1.value0)(y);
            })(v1.value1)));
        };
        throw new Error("Failed pattern match at Data.List line 618, column 1 - line 618, column 59: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var nub = function (dictEq) {
    return nubBy(Data_Eq.eq(dictEq));
};
var eqPattern = function (dictEq) {
    return new Data_Eq.Eq(function (x) {
        return function (y) {
            return Data_Eq.eq(Data_List_Types.eqList(dictEq))(x)(y);
        };
    });
};
var ordPattern = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqPattern(dictOrd.Eq0());
    }, function (x) {
        return function (y) {
            return Data_Ord.compare(Data_List_Types.ordList(dictOrd))(x)(y);
        };
    });
};
var elemLastIndex = function (dictEq) {
    return function (x) {
        return findLastIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var elemIndex = function (dictEq) {
    return function (x) {
        return findIndex(function (v) {
            return Data_Eq.eq(dictEq)(v)(x);
        });
    };
};
var dropWhile = function (p) {
    var go = function ($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v instanceof Data_List_Types.Cons && p(v.value0)) {
                $copy_v = v.value1;
                return;
            };
            $tco_done = true;
            return v;
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    return go;
};
var drop = function ($copy_v) {
    return function ($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v, v1) {
            if (v === 0) {
                $tco_done = true;
                return v1;
            };
            if (v1 instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return Data_List_Types.Nil.value;
            };
            if (v1 instanceof Data_List_Types.Cons) {
                $tco_var_v = v - 1 | 0;
                $copy_v1 = v1.value1;
                return;
            };
            throw new Error("Failed pattern match at Data.List line 534, column 1 - line 534, column 42: " + [ v.constructor.name, v1.constructor.name ]);
        };
        while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v, $copy_v1);
        };
        return $tco_result;
    };
};
var slice = function (start) {
    return function (end) {
        return function (xs) {
            return take(end - start | 0)(drop(start)(xs));
        };
    };
};
var deleteBy = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Data_List_Types.Nil) {
                return Data_List_Types.Nil.value;
            };
            if (v2 instanceof Data_List_Types.Cons && v(v1)(v2.value0)) {
                return v2.value1;
            };
            if (v2 instanceof Data_List_Types.Cons) {
                return new Data_List_Types.Cons(v2.value0, deleteBy(v)(v1)(v2.value1));
            };
            throw new Error("Failed pattern match at Data.List line 645, column 1 - line 645, column 67: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var unionBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return Data_Semigroup.append(Data_List_Types.semigroupList)(xs)(Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
        };
    };
};
var union = function (dictEq) {
    return unionBy(Data_Eq.eq(dictEq));
};
var deleteAt = function (v) {
    return function (v1) {
        if (v === 0 && v1 instanceof Data_List_Types.Cons) {
            return new Data_Maybe.Just(v1.value1);
        };
        if (v1 instanceof Data_List_Types.Cons) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(function (v2) {
                return new Data_List_Types.Cons(v1.value0, v2);
            })(deleteAt(v - 1 | 0)(v1.value1));
        };
        return Data_Maybe.Nothing.value;
    };
};
var $$delete = function (dictEq) {
    return deleteBy(Data_Eq.eq(dictEq));
};
var difference = function (dictEq) {
    return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip($$delete(dictEq)));
};
var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Types.bindList));
var concat = function (v) {
    return Control_Bind.bind(Data_List_Types.bindList)(v)(Control_Category.id(Control_Category.categoryFn));
};
var catMaybes = mapMaybe(Control_Category.id(Control_Category.categoryFn));
var alterAt = function (v) {
    return function (v1) {
        return function (v2) {
            if (v === 0 && v2 instanceof Data_List_Types.Cons) {
                return Data_Maybe.Just.create((function () {
                    var v3 = v1(v2.value0);
                    if (v3 instanceof Data_Maybe.Nothing) {
                        return v2.value1;
                    };
                    if (v3 instanceof Data_Maybe.Just) {
                        return new Data_List_Types.Cons(v3.value0, v2.value1);
                    };
                    throw new Error("Failed pattern match at Data.List line 349, column 3 - line 351, column 23: " + [ v3.constructor.name ]);
                })());
            };
            if (v2 instanceof Data_List_Types.Cons) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
                    return new Data_List_Types.Cons(v2.value0, v3);
                })(alterAt(v - 1 | 0)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var modifyAt = function (n) {
    return function (f) {
        return alterAt(n)(function ($342) {
            return Data_Maybe.Just.create(f($342));
        });
    };
};
module.exports = {
    Pattern: Pattern, 
    alterAt: alterAt, 
    catMaybes: catMaybes, 
    concat: concat, 
    concatMap: concatMap, 
    "delete": $$delete, 
    deleteAt: deleteAt, 
    deleteBy: deleteBy, 
    difference: difference, 
    drop: drop, 
    dropWhile: dropWhile, 
    elemIndex: elemIndex, 
    elemLastIndex: elemLastIndex, 
    filter: filter, 
    filterM: filterM, 
    findIndex: findIndex, 
    findLastIndex: findLastIndex, 
    foldM: foldM, 
    fromFoldable: fromFoldable, 
    group: group, 
    "group'": group$prime, 
    groupBy: groupBy, 
    head: head, 
    index: index, 
    init: init, 
    insert: insert, 
    insertAt: insertAt, 
    insertBy: insertBy, 
    intersect: intersect, 
    intersectBy: intersectBy, 
    last: last, 
    length: length, 
    many: many, 
    manyRec: manyRec, 
    mapMaybe: mapMaybe, 
    mapWithIndex: mapWithIndex, 
    modifyAt: modifyAt, 
    nub: nub, 
    nubBy: nubBy, 
    "null": $$null, 
    partition: partition, 
    range: range, 
    reverse: reverse, 
    singleton: singleton, 
    slice: slice, 
    snoc: snoc, 
    some: some, 
    someRec: someRec, 
    sort: sort, 
    sortBy: sortBy, 
    span: span, 
    stripPrefix: stripPrefix, 
    tail: tail, 
    take: take, 
    takeWhile: takeWhile, 
    toUnfoldable: toUnfoldable, 
    transpose: transpose, 
    uncons: uncons, 
    union: union, 
    unionBy: unionBy, 
    unsnoc: unsnoc, 
    unzip: unzip, 
    updateAt: updateAt, 
    zip: zip, 
    zipWith: zipWith, 
    zipWithA: zipWithA, 
    eqPattern: eqPattern, 
    ordPattern: ordPattern, 
    newtypePattern: newtypePattern, 
    showPattern: showPattern
};

},{"../Control.Alt":1,"../Control.Alternative":2,"../Control.Applicative":3,"../Control.Apply":5,"../Control.Bind":9,"../Control.Category":10,"../Control.Lazy":14,"../Control.Monad.Rec.Class":25,"../Control.Semigroupoid":35,"../Data.Bifunctor":47,"../Data.Boolean":49,"../Data.Eq":58,"../Data.Foldable":63,"../Data.Function":73,"../Data.Functor":76,"../Data.HeytingAlgebra":80,"../Data.List.Types":87,"../Data.Maybe":91,"../Data.Newtype":100,"../Data.NonEmpty":101,"../Data.Ord":107,"../Data.Ordering":108,"../Data.Ring":110,"../Data.Semigroup":114,"../Data.Semiring":116,"../Data.Show":118,"../Data.Traversable":130,"../Data.Tuple":133,"../Data.Unfoldable":135,"../Data.Unit":137,"../Prelude":228}],89:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var First = function (x) {
    return x;
};
var showFirst = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "First (" + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
    });
};
var semigroupFirst = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        if (v instanceof Data_Maybe.Just) {
            return v;
        };
        return v1;
    };
});
var ordFirst = function (dictOrd) {
    return Data_Maybe.ordMaybe(dictOrd);
};
var ord1First = Data_Maybe.ord1Maybe;
var newtypeFirst = new Data_Newtype.Newtype(function (n) {
    return n;
}, First);
var monoidFirst = new Data_Monoid.Monoid(function () {
    return semigroupFirst;
}, Data_Maybe.Nothing.value);
var monadFirst = Data_Maybe.monadMaybe;
var invariantFirst = Data_Maybe.invariantMaybe;
var functorFirst = Data_Maybe.functorMaybe;
var extendFirst = Data_Maybe.extendMaybe;
var eqFirst = function (dictEq) {
    return Data_Maybe.eqMaybe(dictEq);
};
var eq1First = Data_Maybe.eq1Maybe;
var boundedFirst = function (dictBounded) {
    return Data_Maybe.boundedMaybe(dictBounded);
};
var bindFirst = Data_Maybe.bindMaybe;
var applyFirst = Data_Maybe.applyMaybe;
var applicativeFirst = Data_Maybe.applicativeMaybe;
module.exports = {
    First: First, 
    newtypeFirst: newtypeFirst, 
    eqFirst: eqFirst, 
    eq1First: eq1First, 
    ordFirst: ordFirst, 
    ord1First: ord1First, 
    boundedFirst: boundedFirst, 
    functorFirst: functorFirst, 
    invariantFirst: invariantFirst, 
    applyFirst: applyFirst, 
    applicativeFirst: applicativeFirst, 
    bindFirst: bindFirst, 
    monadFirst: monadFirst, 
    extendFirst: extendFirst, 
    showFirst: showFirst, 
    semigroupFirst: semigroupFirst, 
    monoidFirst: monoidFirst
};

},{"../Control.Applicative":3,"../Control.Apply":5,"../Control.Bind":9,"../Control.Extend":13,"../Control.Monad":31,"../Data.Bounded":52,"../Data.Eq":58,"../Data.Functor":76,"../Data.Functor.Invariant":74,"../Data.Maybe":91,"../Data.Monoid":98,"../Data.Newtype":100,"../Data.Ord":107,"../Data.Semigroup":114,"../Data.Show":118,"../Prelude":228}],90:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Last = function (x) {
    return x;
};
var showLast = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Last " + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
    });
};
var semigroupLast = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        if (v1 instanceof Data_Maybe.Just) {
            return v1;
        };
        if (v1 instanceof Data_Maybe.Nothing) {
            return v;
        };
        throw new Error("Failed pattern match at Data.Maybe.Last line 53, column 1 - line 53, column 45: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var ordLast = function (dictOrd) {
    return Data_Maybe.ordMaybe(dictOrd);
};
var ord1Last = Data_Maybe.ord1Maybe;
var newtypeLast = new Data_Newtype.Newtype(function (n) {
    return n;
}, Last);
var monoidLast = new Data_Monoid.Monoid(function () {
    return semigroupLast;
}, Data_Maybe.Nothing.value);
var monadLast = Data_Maybe.monadMaybe;
var invariantLast = Data_Maybe.invariantMaybe;
var functorLast = Data_Maybe.functorMaybe;
var extendLast = Data_Maybe.extendMaybe;
var eqLast = function (dictEq) {
    return Data_Maybe.eqMaybe(dictEq);
};
var eq1Last = Data_Maybe.eq1Maybe;
var boundedLast = function (dictBounded) {
    return Data_Maybe.boundedMaybe(dictBounded);
};
var bindLast = Data_Maybe.bindMaybe;
var applyLast = Data_Maybe.applyMaybe;
var applicativeLast = Data_Maybe.applicativeMaybe;
module.exports = {
    Last: Last, 
    newtypeLast: newtypeLast, 
    eqLast: eqLast, 
    eq1Last: eq1Last, 
    ordLast: ordLast, 
    ord1Last: ord1Last, 
    boundedLast: boundedLast, 
    functorLast: functorLast, 
    invariantLast: invariantLast, 
    applyLast: applyLast, 
    applicativeLast: applicativeLast, 
    bindLast: bindLast, 
    monadLast: monadLast, 
    extendLast: extendLast, 
    showLast: showLast, 
    semigroupLast: semigroupLast, 
    monoidLast: monoidLast
};

},{"../Control.Applicative":3,"../Control.Apply":5,"../Control.Bind":9,"../Control.Extend":13,"../Control.Monad":31,"../Data.Bounded":52,"../Data.Eq":58,"../Data.Functor":76,"../Data.Functor.Invariant":74,"../Data.Maybe":91,"../Data.Monoid":98,"../Data.Newtype":100,"../Data.Ord":107,"../Data.Semigroup":114,"../Data.Show":118,"../Prelude":228}],91:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Control_MonadZero = require("../Control.MonadZero");
var Control_Plus = require("../Control.Plus");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Nothing = (function () {
    function Nothing() {

    };
    Nothing.value = new Nothing();
    return Nothing;
})();
var Just = (function () {
    function Just(value0) {
        this.value0 = value0;
    };
    Just.create = function (value0) {
        return new Just(value0);
    };
    return Just;
})();
var showMaybe = function (dictShow) {
    return new Data_Show.Show(function (v) {
        if (v instanceof Just) {
            return "(Just " + (Data_Show.show(dictShow)(v.value0) + ")");
        };
        if (v instanceof Nothing) {
            return "Nothing";
        };
        throw new Error("Failed pattern match at Data.Maybe line 207, column 1 - line 207, column 47: " + [ v.constructor.name ]);
    });
};
var semigroupMaybe = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            if (v instanceof Nothing) {
                return v1;
            };
            if (v1 instanceof Nothing) {
                return v;
            };
            if (v instanceof Just && v1 instanceof Just) {
                return new Just(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Maybe line 176, column 1 - line 176, column 62: " + [ v.constructor.name, v1.constructor.name ]);
        };
    });
};
var monoidMaybe = function (dictSemigroup) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMaybe(dictSemigroup);
    }, Nothing.value);
};
var maybe$prime = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Nothing) {
                return v(Data_Unit.unit);
            };
            if (v2 instanceof Just) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe line 232, column 1 - line 232, column 62: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var maybe = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Nothing) {
                return v;
            };
            if (v2 instanceof Just) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe line 219, column 1 - line 219, column 51: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var isNothing = maybe(true)(Data_Function["const"](false));
var isJust = maybe(false)(Data_Function["const"](true));
var functorMaybe = new Data_Functor.Functor(function (v) {
    return function (v1) {
        if (v1 instanceof Just) {
            return new Just(v(v1.value0));
        };
        return Nothing.value;
    };
});
var invariantMaybe = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorMaybe));
var fromMaybe$prime = function (a) {
    return maybe$prime(a)(Control_Category.id(Control_Category.categoryFn));
};
var fromMaybe = function (a) {
    return maybe(a)(Control_Category.id(Control_Category.categoryFn));
};
var fromJust = function (dictPartial) {
    return function (v) {
        var __unused = function (dictPartial1) {
            return function ($dollar34) {
                return $dollar34;
            };
        };
        return __unused(dictPartial)((function () {
            if (v instanceof Just) {
                return v.value0;
            };
            throw new Error("Failed pattern match at Data.Maybe line 270, column 1 - line 270, column 46: " + [ v.constructor.name ]);
        })());
    };
};
var extendMaybe = new Control_Extend.Extend(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v1 instanceof Nothing) {
            return Nothing.value;
        };
        return new Just(v(v1));
    };
});
var eqMaybe = function (dictEq) {
    return new Data_Eq.Eq(function (x) {
        return function (y) {
            if (x instanceof Nothing && y instanceof Nothing) {
                return true;
            };
            if (x instanceof Just && y instanceof Just) {
                return Data_Eq.eq(dictEq)(x.value0)(y.value0);
            };
            return false;
        };
    });
};
var ordMaybe = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqMaybe(dictOrd.Eq0());
    }, function (x) {
        return function (y) {
            if (x instanceof Nothing && y instanceof Nothing) {
                return Data_Ordering.EQ.value;
            };
            if (x instanceof Nothing) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof Nothing) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof Just && y instanceof Just) {
                return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe line 196, column 8 - line 196, column 51: " + [ x.constructor.name, y.constructor.name ]);
        };
    });
};
var eq1Maybe = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqMaybe(dictEq));
});
var ord1Maybe = new Data_Ord.Ord1(function () {
    return eq1Maybe;
}, function (dictOrd) {
    return Data_Ord.compare(ordMaybe(dictOrd));
});
var boundedMaybe = function (dictBounded) {
    return new Data_Bounded.Bounded(function () {
        return ordMaybe(dictBounded.Ord0());
    }, Nothing.value, new Just(Data_Bounded.top(dictBounded)));
};
var applyMaybe = new Control_Apply.Apply(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Just) {
            return Data_Functor.map(functorMaybe)(v.value0)(v1);
        };
        if (v instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at Data.Maybe line 68, column 1 - line 68, column 35: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var bindMaybe = new Control_Bind.Bind(function () {
    return applyMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Just) {
            return v1(v.value0);
        };
        if (v instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at Data.Maybe line 127, column 1 - line 127, column 33: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var applicativeMaybe = new Control_Applicative.Applicative(function () {
    return applyMaybe;
}, Just.create);
var monadMaybe = new Control_Monad.Monad(function () {
    return applicativeMaybe;
}, function () {
    return bindMaybe;
});
var altMaybe = new Control_Alt.Alt(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Nothing) {
            return v1;
        };
        return v;
    };
});
var plusMaybe = new Control_Plus.Plus(function () {
    return altMaybe;
}, Nothing.value);
var alternativeMaybe = new Control_Alternative.Alternative(function () {
    return applicativeMaybe;
}, function () {
    return plusMaybe;
});
var monadZeroMaybe = new Control_MonadZero.MonadZero(function () {
    return alternativeMaybe;
}, function () {
    return monadMaybe;
});
module.exports = {
    Nothing: Nothing, 
    Just: Just, 
    fromJust: fromJust, 
    fromMaybe: fromMaybe, 
    "fromMaybe'": fromMaybe$prime, 
    isJust: isJust, 
    isNothing: isNothing, 
    maybe: maybe, 
    "maybe'": maybe$prime, 
    functorMaybe: functorMaybe, 
    applyMaybe: applyMaybe, 
    applicativeMaybe: applicativeMaybe, 
    altMaybe: altMaybe, 
    plusMaybe: plusMaybe, 
    alternativeMaybe: alternativeMaybe, 
    bindMaybe: bindMaybe, 
    monadMaybe: monadMaybe, 
    monadZeroMaybe: monadZeroMaybe, 
    extendMaybe: extendMaybe, 
    invariantMaybe: invariantMaybe, 
    semigroupMaybe: semigroupMaybe, 
    monoidMaybe: monoidMaybe, 
    eqMaybe: eqMaybe, 
    eq1Maybe: eq1Maybe, 
    ordMaybe: ordMaybe, 
    ord1Maybe: ord1Maybe, 
    boundedMaybe: boundedMaybe, 
    showMaybe: showMaybe
};

},{"../Control.Alt":1,"../Control.Alternative":2,"../Control.Applicative":3,"../Control.Apply":5,"../Control.Bind":9,"../Control.Category":10,"../Control.Extend":13,"../Control.Monad":31,"../Control.MonadZero":33,"../Control.Plus":34,"../Data.Bounded":52,"../Data.Eq":58,"../Data.Function":73,"../Data.Functor":76,"../Data.Functor.Invariant":74,"../Data.Monoid":98,"../Data.Ord":107,"../Data.Ordering":108,"../Data.Semigroup":114,"../Data.Show":118,"../Data.Unit":137,"../Prelude":228}],92:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Additive = function (x) {
    return x;
};
var showAdditive = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Additive " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupAdditive = function (dictSemiring) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_Semiring.add(dictSemiring)(v)(v1);
        };
    });
};
var ordAdditive = function (dictOrd) {
    return dictOrd;
};
var newtypeAdditive = new Data_Newtype.Newtype(function (n) {
    return n;
}, Additive);
var monoidAdditive = function (dictSemiring) {
    return new Data_Monoid.Monoid(function () {
        return semigroupAdditive(dictSemiring);
    }, Data_Semiring.zero(dictSemiring));
};
var invariantAdditive = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorAdditive = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendAdditive = new Control_Extend.Extend(function () {
    return functorAdditive;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqAdditive = function (dictEq) {
    return dictEq;
};
var comonadAdditive = new Control_Comonad.Comonad(function () {
    return extendAdditive;
}, Data_Newtype.unwrap(newtypeAdditive));
var boundedAdditive = function (dictBounded) {
    return dictBounded;
};
var applyAdditive = new Control_Apply.Apply(function () {
    return functorAdditive;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindAdditive = new Control_Bind.Bind(function () {
    return applyAdditive;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeAdditive = new Control_Applicative.Applicative(function () {
    return applyAdditive;
}, Additive);
var monadAdditive = new Control_Monad.Monad(function () {
    return applicativeAdditive;
}, function () {
    return bindAdditive;
});
module.exports = {
    Additive: Additive, 
    newtypeAdditive: newtypeAdditive, 
    eqAdditive: eqAdditive, 
    ordAdditive: ordAdditive, 
    boundedAdditive: boundedAdditive, 
    functorAdditive: functorAdditive, 
    invariantAdditive: invariantAdditive, 
    applyAdditive: applyAdditive, 
    applicativeAdditive: applicativeAdditive, 
    bindAdditive: bindAdditive, 
    monadAdditive: monadAdditive, 
    extendAdditive: extendAdditive, 
    comonadAdditive: comonadAdditive, 
    showAdditive: showAdditive, 
    semigroupAdditive: semigroupAdditive, 
    monoidAdditive: monoidAdditive
};

},{"../Control.Applicative":3,"../Control.Apply":5,"../Control.Bind":9,"../Control.Comonad":11,"../Control.Extend":13,"../Control.Monad":31,"../Data.Bounded":52,"../Data.Eq":58,"../Data.Functor":76,"../Data.Functor.Invariant":74,"../Data.Monoid":98,"../Data.Newtype":100,"../Data.Ord":107,"../Data.Semigroup":114,"../Data.Semiring":116,"../Data.Show":118,"../Prelude":228}],93:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Conj = function (x) {
    return x;
};
var showConj = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Conj " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semiringConj = function (dictHeytingAlgebra) {
    return new Data_Semiring.Semiring(function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
        };
    }, function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
        };
    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra));
};
var semigroupConj = function (dictHeytingAlgebra) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
        };
    });
};
var ordConj = function (dictOrd) {
    return dictOrd;
};
var newtypeConj = new Data_Newtype.Newtype(function (n) {
    return n;
}, Conj);
var monoidConj = function (dictHeytingAlgebra) {
    return new Data_Monoid.Monoid(function () {
        return semigroupConj(dictHeytingAlgebra);
    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
};
var invariantConj = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorConj = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendConj = new Control_Extend.Extend(function () {
    return functorConj;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqConj = function (dictEq) {
    return dictEq;
};
var comonadConj = new Control_Comonad.Comonad(function () {
    return extendConj;
}, Data_Newtype.unwrap(newtypeConj));
var boundedConj = function (dictBounded) {
    return dictBounded;
};
var applyConj = new Control_Apply.Apply(function () {
    return functorConj;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindConj = new Control_Bind.Bind(function () {
    return applyConj;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeConj = new Control_Applicative.Applicative(function () {
    return applyConj;
}, Conj);
var monadConj = new Control_Monad.Monad(function () {
    return applicativeConj;
}, function () {
    return bindConj;
});
module.exports = {
    Conj: Conj, 
    newtypeConj: newtypeConj, 
    eqConj: eqConj, 
    ordConj: ordConj, 
    boundedConj: boundedConj, 
    functorConj: functorConj, 
    invariantConj: invariantConj, 
    applyConj: applyConj, 
    applicativeConj: applicativeConj, 
    bindConj: bindConj, 
    monadConj: monadConj, 
    extendConj: extendConj, 
    comonadConj: comonadConj, 
    showConj: showConj, 
    semigroupConj: semigroupConj, 
    monoidConj: monoidConj, 
    semiringConj: semiringConj
};

},{"../Control.Applicative":3,"../Control.Apply":5,"../Control.Bind":9,"../Control.Comonad":11,"../Control.Extend":13,"../Control.Monad":31,"../Data.Bounded":52,"../Data.Eq":58,"../Data.Functor":76,"../Data.Functor.Invariant":74,"../Data.HeytingAlgebra":80,"../Data.Monoid":98,"../Data.Newtype":100,"../Data.Ord":107,"../Data.Semigroup":114,"../Data.Semiring":116,"../Data.Show":118,"../Prelude":228}],94:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Disj = function (x) {
    return x;
};
var showDisj = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Disj " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semiringDisj = function (dictHeytingAlgebra) {
    return new Data_Semiring.Semiring(function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
        };
    }, function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
        };
    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra));
};
var semigroupDisj = function (dictHeytingAlgebra) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
        };
    });
};
var ordDisj = function (dictOrd) {
    return dictOrd;
};
var newtypeDisj = new Data_Newtype.Newtype(function (n) {
    return n;
}, Disj);
var monoidDisj = function (dictHeytingAlgebra) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDisj(dictHeytingAlgebra);
    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
};
var invariantDisj = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorDisj = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendDisj = new Control_Extend.Extend(function () {
    return functorDisj;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqDisj = function (dictEq) {
    return dictEq;
};
var comonadDisj = new Control_Comonad.Comonad(function () {
    return extendDisj;
}, Data_Newtype.unwrap(newtypeDisj));
var boundedDisj = function (dictBounded) {
    return dictBounded;
};
var applyDisj = new Control_Apply.Apply(function () {
    return functorDisj;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindDisj = new Control_Bind.Bind(function () {
    return applyDisj;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeDisj = new Control_Applicative.Applicative(function () {
    return applyDisj;
}, Disj);
var monadDisj = new Control_Monad.Monad(function () {
    return applicativeDisj;
}, function () {
    return bindDisj;
});
module.exports = {
    Disj: Disj, 
    newtypeDisj: newtypeDisj, 
    eqDisj: eqDisj, 
    ordDisj: ordDisj, 
    boundedDisj: boundedDisj, 
    functorDisj: functorDisj, 
    invariantDisj: invariantDisj, 
    applyDisj: applyDisj, 
    applicativeDisj: applicativeDisj, 
    bindDisj: bindDisj, 
    monadDisj: monadDisj, 
    extendDisj: extendDisj, 
    comonadDisj: comonadDisj, 
    showDisj: showDisj, 
    semigroupDisj: semigroupDisj, 
    monoidDisj: monoidDisj, 
    semiringDisj: semiringDisj
};

},{"../Control.Applicative":3,"../Control.Apply":5,"../Control.Bind":9,"../Control.Comonad":11,"../Control.Extend":13,"../Control.Monad":31,"../Data.Bounded":52,"../Data.Eq":58,"../Data.Functor":76,"../Data.Functor.Invariant":74,"../Data.HeytingAlgebra":80,"../Data.Monoid":98,"../Data.Newtype":100,"../Data.Ord":107,"../Data.Semigroup":114,"../Data.Semiring":116,"../Data.Show":118,"../Prelude":228}],95:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Dual = function (x) {
    return x;
};
var showDual = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Dual " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupDual = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_Semigroup.append(dictSemigroup)(v1)(v);
        };
    });
};
var ordDual = function (dictOrd) {
    return dictOrd;
};
var newtypeDual = new Data_Newtype.Newtype(function (n) {
    return n;
}, Dual);
var monoidDual = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDual(dictMonoid.Semigroup0());
    }, Data_Monoid.mempty(dictMonoid));
};
var invariantDual = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorDual = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendDual = new Control_Extend.Extend(function () {
    return functorDual;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqDual = function (dictEq) {
    return dictEq;
};
var comonadDual = new Control_Comonad.Comonad(function () {
    return extendDual;
}, Data_Newtype.unwrap(newtypeDual));
var boundedDual = function (dictBounded) {
    return dictBounded;
};
var applyDual = new Control_Apply.Apply(function () {
    return functorDual;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindDual = new Control_Bind.Bind(function () {
    return applyDual;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeDual = new Control_Applicative.Applicative(function () {
    return applyDual;
}, Dual);
var monadDual = new Control_Monad.Monad(function () {
    return applicativeDual;
}, function () {
    return bindDual;
});
module.exports = {
    Dual: Dual, 
    newtypeDual: newtypeDual, 
    eqDual: eqDual, 
    ordDual: ordDual, 
    boundedDual: boundedDual, 
    functorDual: functorDual, 
    invariantDual: invariantDual, 
    applyDual: applyDual, 
    applicativeDual: applicativeDual, 
    bindDual: bindDual, 
    monadDual: monadDual, 
    extendDual: extendDual, 
    comonadDual: comonadDual, 
    showDual: showDual, 
    semigroupDual: semigroupDual, 
    monoidDual: monoidDual
};

},{"../Control.Applicative":3,"../Control.Apply":5,"../Control.Bind":9,"../Control.Comonad":11,"../Control.Extend":13,"../Control.Monad":31,"../Data.Bounded":52,"../Data.Eq":58,"../Data.Functor":76,"../Data.Functor.Invariant":74,"../Data.Monoid":98,"../Data.Newtype":100,"../Data.Ord":107,"../Data.Semigroup":114,"../Data.Show":118,"../Prelude":228}],96:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Prelude = require("../Prelude");
var Endo = function (x) {
    return x;
};
var semigroupEndo = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return function ($11) {
            return v(v1($11));
        };
    };
});
var newtypeEndo = new Data_Newtype.Newtype(function (n) {
    return n;
}, Endo);
var monoidEndo = new Data_Monoid.Monoid(function () {
    return semigroupEndo;
}, Control_Category.id(Control_Category.categoryFn));
var invariantEndo = new Data_Functor_Invariant.Invariant(function (ab) {
    return function (ba) {
        return function (v) {
            return function ($12) {
                return ab(v(ba($12)));
            };
        };
    };
});
module.exports = {
    Endo: Endo, 
    newtypeEndo: newtypeEndo, 
    invariantEndo: invariantEndo, 
    semigroupEndo: semigroupEndo, 
    monoidEndo: monoidEndo
};

},{"../Control.Category":10,"../Control.Semigroupoid":35,"../Data.Functor.Invariant":74,"../Data.Monoid":98,"../Data.Newtype":100,"../Data.Semigroup":114,"../Prelude":228}],97:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Monad = require("../Control.Monad");
var Data_Bounded = require("../Data.Bounded");
var Data_Eq = require("../Data.Eq");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Multiplicative = function (x) {
    return x;
};
var showMultiplicative = function (dictShow) {
    return new Data_Show.Show(function (v) {
        return "(Multiplicative " + (Data_Show.show(dictShow)(v) + ")");
    });
};
var semigroupMultiplicative = function (dictSemiring) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Data_Semiring.mul(dictSemiring)(v)(v1);
        };
    });
};
var ordMultiplicative = function (dictOrd) {
    return dictOrd;
};
var newtypeMultiplicative = new Data_Newtype.Newtype(function (n) {
    return n;
}, Multiplicative);
var monoidMultiplicative = function (dictSemiring) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMultiplicative(dictSemiring);
    }, Data_Semiring.one(dictSemiring));
};
var invariantMultiplicative = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorMultiplicative = new Data_Functor.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendMultiplicative = new Control_Extend.Extend(function () {
    return functorMultiplicative;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqMultiplicative = function (dictEq) {
    return dictEq;
};
var comonadMultiplicative = new Control_Comonad.Comonad(function () {
    return extendMultiplicative;
}, Data_Newtype.unwrap(newtypeMultiplicative));
var boundedMultiplicative = function (dictBounded) {
    return dictBounded;
};
var applyMultiplicative = new Control_Apply.Apply(function () {
    return functorMultiplicative;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindMultiplicative = new Control_Bind.Bind(function () {
    return applyMultiplicative;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeMultiplicative = new Control_Applicative.Applicative(function () {
    return applyMultiplicative;
}, Multiplicative);
var monadMultiplicative = new Control_Monad.Monad(function () {
    return applicativeMultiplicative;
}, function () {
    return bindMultiplicative;
});
module.exports = {
    Multiplicative: Multiplicative, 
    newtypeMultiplicative: newtypeMultiplicative, 
    eqMultiplicative: eqMultiplicative, 
    ordMultiplicative: ordMultiplicative, 
    boundedMultiplicative: boundedMultiplicative, 
    functorMultiplicative: functorMultiplicative, 
    invariantMultiplicative: invariantMultiplicative, 
    applyMultiplicative: applyMultiplicative, 
    applicativeMultiplicative: applicativeMultiplicative, 
    bindMultiplicative: bindMultiplicative, 
    monadMultiplicative: monadMultiplicative, 
    extendMultiplicative: extendMultiplicative, 
    comonadMultiplicative: comonadMultiplicative, 
    showMultiplicative: showMultiplicative, 
    semigroupMultiplicative: semigroupMultiplicative, 
    monoidMultiplicative: monoidMultiplicative
};

},{"../Control.Applicative":3,"../Control.Apply":5,"../Control.Bind":9,"../Control.Comonad":11,"../Control.Extend":13,"../Control.Monad":31,"../Data.Bounded":52,"../Data.Eq":58,"../Data.Functor":76,"../Data.Functor.Invariant":74,"../Data.Monoid":98,"../Data.Newtype":100,"../Data.Ord":107,"../Data.Semigroup":114,"../Data.Semiring":116,"../Data.Show":118,"../Prelude":228}],98:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Boolean = require("../Data.Boolean");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Function = require("../Data.Function");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Monoid = function (Semigroup0, mempty) {
    this.Semigroup0 = Semigroup0;
    this.mempty = mempty;
};
var monoidUnit = new Monoid(function () {
    return Data_Semigroup.semigroupUnit;
}, Data_Unit.unit);
var monoidString = new Monoid(function () {
    return Data_Semigroup.semigroupString;
}, "");
var monoidOrdering = new Monoid(function () {
    return Data_Ordering.semigroupOrdering;
}, Data_Ordering.EQ.value);
var monoidArray = new Monoid(function () {
    return Data_Semigroup.semigroupArray;
}, [  ]);
var mempty = function (dict) {
    return dict.mempty;
};
var monoidFn = function (dictMonoid) {
    return new Monoid(function () {
        return Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());
    }, Data_Function["const"](mempty(dictMonoid)));
};
var power = function (dictMonoid) {
    return function (x) {
        var go = function (p) {
            if (p <= 0) {
                return mempty(dictMonoid);
            };
            if (p === 1) {
                return x;
            };
            if (p % 2 === 0) {
                var x$prime = go(p / 2 | 0);
                return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x$prime);
            };
            if (Data_Boolean.otherwise) {
                var x$prime = go(p / 2 | 0);
                return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x));
            };
            throw new Error("Failed pattern match at Data.Monoid line 51, column 3 - line 51, column 17: " + [ p.constructor.name ]);
        };
        return go;
    };
};
module.exports = {
    Monoid: Monoid, 
    mempty: mempty, 
    power: power, 
    monoidUnit: monoidUnit, 
    monoidOrdering: monoidOrdering, 
    monoidFn: monoidFn, 
    monoidString: monoidString, 
    monoidArray: monoidArray
};

},{"../Data.Boolean":49,"../Data.Eq":58,"../Data.EuclideanRing":60,"../Data.Function":73,"../Data.Ord":107,"../Data.Ordering":108,"../Data.Semigroup":114,"../Data.Unit":137,"../Prelude":228}],99:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
module.exports = {};

},{}],100:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Prelude = require("../Prelude");
var Newtype = function (unwrap, wrap) {
    this.unwrap = unwrap;
    this.wrap = wrap;
};
var wrap = function (dict) {
    return dict.wrap;
};
var unwrap = function (dict) {
    return dict.unwrap;
};
var underF2 = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($50) {
                            return function ($51) {
                                return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(Data_Function.on(f)(Data_Functor.map(dictFunctor)(wrap(dictNewtype)))($50)($51));
                            };
                        };
                    };
                };
            };
        };
    };
};
var underF = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($52) {
                            return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($52)));
                        };
                    };
                };
            };
        };
    };
};
var under2 = function (dictNewtype) {
    return function (dictNewtype1) {
        return function (v) {
            return function (f) {
                return function ($53) {
                    return function ($54) {
                        return unwrap(dictNewtype1)(Data_Function.on(f)(wrap(dictNewtype))($53)($54));
                    };
                };
            };
        };
    };
};
var under = function (dictNewtype) {
    return function (dictNewtype1) {
        return function (v) {
            return function (f) {
                return function ($55) {
                    return unwrap(dictNewtype1)(f(wrap(dictNewtype)($55)));
                };
            };
        };
    };
};
var un = function (dictNewtype) {
    return function (v) {
        return unwrap(dictNewtype);
    };
};
var traverse = function (dictFunctor) {
    return function (dictNewtype) {
        return function (v) {
            return function (f) {
                return function ($56) {
                    return Data_Functor.map(dictFunctor)(wrap(dictNewtype))(f(unwrap(dictNewtype)($56)));
                };
            };
        };
    };
};
var overF2 = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($57) {
                            return function ($58) {
                                return Data_Functor.map(dictFunctor1)(wrap(dictNewtype1))(Data_Function.on(f)(Data_Functor.map(dictFunctor)(unwrap(dictNewtype)))($57)($58));
                            };
                        };
                    };
                };
            };
        };
    };
};
var overF = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($59) {
                            return Data_Functor.map(dictFunctor1)(wrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(unwrap(dictNewtype))($59)));
                        };
                    };
                };
            };
        };
    };
};
var over2 = function (dictNewtype) {
    return function (dictNewtype1) {
        return function (v) {
            return function (f) {
                return function ($60) {
                    return function ($61) {
                        return wrap(dictNewtype1)(Data_Function.on(f)(unwrap(dictNewtype))($60)($61));
                    };
                };
            };
        };
    };
};
var over = function (dictNewtype) {
    return function (dictNewtype1) {
        return function (v) {
            return function (f) {
                return function ($62) {
                    return wrap(dictNewtype1)(f(unwrap(dictNewtype)($62)));
                };
            };
        };
    };
};
var op = function (dictNewtype) {
    return un(dictNewtype);
};
var collect = function (dictFunctor) {
    return function (dictNewtype) {
        return function (v) {
            return function (f) {
                return function ($63) {
                    return wrap(dictNewtype)(f(Data_Functor.map(dictFunctor)(unwrap(dictNewtype))($63)));
                };
            };
        };
    };
};
var alaF = function (dictFunctor) {
    return function (dictFunctor1) {
        return function (dictNewtype) {
            return function (dictNewtype1) {
                return function (v) {
                    return function (f) {
                        return function ($64) {
                            return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($64)));
                        };
                    };
                };
            };
        };
    };
};
var ala = function (dictFunctor) {
    return function (dictNewtype) {
        return function (dictNewtype1) {
            return function (v) {
                return function (f) {
                    return Data_Functor.map(dictFunctor)(unwrap(dictNewtype))(f(wrap(dictNewtype1)));
                };
            };
        };
    };
};
module.exports = {
    Newtype: Newtype, 
    ala: ala, 
    alaF: alaF, 
    collect: collect, 
    op: op, 
    over: over, 
    over2: over2, 
    overF: overF, 
    overF2: overF2, 
    traverse: traverse, 
    un: un, 
    under: under, 
    under2: under2, 
    underF: underF, 
    underF2: underF2, 
    unwrap: unwrap, 
    wrap: wrap
};

},{"../Control.Semigroupoid":35,"../Data.Function":73,"../Data.Functor":76,"../Prelude":228}],101:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Alternative = require("../Control.Alternative");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Plus = require("../Control.Plus");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var NonEmpty = (function () {
    function NonEmpty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    NonEmpty.create = function (value0) {
        return function (value1) {
            return new NonEmpty(value0, value1);
        };
    };
    return NonEmpty;
})();
var tail = function (v) {
    return v.value1;
};
var singleton = function (dictPlus) {
    return function (a) {
        return new NonEmpty(a, Control_Plus.empty(dictPlus));
    };
};
var showNonEmpty = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            return "(NonEmpty " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
        });
    };
};
var oneOf = function (dictAlternative) {
    return function (v) {
        return Control_Alt.alt((dictAlternative.Plus1()).Alt0())(Control_Applicative.pure(dictAlternative.Applicative0())(v.value0))(v.value1);
    };
};
var head = function (v) {
    return v.value0;
};
var functorNonEmpty = function (dictFunctor) {
    return new Data_Functor.Functor(function (f) {
        return function (v) {
            return new NonEmpty(f(v.value0), Data_Functor.map(dictFunctor)(f)(v.value1));
        };
    });
};
var fromNonEmpty = function (f) {
    return function (v) {
        return f(v.value0)(v.value1);
    };
};
var foldl1 = function (dictFoldable) {
    return function (f) {
        return function (v) {
            return Data_Foldable.foldl(dictFoldable)(f)(v.value0)(v.value1);
        };
    };
};
var foldableNonEmpty = function (dictFoldable) {
    return new Data_Foldable.Foldable(function (dictMonoid) {
        return function (f) {
            return function (v) {
                return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f)(v.value1));
            };
        };
    }, function (f) {
        return function (b) {
            return function (v) {
                return Data_Foldable.foldl(dictFoldable)(f)(f(b)(v.value0))(v.value1);
            };
        };
    }, function (f) {
        return function (b) {
            return function (v) {
                return f(v.value0)(Data_Foldable.foldr(dictFoldable)(f)(b)(v.value1));
            };
        };
    });
};
var traversableNonEmpty = function (dictTraversable) {
    return new Data_Traversable.Traversable(function () {
        return foldableNonEmpty(dictTraversable.Foldable1());
    }, function () {
        return functorNonEmpty(dictTraversable.Functor0());
    }, function (dictApplicative) {
        return function (v) {
            return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(NonEmpty.create)(v.value0))(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v.value1));
        };
    }, function (dictApplicative) {
        return function (f) {
            return function (v) {
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(NonEmpty.create)(f(v.value0)))(Data_Traversable.traverse(dictTraversable)(dictApplicative)(f)(v.value1));
            };
        };
    });
};
var foldMap1 = function (dictSemigroup) {
    return function (dictFoldable) {
        return function (f) {
            return function (v) {
                return Data_Foldable.foldl(dictFoldable)(function (s) {
                    return function (a1) {
                        return Data_Semigroup.append(dictSemigroup)(s)(f(a1));
                    };
                })(f(v.value0))(v.value1);
            };
        };
    };
};
var fold1 = function (dictSemigroup) {
    return function (dictFoldable) {
        return foldMap1(dictSemigroup)(dictFoldable)(Control_Category.id(Control_Category.categoryFn));
    };
};
var eq1NonEmpty = function (dictEq1) {
    return new Data_Eq.Eq1(function (dictEq) {
        return function (v) {
            return function (v1) {
                return Data_Eq.eq(dictEq)(v.value0)(v1.value0) && Data_Eq.eq1(dictEq1)(dictEq)(v.value1)(v1.value1);
            };
        };
    });
};
var eqNonEmpty = function (dictEq1) {
    return function (dictEq) {
        return new Data_Eq.Eq(Data_Eq.eq1(eq1NonEmpty(dictEq1))(dictEq));
    };
};
var ord1NonEmpty = function (dictOrd1) {
    return new Data_Ord.Ord1(function () {
        return eq1NonEmpty(dictOrd1.Eq10());
    }, function (dictOrd) {
        return function (v) {
            return function (v1) {
                var v2 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
                if (v2 instanceof Data_Ordering.EQ) {
                    return Data_Ord.compare1(dictOrd1)(dictOrd)(v.value1)(v1.value1);
                };
                return v2;
            };
        };
    });
};
var ordNonEmpty = function (dictOrd1) {
    return function (dictOrd) {
        return new Data_Ord.Ord(function () {
            return eqNonEmpty(dictOrd1.Eq10())(dictOrd.Eq0());
        }, Data_Ord.compare1(ord1NonEmpty(dictOrd1))(dictOrd));
    };
};
module.exports = {
    NonEmpty: NonEmpty, 
    fold1: fold1, 
    foldMap1: foldMap1, 
    foldl1: foldl1, 
    fromNonEmpty: fromNonEmpty, 
    head: head, 
    oneOf: oneOf, 
    singleton: singleton, 
    tail: tail, 
    showNonEmpty: showNonEmpty, 
    eqNonEmpty: eqNonEmpty, 
    eq1NonEmpty: eq1NonEmpty, 
    ordNonEmpty: ordNonEmpty, 
    ord1NonEmpty: ord1NonEmpty, 
    functorNonEmpty: functorNonEmpty, 
    foldableNonEmpty: foldableNonEmpty, 
    traversableNonEmpty: traversableNonEmpty
};

},{"../Control.Alt":1,"../Control.Alternative":2,"../Control.Applicative":3,"../Control.Apply":5,"../Control.Category":10,"../Control.Plus":34,"../Data.Eq":58,"../Data.Foldable":63,"../Data.Functor":76,"../Data.HeytingAlgebra":80,"../Data.Ord":107,"../Data.Ordering":108,"../Data.Semigroup":114,"../Data.Show":118,"../Data.Traversable":130,"../Prelude":228}],102:[function(require,module,exports){
"use strict";

exports["null"] = null;

exports.nullable = function (a, r, f) {
  return a == null ? r : f(a);
};

exports.notNull = function (x) {
  return x;
};

},{}],103:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
var toMaybe = function (n) {
    return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
};
var showNullable = function (dictShow) {
    return new Data_Show.Show(function ($5) {
        return Data_Maybe.maybe("null")(Data_Show.show(dictShow))(toMaybe($5));
    });
};
var eqNullable = function (dictEq) {
    return new Data_Eq.Eq(Data_Function.on(Data_Eq.eq(Data_Maybe.eqMaybe(dictEq)))(toMaybe));
};
var ordNullable = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqNullable(dictOrd.Eq0());
    }, Data_Function.on(Data_Ord.compare(Data_Maybe.ordMaybe(dictOrd)))(toMaybe));
};
var eq1Nullable = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqNullable(dictEq));
});
var ord1Nullable = new Data_Ord.Ord1(function () {
    return eq1Nullable;
}, function (dictOrd) {
    return Data_Ord.compare(ordNullable(dictOrd));
});
module.exports = {
    toMaybe: toMaybe, 
    toNullable: toNullable, 
    showNullable: showNullable, 
    eqNullable: eqNullable, 
    eq1Nullable: eq1Nullable, 
    ordNullable: ordNullable, 
    ord1Nullable: ord1Nullable
};

},{"../Control.Semigroupoid":35,"../Data.Eq":58,"../Data.Function":73,"../Data.Function.Uncurried":72,"../Data.Maybe":91,"../Data.Ord":107,"../Data.Show":118,"../Prelude":228,"./foreign":102}],104:[function(require,module,exports){
"use strict";

exports.unsafeCompareImpl = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (x) {
        return function (y) {
          return x < y ? lt : x === y ? eq : gt;
        };
      };
    };
  };
};

},{}],105:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Data_Ordering = require("../Data.Ordering");
var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
module.exports = {
    unsafeCompare: unsafeCompare
};

},{"../Data.Ordering":108,"./foreign":104}],106:[function(require,module,exports){
"use strict";

exports.ordArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      var i = 0;
      var xlen = xs.length;
      var ylen = ys.length;
      while (i < xlen && i < ylen) {
        var x = xs[i];
        var y = ys[i];
        var o = f(x)(y);
        if (o !== 0) {
          return o;
        }
        i++;
      }
      if (xlen === ylen) {
        return 0;
      } else if (xlen > ylen) {
        return -1;
      } else {
        return 1;
      }
    };
  };
};

},{}],107:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Ord_Unsafe = require("../Data.Ord.Unsafe");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_Unit = require("../Data.Unit");
var Data_Void = require("../Data.Void");
var Ord = function (Eq0, compare) {
    this.Eq0 = Eq0;
    this.compare = compare;
};
var Ord1 = function (Eq10, compare1) {
    this.Eq10 = Eq10;
    this.compare1 = compare1;
};
var ordVoid = new Ord(function () {
    return Data_Eq.eqVoid;
}, function (v) {
    return function (v1) {
        return Data_Ordering.EQ.value;
    };
});
var ordUnit = new Ord(function () {
    return Data_Eq.eqUnit;
}, function (v) {
    return function (v1) {
        return Data_Ordering.EQ.value;
    };
});
var ordString = new Ord(function () {
    return Data_Eq.eqString;
}, Data_Ord_Unsafe.unsafeCompare);
var ordOrdering = new Ord(function () {
    return Data_Ordering.eqOrdering;
}, function (v) {
    return function (v1) {
        if (v instanceof Data_Ordering.LT && v1 instanceof Data_Ordering.LT) {
            return Data_Ordering.EQ.value;
        };
        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.EQ) {
            return Data_Ordering.EQ.value;
        };
        if (v instanceof Data_Ordering.GT && v1 instanceof Data_Ordering.GT) {
            return Data_Ordering.EQ.value;
        };
        if (v instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.LT) {
            return Data_Ordering.GT.value;
        };
        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.GT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        throw new Error("Failed pattern match at Data.Ord line 68, column 1 - line 68, column 37: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var ordNumber = new Ord(function () {
    return Data_Eq.eqNumber;
}, Data_Ord_Unsafe.unsafeCompare);
var ordInt = new Ord(function () {
    return Data_Eq.eqInt;
}, Data_Ord_Unsafe.unsafeCompare);
var ordChar = new Ord(function () {
    return Data_Eq.eqChar;
}, Data_Ord_Unsafe.unsafeCompare);
var ordBoolean = new Ord(function () {
    return Data_Eq.eqBoolean;
}, Data_Ord_Unsafe.unsafeCompare);
var compare1 = function (dict) {
    return dict.compare1;
};
var compare = function (dict) {
    return dict.compare;
};
var comparing = function (dictOrd) {
    return function (f) {
        return Data_Function.on(compare(dictOrd))(f);
    };
};
var greaterThan = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.GT) {
                return true;
            };
            return false;
        };
    };
};
var greaterThanOrEq = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.LT) {
                return false;
            };
            return true;
        };
    };
};
var signum = function (dictOrd) {
    return function (dictRing) {
        return function (x) {
            var $33 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
            if ($33) {
                return Data_Semiring.one(dictRing.Semiring0());
            };
            return Data_Ring.negate(dictRing)(Data_Semiring.one(dictRing.Semiring0()));
        };
    };
};
var lessThan = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.LT) {
                return true;
            };
            return false;
        };
    };
};
var lessThanOrEq = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var v = compare(dictOrd)(a1)(a2);
            if (v instanceof Data_Ordering.GT) {
                return false;
            };
            return true;
        };
    };
};
var max = function (dictOrd) {
    return function (x) {
        return function (y) {
            var v = compare(dictOrd)(x)(y);
            if (v instanceof Data_Ordering.LT) {
                return y;
            };
            if (v instanceof Data_Ordering.EQ) {
                return x;
            };
            if (v instanceof Data_Ordering.GT) {
                return x;
            };
            throw new Error("Failed pattern match at Data.Ord line 123, column 3 - line 126, column 12: " + [ v.constructor.name ]);
        };
    };
};
var min = function (dictOrd) {
    return function (x) {
        return function (y) {
            var v = compare(dictOrd)(x)(y);
            if (v instanceof Data_Ordering.LT) {
                return x;
            };
            if (v instanceof Data_Ordering.EQ) {
                return x;
            };
            if (v instanceof Data_Ordering.GT) {
                return y;
            };
            throw new Error("Failed pattern match at Data.Ord line 114, column 3 - line 117, column 12: " + [ v.constructor.name ]);
        };
    };
};
var ordArray = function (dictOrd) {
    return new Ord(function () {
        return Data_Eq.eqArray(dictOrd.Eq0());
    }, (function () {
        var toDelta = function (x) {
            return function (y) {
                var v = compare(dictOrd)(x)(y);
                if (v instanceof Data_Ordering.EQ) {
                    return 0;
                };
                if (v instanceof Data_Ordering.LT) {
                    return 1;
                };
                if (v instanceof Data_Ordering.GT) {
                    return -1 | 0;
                };
                throw new Error("Failed pattern match at Data.Ord line 61, column 7 - line 66, column 1: " + [ v.constructor.name ]);
            };
        };
        return function (xs) {
            return function (ys) {
                return compare(ordInt)(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));
            };
        };
    })());
};
var ord1Array = new Ord1(function () {
    return Data_Eq.eq1Array;
}, function (dictOrd) {
    return compare(ordArray(dictOrd));
});
var clamp = function (dictOrd) {
    return function (low) {
        return function (hi) {
            return function (x) {
                return min(dictOrd)(hi)(max(dictOrd)(low)(x));
            };
        };
    };
};
var between = function (dictOrd) {
    return function (low) {
        return function (hi) {
            return function (x) {
                if (lessThan(dictOrd)(x)(low)) {
                    return false;
                };
                if (greaterThan(dictOrd)(x)(hi)) {
                    return false;
                };
                return true;
            };
        };
    };
};
var abs = function (dictOrd) {
    return function (dictRing) {
        return function (x) {
            var $42 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
            if ($42) {
                return x;
            };
            return Data_Ring.negate(dictRing)(x);
        };
    };
};
module.exports = {
    Ord: Ord, 
    Ord1: Ord1, 
    abs: abs, 
    between: between, 
    clamp: clamp, 
    compare: compare, 
    compare1: compare1, 
    comparing: comparing, 
    greaterThan: greaterThan, 
    greaterThanOrEq: greaterThanOrEq, 
    lessThan: lessThan, 
    lessThanOrEq: lessThanOrEq, 
    max: max, 
    min: min, 
    signum: signum, 
    ordBoolean: ordBoolean, 
    ordInt: ordInt, 
    ordNumber: ordNumber, 
    ordString: ordString, 
    ordChar: ordChar, 
    ordUnit: ordUnit, 
    ordVoid: ordVoid, 
    ordArray: ordArray, 
    ordOrdering: ordOrdering, 
    ord1Array: ord1Array
};

},{"../Data.Eq":58,"../Data.Function":73,"../Data.Ord.Unsafe":105,"../Data.Ordering":108,"../Data.Ring":110,"../Data.Semiring":116,"../Data.Unit":137,"../Data.Void":138,"./foreign":106}],108:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Eq = require("../Data.Eq");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var LT = (function () {
    function LT() {

    };
    LT.value = new LT();
    return LT;
})();
var GT = (function () {
    function GT() {

    };
    GT.value = new GT();
    return GT;
})();
var EQ = (function () {
    function EQ() {

    };
    EQ.value = new EQ();
    return EQ;
})();
var showOrdering = new Data_Show.Show(function (v) {
    if (v instanceof LT) {
        return "LT";
    };
    if (v instanceof GT) {
        return "GT";
    };
    if (v instanceof EQ) {
        return "EQ";
    };
    throw new Error("Failed pattern match at Data.Ordering line 26, column 1 - line 26, column 39: " + [ v.constructor.name ]);
});
var semigroupOrdering = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        if (v instanceof LT) {
            return LT.value;
        };
        if (v instanceof GT) {
            return GT.value;
        };
        if (v instanceof EQ) {
            return v1;
        };
        throw new Error("Failed pattern match at Data.Ordering line 21, column 1 - line 21, column 49: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var invert = function (v) {
    if (v instanceof GT) {
        return LT.value;
    };
    if (v instanceof EQ) {
        return EQ.value;
    };
    if (v instanceof LT) {
        return GT.value;
    };
    throw new Error("Failed pattern match at Data.Ordering line 33, column 1 - line 33, column 31: " + [ v.constructor.name ]);
};
var eqOrdering = new Data_Eq.Eq(function (v) {
    return function (v1) {
        if (v instanceof LT && v1 instanceof LT) {
            return true;
        };
        if (v instanceof GT && v1 instanceof GT) {
            return true;
        };
        if (v instanceof EQ && v1 instanceof EQ) {
            return true;
        };
        return false;
    };
});
module.exports = {
    LT: LT, 
    GT: GT, 
    EQ: EQ, 
    invert: invert, 
    eqOrdering: eqOrdering, 
    semigroupOrdering: semigroupOrdering, 
    showOrdering: showOrdering
};

},{"../Data.Eq":58,"../Data.Semigroup":114,"../Data.Show":118}],109:[function(require,module,exports){
"use strict";

exports.intSub = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x - y | 0;
  };
};

exports.numSub = function (n1) {
  return function (n2) {
    return n1 - n2;
  };
};

},{}],110:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Data_Semiring = require("../Data.Semiring");
var Data_Unit = require("../Data.Unit");
var Ring = function (Semiring0, sub) {
    this.Semiring0 = Semiring0;
    this.sub = sub;
};
var sub = function (dict) {
    return dict.sub;
};
var ringUnit = new Ring(function () {
    return Data_Semiring.semiringUnit;
}, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
});
var ringNumber = new Ring(function () {
    return Data_Semiring.semiringNumber;
}, $foreign.numSub);
var ringInt = new Ring(function () {
    return Data_Semiring.semiringInt;
}, $foreign.intSub);
var ringFn = function (dictRing) {
    return new Ring(function () {
        return Data_Semiring.semiringFn(dictRing.Semiring0());
    }, function (f) {
        return function (g) {
            return function (x) {
                return sub(dictRing)(f(x))(g(x));
            };
        };
    });
};
var negate = function (dictRing) {
    return function (a) {
        return sub(dictRing)(Data_Semiring.zero(dictRing.Semiring0()))(a);
    };
};
module.exports = {
    Ring: Ring, 
    negate: negate, 
    sub: sub, 
    ringInt: ringInt, 
    ringNumber: ringNumber, 
    ringUnit: ringUnit, 
    ringFn: ringFn
};

},{"../Data.Semiring":116,"../Data.Unit":137,"./foreign":109}],111:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Act = function (x) {
    return x;
};
var Foldable1 = function (Foldable0, fold1, foldMap1) {
    this.Foldable0 = Foldable0;
    this.fold1 = fold1;
    this.foldMap1 = foldMap1;
};
var semigroupAct = function (dictApply) {
    return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
            return Control_Apply.applySecond(dictApply)(v)(v1);
        };
    });
};
var getAct = function (v) {
    return v;
};
var foldMap1 = function (dict) {
    return dict.foldMap1;
};
var traverse1_ = function (dictFoldable1) {
    return function (dictApply) {
        return function (f) {
            return function (t) {
                return Data_Functor.voidRight(dictApply.Functor0())(Data_Unit.unit)(getAct(foldMap1(dictFoldable1)(semigroupAct(dictApply))(function ($28) {
                    return Act(f($28));
                })(t)));
            };
        };
    };
};
var for1_ = function (dictFoldable1) {
    return function (dictApply) {
        return Data_Function.flip(traverse1_(dictFoldable1)(dictApply));
    };
};
var sequence1_ = function (dictFoldable1) {
    return function (dictApply) {
        return traverse1_(dictFoldable1)(dictApply)(Control_Category.id(Control_Category.categoryFn));
    };
};
var fold1Default = function (dictFoldable1) {
    return function (dictSemigroup) {
        return foldMap1(dictFoldable1)(dictSemigroup)(Control_Category.id(Control_Category.categoryFn));
    };
};
var foldableDual = new Foldable1(function () {
    return Data_Foldable.foldableDual;
}, function (dictSemigroup) {
    return fold1Default(foldableDual)(dictSemigroup);
}, function (dictSemigroup) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
});
var foldableMultiplicative = new Foldable1(function () {
    return Data_Foldable.foldableMultiplicative;
}, function (dictSemigroup) {
    return fold1Default(foldableMultiplicative)(dictSemigroup);
}, function (dictSemigroup) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
});
var fold1 = function (dict) {
    return dict.fold1;
};
var foldMap1Default = function (dictFoldable1) {
    return function (dictFunctor) {
        return function (dictSemigroup) {
            return function (f) {
                return function ($29) {
                    return fold1(dictFoldable1)(dictSemigroup)(Data_Functor.map(dictFunctor)(f)($29));
                };
            };
        };
    };
};
module.exports = {
    Foldable1: Foldable1, 
    fold1: fold1, 
    fold1Default: fold1Default, 
    foldMap1: foldMap1, 
    foldMap1Default: foldMap1Default, 
    for1_: for1_, 
    sequence1_: sequence1_, 
    traverse1_: traverse1_, 
    foldableDual: foldableDual, 
    foldableMultiplicative: foldableMultiplicative
};

},{"../Control.Apply":5,"../Control.Category":10,"../Control.Semigroupoid":35,"../Data.Foldable":63,"../Data.Function":73,"../Data.Functor":76,"../Data.Monoid.Dual":95,"../Data.Monoid.Multiplicative":97,"../Data.Semigroup":114,"../Data.Unit":137,"../Prelude":228}],112:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Category = require("../Control.Category");
var Data_Functor = require("../Data.Functor");
var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var Traversable1 = function (Foldable10, Traversable1, sequence1, traverse1) {
    this.Foldable10 = Foldable10;
    this.Traversable1 = Traversable1;
    this.sequence1 = sequence1;
    this.traverse1 = traverse1;
};
var traverse1 = function (dict) {
    return dict.traverse1;
};
var sequence1Default = function (dictTraversable1) {
    return function (dictApply) {
        return traverse1(dictTraversable1)(dictApply)(Control_Category.id(Control_Category.categoryFn));
    };
};
var sequence1 = function (dict) {
    return dict.sequence1;
};
var traverse1Default = function (dictTraversable1) {
    return function (dictApply) {
        return function (f) {
            return function (ta) {
                return sequence1(dictTraversable1)(dictApply)(Data_Functor.map((dictTraversable1.Traversable1()).Functor0())(f)(ta));
            };
        };
    };
};
module.exports = {
    Traversable1: Traversable1, 
    sequence1: sequence1, 
    sequence1Default: sequence1Default, 
    traverse1: traverse1, 
    traverse1Default: traverse1Default
};

},{"../Control.Category":10,"../Data.Functor":76,"../Data.Semigroup.Foldable":111,"../Data.Traversable":130,"../Prelude":228}],113:[function(require,module,exports){
"use strict";

exports.concatString = function (s1) {
  return function (s2) {
    return s1 + s2;
  };
};

exports.concatArray = function (xs) {
  return function (ys) {
    if (xs.length === 0) return ys;
    if (ys.length === 0) return xs;
    return xs.concat(ys);
  };
};

},{}],114:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Data_Unit = require("../Data.Unit");
var Data_Void = require("../Data.Void");
var Semigroup = function (append) {
    this.append = append;
};
var semigroupVoid = new Semigroup(function (v) {
    return Data_Void.absurd;
});
var semigroupUnit = new Semigroup(function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
});
var semigroupString = new Semigroup($foreign.concatString);
var semigroupArray = new Semigroup($foreign.concatArray);
var append = function (dict) {
    return dict.append;
};
var semigroupFn = function (dictSemigroup) {
    return new Semigroup(function (f) {
        return function (g) {
            return function (x) {
                return append(dictSemigroup)(f(x))(g(x));
            };
        };
    });
};
module.exports = {
    Semigroup: Semigroup, 
    append: append, 
    semigroupString: semigroupString, 
    semigroupUnit: semigroupUnit, 
    semigroupVoid: semigroupVoid, 
    semigroupFn: semigroupFn, 
    semigroupArray: semigroupArray
};

},{"../Data.Unit":137,"../Data.Void":138,"./foreign":113}],115:[function(require,module,exports){
"use strict";

exports.intAdd = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x + y | 0;
  };
};

exports.intMul = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x * y | 0;
  };
};

exports.numAdd = function (n1) {
  return function (n2) {
    return n1 + n2;
  };
};

exports.numMul = function (n1) {
  return function (n2) {
    return n1 * n2;
  };
};

},{}],116:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Data_Unit = require("../Data.Unit");
var Semiring = function (add, mul, one, zero) {
    this.add = add;
    this.mul = mul;
    this.one = one;
    this.zero = zero;
};
var zero = function (dict) {
    return dict.zero;
};
var semiringUnit = new Semiring(function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, function (v) {
    return function (v1) {
        return Data_Unit.unit;
    };
}, Data_Unit.unit, Data_Unit.unit);
var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
var one = function (dict) {
    return dict.one;
};
var mul = function (dict) {
    return dict.mul;
};
var add = function (dict) {
    return dict.add;
};
var semiringFn = function (dictSemiring) {
    return new Semiring(function (f) {
        return function (g) {
            return function (x) {
                return add(dictSemiring)(f(x))(g(x));
            };
        };
    }, function (f) {
        return function (g) {
            return function (x) {
                return mul(dictSemiring)(f(x))(g(x));
            };
        };
    }, function (v) {
        return one(dictSemiring);
    }, function (v) {
        return zero(dictSemiring);
    });
};
module.exports = {
    Semiring: Semiring, 
    add: add, 
    mul: mul, 
    one: one, 
    zero: zero, 
    semiringInt: semiringInt, 
    semiringNumber: semiringNumber, 
    semiringFn: semiringFn, 
    semiringUnit: semiringUnit
};

},{"../Data.Unit":137,"./foreign":115}],117:[function(require,module,exports){
"use strict";

exports.showIntImpl = function (n) {
  return n.toString();
};

exports.showNumberImpl = function (n) {
  var str = n.toString();
  return isNaN(str + ".0") ? str : str + ".0";
};

exports.showCharImpl = function (c) {
  var code = c.charCodeAt(0);
  if (code < 0x20 || code === 0x7F) {
    switch (c) {
      case "\x07": return "'\\a'";
      case "\b": return "'\\b'";
      case "\f": return "'\\f'";
      case "\n": return "'\\n'";
      case "\r": return "'\\r'";
      case "\t": return "'\\t'";
      case "\v": return "'\\v'";
    }
    return "'\\" + code.toString(10) + "'";
  }
  return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
};

exports.showStringImpl = function (s) {
  var l = s.length;
  return "\"" + s.replace(
    /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
    function (c, i) {
      switch (c) {
        case "\"":
        case "\\":
          return "\\" + c;
        case "\x07": return "\\a";
        case "\b": return "\\b";
        case "\f": return "\\f";
        case "\n": return "\\n";
        case "\r": return "\\r";
        case "\t": return "\\t";
        case "\v": return "\\v";
      }
      var k = i + 1;
      var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
      return "\\" + c.charCodeAt(0).toString(10) + empty;
    }
  ) + "\"";
};

exports.showArrayImpl = function (f) {
  return function (xs) {
    var ss = [];
    for (var i = 0, l = xs.length; i < l; i++) {
      ss[i] = f(xs[i]);
    }
    return "[" + ss.join(",") + "]";
  };
};

},{}],118:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Show = function (show) {
    this.show = show;
};
var showString = new Show($foreign.showStringImpl);
var showNumber = new Show($foreign.showNumberImpl);
var showInt = new Show($foreign.showIntImpl);
var showChar = new Show($foreign.showCharImpl);
var showBoolean = new Show(function (v) {
    if (v) {
        return "true";
    };
    if (!v) {
        return "false";
    };
    throw new Error("Failed pattern match at Data.Show line 12, column 1 - line 12, column 37: " + [ v.constructor.name ]);
});
var show = function (dict) {
    return dict.show;
};
var showArray = function (dictShow) {
    return new Show($foreign.showArrayImpl(show(dictShow)));
};
module.exports = {
    Show: Show, 
    show: show, 
    showBoolean: showBoolean, 
    showInt: showInt, 
    showNumber: showNumber, 
    showChar: showChar, 
    showString: showString, 
    showArray: showArray
};

},{"./foreign":117}],119:[function(require,module,exports){
"use strict";

exports["new"] = function () {
  return {};
};

exports.peekImpl = function (just) {
  return function (nothing) {
    return function (m) {
      return function (k) {
        return function () {
          return {}.hasOwnProperty.call(m, k) ? just(m[k]) : nothing;
        };
      };
    };
  };
};

exports.poke = function (m) {
  return function (k) {
    return function (v) {
      return function () {
        m[k] = v;
        return m;
      };
    };
  };
};

exports["delete"] = function (m) {
  return function (k) {
    return function () {
      delete m[k];
      return m;
    };
  };
};

},{}],120:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_ST = require("../Control.Monad.ST");
var Data_Maybe = require("../Data.Maybe");
var peek = $foreign.peekImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
    peek: peek, 
    "delete": $foreign["delete"], 
    "new": $foreign["new"], 
    poke: $foreign.poke
};

},{"../Control.Monad.Eff":20,"../Control.Monad.ST":27,"../Data.Maybe":91,"./foreign":119}],121:[function(require,module,exports){
"use strict";

exports._copyEff = function (m) {
  return function () {
    var r = {};
    for (var k in m) {
      if (hasOwnProperty.call(m, k)) {
        r[k] = m[k];
      }
    }
    return r;
  };
};

exports.empty = {};

exports.runST = function (f) {
  return f;
};

exports._fmapStrMap = function (m0, f) {
  var m = {};
  for (var k in m0) {
    if (hasOwnProperty.call(m0, k)) {
      m[k] = f(m0[k]);
    }
  }
  return m;
};

exports._mapWithKey = function (m0, f) {
  var m = {};
  for (var k in m0) {
    if (hasOwnProperty.call(m0, k)) {
      m[k] = f(k)(m0[k]);
    }
  }
  return m;
};

exports._foldM = function (bind) {
  return function (f) {
    return function (mz) {
      return function (m) {
        var acc = mz;
        function g(k) {
          return function (z) {
            return f(z)(k)(m[k]);
          };
        }
        for (var k in m) {
          if (hasOwnProperty.call(m, k)) {
            acc = bind(acc)(g(k));
          }
        }
        return acc;
      };
    };
  };
};

exports._foldSCStrMap = function (m, z, f, fromMaybe) {
  var acc = z;
  for (var k in m) {
    if (hasOwnProperty.call(m, k)) {
      var maybeR = f(acc)(k)(m[k]);
      var r = fromMaybe(null)(maybeR);
      if (r === null) return acc;
      else acc = r;
    }
  }
  return acc;
};

exports.all = function (f) {
  return function (m) {
    for (var k in m) {
      if (hasOwnProperty.call(m, k) && !f(k)(m[k])) return false;
    }
    return true;
  };
};

exports.size = function (m) {
  var s = 0;
  for (var k in m) {
    if (hasOwnProperty.call(m, k)) {
      ++s;
    }
  }
  return s;
};

exports._lookup = function (no, yes, k, m) {
  return k in m ? yes(m[k]) : no;
};

exports._unsafeDeleteStrMap = function (m, k) {
  delete m[k];
  return m;
};

exports._lookupST = function (no, yes, k, m) {
  return function () {
    return k in m ? yes(m[k]) : no;
  };
};

function toArrayWithKey(f) {
  return function (m) {
    var r = [];
    for (var k in m) {
      if (hasOwnProperty.call(m, k)) {
        r.push(f(k)(m[k]));
      }
    }
    return r;
  };
}

exports.toArrayWithKey = toArrayWithKey;

exports.keys = Object.keys || toArrayWithKey(function (k) {
  return function () { return k; };
});

},{}],122:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_ST = require("../Control.Monad.ST");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Functor = require("../Data.Functor");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_StrMap_ST = require("../Data.StrMap.ST");
var Data_Traversable = require("../Data.Traversable");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex");
var Data_Tuple = require("../Data.Tuple");
var Data_Unfoldable = require("../Data.Unfoldable");
var Prelude = require("../Prelude");
var values = $foreign.toArrayWithKey(function (v) {
    return function (v1) {
        return v1;
    };
});
var toUnfoldable = function (dictUnfoldable) {
    return function ($46) {
        return Data_Array.toUnfoldable(dictUnfoldable)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)($46));
    };
};
var toAscUnfoldable = function (dictUnfoldable) {
    return function ($47) {
        return Data_Array.toUnfoldable(dictUnfoldable)(Data_Array.sortWith(Data_Ord.ordString)(Data_Tuple.fst)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)($47)));
    };
};
var toAscArray = toAscUnfoldable(Data_Unfoldable.unfoldableArray);
var toArray = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);
var thawST = $foreign._copyEff;
var showStrMap = function (dictShow) {
    return new Data_Show.Show(function (m) {
        return "(fromFoldable " + (Data_Show.show(Data_Show.showArray(Data_Tuple.showTuple(Data_Show.showString)(dictShow)))(toArray(m)) + ")");
    });
};
var pureST = function (f) {
    return Control_Monad_Eff.runPure($foreign.runST(f));
};
var singleton = function (k) {
    return function (v) {
        return pureST(function __do() {
            var v1 = Data_StrMap_ST["new"]();
            return Data_StrMap_ST.poke(v1)(k)(v)();
        });
    };
};
var mutate = function (f) {
    return function (m) {
        return pureST(function __do() {
            var v = thawST(m)();
            var v1 = f(v)();
            return v;
        });
    };
};
var member = Data_Function_Uncurried.runFn4($foreign._lookup)(false)(Data_Function["const"](true));
var mapWithKey = function (f) {
    return function (m) {
        return $foreign._mapWithKey(m, f);
    };
};
var lookup = Data_Function_Uncurried.runFn4($foreign._lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
var isSubmap = function (dictEq) {
    return function (m1) {
        return function (m2) {
            var f = function (k) {
                return function (v) {
                    return $foreign._lookup(false, Data_Eq.eq(dictEq)(v), k, m2);
                };
            };
            return $foreign.all(f)(m1);
        };
    };
};
var isEmpty = $foreign.all(function (v) {
    return function (v1) {
        return false;
    };
});
var insert = function (k) {
    return function (v) {
        return mutate(function (s) {
            return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_StrMap_ST.poke(s)(k)(v));
        });
    };
};
var functorStrMap = new Data_Functor.Functor(function (f) {
    return function (m) {
        return $foreign._fmapStrMap(m, f);
    };
});
var functorWithIndexStrMap = new Data_FunctorWithIndex.FunctorWithIndex(function () {
    return functorStrMap;
}, mapWithKey);
var fromFoldableWith = function (dictFoldable) {
    return function (f) {
        return function (l) {
            return pureST(function __do() {
                var v = Data_StrMap_ST["new"]();
                Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(dictFoldable)(l)(function (v1) {
                    return Control_Bind.bind(Control_Monad_Eff.bindEff)($foreign._lookupST(v1.value1, f(v1.value1), v1.value0, v))(Data_StrMap_ST.poke(v)(v1.value0));
                })();
                return v;
            });
        };
    };
};
var fromFoldable = function (dictFoldable) {
    return function (l) {
        return pureST(function __do() {
            var v = Data_StrMap_ST["new"]();
            Control_Monad_Eff.foreachE(Data_Array.fromFoldable(dictFoldable)(l))(function (v1) {
                return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_StrMap_ST.poke(v)(v1.value0)(v1.value1));
            })();
            return v;
        });
    };
};
var freezeST = $foreign._copyEff;
var foldMaybe = function (f) {
    return function (z) {
        return function (m) {
            return $foreign._foldSCStrMap(m, z, f, Data_Maybe.fromMaybe);
        };
    };
};
var foldM = function (dictMonad) {
    return function (f) {
        return function (z) {
            return $foreign._foldM(Control_Bind.bind(dictMonad.Bind1()))(f)(Control_Applicative.pure(dictMonad.Applicative0())(z));
        };
    };
};
var semigroupStrMap = function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (m1) {
        return function (m2) {
            return mutate(function (s1) {
                return Data_Functor["void"](Control_Monad_Eff.functorEff)(foldM(Control_Monad_Eff.monadEff)(function (s2) {
                    return function (k) {
                        return function (v2) {
                            return Data_StrMap_ST.poke(s2)(k)($foreign._lookup(v2, function (v1) {
                                return Data_Semigroup.append(dictSemigroup)(v1)(v2);
                            }, k, m2));
                        };
                    };
                })(s1)(m1));
            })(m2);
        };
    });
};
var monoidStrMap = function (dictSemigroup) {
    return new Data_Monoid.Monoid(function () {
        return semigroupStrMap(dictSemigroup);
    }, $foreign.empty);
};
var union = function (m) {
    return mutate(function (s) {
        return Data_Functor["void"](Control_Monad_Eff.functorEff)(foldM(Control_Monad_Eff.monadEff)(Data_StrMap_ST.poke)(s)(m));
    });
};
var unions = function (dictFoldable) {
    return Data_Foldable.foldl(dictFoldable)(union)($foreign.empty);
};
var fold = $foreign._foldM(Data_Function.applyFlipped);
var foldMap = function (dictMonoid) {
    return function (f) {
        return fold(function (acc) {
            return function (k) {
                return function (v) {
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(k)(v));
                };
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
};
var foldableStrMap = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return foldMap(dictMonoid)(Data_Function["const"](f));
    };
}, function (f) {
    return fold(function (z) {
        return function (v) {
            return f(z);
        };
    });
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
        };
    };
});
var foldableWithIndexStrMap = new Data_FoldableWithIndex.FoldableWithIndex(function () {
    return foldableStrMap;
}, function (dictMonoid) {
    return foldMap(dictMonoid);
}, function (f) {
    return fold(Data_Function.flip(f));
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Tuple.uncurry(f))(z)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)(m));
        };
    };
});
var traversableWithIndexStrMap = new Data_TraversableWithIndex.TraversableWithIndex(function () {
    return foldableWithIndexStrMap;
}, function () {
    return functorWithIndexStrMap;
}, function () {
    return traversableStrMap;
}, function (dictApplicative) {
    return function (f) {
        return function (ms) {
            return fold(function (acc) {
                return function (k) {
                    return function (v) {
                        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Function.flip(insert(k)))(acc))(f(k)(v));
                    };
                };
            })(Control_Applicative.pure(dictApplicative)($foreign.empty))(ms);
        };
    };
});
var traversableStrMap = new Data_Traversable.Traversable(function () {
    return foldableStrMap;
}, function () {
    return functorStrMap;
}, function (dictApplicative) {
    return Data_Traversable.traverse(traversableStrMap)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
}, function (dictApplicative) {
    return function ($48) {
        return Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexStrMap)(dictApplicative)(Data_Function["const"]($48));
    };
});
var filterWithKey = function (predicate) {
    return function (m) {
        var go = (function () {
            var step = function (acc) {
                return function (k) {
                    return function (v) {
                        var $42 = predicate(k)(v);
                        if ($42) {
                            return Data_StrMap_ST.poke(acc)(k)(v);
                        };
                        return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(acc);
                    };
                };
            };
            return function __do() {
                var v = Data_StrMap_ST["new"]();
                return foldM(Control_Monad_Eff.monadEff)(step)(v)(m)();
            };
        })();
        return pureST(go);
    };
};
var filterKeys = function (predicate) {
    return filterWithKey(function ($49) {
        return Data_Function["const"](predicate($49));
    });
};
var filter = function (predicate) {
    return filterWithKey(Data_Function["const"](predicate));
};
var eqStrMap = function (dictEq) {
    return new Data_Eq.Eq(function (m1) {
        return function (m2) {
            return isSubmap(dictEq)(m1)(m2) && isSubmap(dictEq)(m2)(m1);
        };
    });
};
var ordStrMap = function (dictOrd) {
    return new Data_Ord.Ord(function () {
        return eqStrMap(dictOrd.Eq0());
    }, function (m1) {
        return function (m2) {
            return Data_Ord.compare(Data_Ord.ordArray(Data_Tuple.ordTuple(Data_Ord.ordString)(dictOrd)))(toAscArray(m1))(toAscArray(m2));
        };
    });
};
var eq1StrMap = new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqStrMap(dictEq));
});
var $$delete = function (k) {
    return mutate(function (s) {
        return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_StrMap_ST["delete"](s)(k));
    });
};
var pop = function (k) {
    return function (m) {
        return Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(lookup(k)(m))(function (a) {
            return new Data_Tuple.Tuple(a, $$delete(k)(m));
        });
    };
};
var alter = function (f) {
    return function (k) {
        return function (m) {
            var v = f(lookup(k)(m));
            if (v instanceof Data_Maybe.Nothing) {
                return $$delete(k)(m);
            };
            if (v instanceof Data_Maybe.Just) {
                return insert(k)(v.value0)(m);
            };
            throw new Error("Failed pattern match at Data.StrMap line 213, column 15 - line 215, column 25: " + [ v.constructor.name ]);
        };
    };
};
var update = function (f) {
    return function (k) {
        return function (m) {
            return alter(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
        };
    };
};
module.exports = {
    alter: alter, 
    "delete": $$delete, 
    filter: filter, 
    filterKeys: filterKeys, 
    filterWithKey: filterWithKey, 
    fold: fold, 
    foldM: foldM, 
    foldMap: foldMap, 
    foldMaybe: foldMaybe, 
    freezeST: freezeST, 
    fromFoldable: fromFoldable, 
    fromFoldableWith: fromFoldableWith, 
    insert: insert, 
    isEmpty: isEmpty, 
    isSubmap: isSubmap, 
    lookup: lookup, 
    mapWithKey: mapWithKey, 
    member: member, 
    pop: pop, 
    pureST: pureST, 
    singleton: singleton, 
    thawST: thawST, 
    toAscUnfoldable: toAscUnfoldable, 
    toUnfoldable: toUnfoldable, 
    union: union, 
    unions: unions, 
    update: update, 
    values: values, 
    functorStrMap: functorStrMap, 
    functorWithIndexStrMap: functorWithIndexStrMap, 
    foldableStrMap: foldableStrMap, 
    foldableWithIndexStrMap: foldableWithIndexStrMap, 
    traversableStrMap: traversableStrMap, 
    traversableWithIndexStrMap: traversableWithIndexStrMap, 
    eqStrMap: eqStrMap, 
    eq1StrMap: eq1StrMap, 
    ordStrMap: ordStrMap, 
    showStrMap: showStrMap, 
    semigroupStrMap: semigroupStrMap, 
    monoidStrMap: monoidStrMap, 
    all: $foreign.all, 
    empty: $foreign.empty, 
    keys: $foreign.keys, 
    runST: $foreign.runST, 
    size: $foreign.size, 
    toArrayWithKey: $foreign.toArrayWithKey
};

},{"../Control.Applicative":3,"../Control.Apply":5,"../Control.Bind":9,"../Control.Category":10,"../Control.Monad.Eff":20,"../Control.Monad.ST":27,"../Control.Semigroupoid":35,"../Data.Array":40,"../Data.Eq":58,"../Data.Foldable":63,"../Data.FoldableWithIndex":64,"../Data.Function":73,"../Data.Function.Uncurried":72,"../Data.Functor":76,"../Data.FunctorWithIndex":78,"../Data.HeytingAlgebra":80,"../Data.Maybe":91,"../Data.Monoid":98,"../Data.Ord":107,"../Data.Semigroup":114,"../Data.Show":118,"../Data.StrMap.ST":120,"../Data.Traversable":130,"../Data.TraversableWithIndex":131,"../Data.Tuple":133,"../Data.Unfoldable":135,"../Prelude":228,"./foreign":121}],123:[function(require,module,exports){
"use strict";

exports.charCodeAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charCodeAt(i);
    throw new Error("Data.String.Unsafe.charCodeAt: Invalid index.");
  };
};

exports.charAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charAt(i);
    throw new Error("Data.String.Unsafe.charAt: Invalid index.");
  };
};

exports.char = function (s) {
  if (s.length === 1) return s.charAt(0);
  throw new Error("Data.String.Unsafe.char: Expected string of length 1.");
};

},{}],124:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
module.exports = {
    "char": $foreign["char"], 
    charAt: $foreign.charAt, 
    charCodeAt: $foreign.charCodeAt
};

},{"./foreign":123}],125:[function(require,module,exports){
"use strict";

exports._charAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
      };
    };
  };
};

exports.singleton = function (c) {
  return c;
};

exports._charCodeAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charCodeAt(i)) : nothing;
      };
    };
  };
};

exports._toChar = function (just) {
  return function (nothing) {
    return function (s) {
      return s.length === 1 ? just(s) : nothing;
    };
  };
};

exports.fromCharArray = function (a) {
  return a.join("");
};

exports._indexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.indexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports["_indexOf'"] = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.indexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports._lastIndexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.lastIndexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports["_lastIndexOf'"] = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.lastIndexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports.length = function (s) {
  return s.length;
};

exports._localeCompare = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (s1) {
        return function (s2) {
          var result = s1.localeCompare(s2);
          return result < 0 ? lt : result > 0 ? gt : eq;
        };
      };
    };
  };
};

exports.replace = function (s1) {
  return function (s2) {
    return function (s3) {
      return s3.replace(s1, s2);
    };
  };
};

exports.replaceAll = function (s1) {
  return function (s2) {
    return function (s3) {
      return s3.replace(new RegExp(s1.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "g"), s2);
    };
  };
};

exports.take = function (n) {
  return function (s) {
    return s.substr(0, n);
  };
};

exports.drop = function (n) {
  return function (s) {
    return s.substring(n);
  };
};

exports.count = function (p) {
  return function (s) {
    var i = 0;
    while (i < s.length && p(s.charAt(i))) i++;
    return i;
  };
};

exports.split = function (sep) {
  return function (s) {
    return s.split(sep);
  };
};

exports._splitAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ?
               just({ before: s.substring(0, i), after: s.substring(i) }) :
               nothing;
      };
    };
  };
};

exports.toCharArray = function (s) {
  return s.split("");
};

exports.toLower = function (s) {
  return s.toLowerCase();
};

exports.toUpper = function (s) {
  return s.toUpperCase();
};

exports.trim = function (s) {
  return s.trim();
};

exports.joinWith = function (s) {
  return function (xs) {
    return xs.join(s);
  };
};

},{}],126:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_String_Unsafe = require("../Data.String.Unsafe");
var Prelude = require("../Prelude");
var Replacement = function (x) {
    return x;
};
var Pattern = function (x) {
    return x;
};
var uncons = function (v) {
    if (v === "") {
        return Data_Maybe.Nothing.value;
    };
    return new Data_Maybe.Just({
        head: Data_String_Unsafe.charAt(0)(v), 
        tail: $foreign.drop(1)(v)
    });
};
var toChar = $foreign._toChar(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var takeWhile = function (p) {
    return function (s) {
        return $foreign.take($foreign.count(p)(s))(s);
    };
};
var splitAt = $foreign._splitAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var showReplacement = new Data_Show.Show(function (v) {
    return "(Replacement " + (v + ")");
});
var showPattern = new Data_Show.Show(function (v) {
    return "(Pattern " + (v + ")");
});
var $$null = function (s) {
    return s === "";
};
var newtypeReplacement = new Data_Newtype.Newtype(function (n) {
    return n;
}, Replacement);
var newtypePattern = new Data_Newtype.Newtype(function (n) {
    return n;
}, Pattern);
var localeCompare = $foreign._localeCompare(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
var lastIndexOf$prime = $foreign["_lastIndexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var lastIndexOf = $foreign._lastIndexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var stripSuffix = function (v) {
    return function (str) {
        var v1 = lastIndexOf(v)(str);
        if (v1 instanceof Data_Maybe.Just && v1.value0 === ($foreign.length(str) - $foreign.length(v) | 0)) {
            return Data_Maybe.Just.create($foreign.take(v1.value0)(str));
        };
        return Data_Maybe.Nothing.value;
    };
};
var indexOf$prime = $foreign["_indexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var stripPrefix = function (v) {
    return function (str) {
        var v1 = indexOf(v)(str);
        if (v1 instanceof Data_Maybe.Just && v1.value0 === 0) {
            return Data_Maybe.Just.create($foreign.drop($foreign.length(v))(str));
        };
        return Data_Maybe.Nothing.value;
    };
};
var eqReplacement = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordReplacement = new Data_Ord.Ord(function () {
    return eqReplacement;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
});
var eqPattern = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordPattern = new Data_Ord.Ord(function () {
    return eqPattern;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
});
var dropWhile = function (p) {
    return function (s) {
        return $foreign.drop($foreign.count(p)(s))(s);
    };
};
var contains = function (pat) {
    return function ($48) {
        return Data_Maybe.isJust(indexOf(pat)($48));
    };
};
var charCodeAt = $foreign._charCodeAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var charAt = $foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
    Pattern: Pattern, 
    Replacement: Replacement, 
    charAt: charAt, 
    charCodeAt: charCodeAt, 
    contains: contains, 
    dropWhile: dropWhile, 
    indexOf: indexOf, 
    "indexOf'": indexOf$prime, 
    lastIndexOf: lastIndexOf, 
    "lastIndexOf'": lastIndexOf$prime, 
    localeCompare: localeCompare, 
    "null": $$null, 
    splitAt: splitAt, 
    stripPrefix: stripPrefix, 
    stripSuffix: stripSuffix, 
    takeWhile: takeWhile, 
    toChar: toChar, 
    uncons: uncons, 
    eqPattern: eqPattern, 
    ordPattern: ordPattern, 
    newtypePattern: newtypePattern, 
    showPattern: showPattern, 
    eqReplacement: eqReplacement, 
    ordReplacement: ordReplacement, 
    newtypeReplacement: newtypeReplacement, 
    showReplacement: showReplacement, 
    count: $foreign.count, 
    drop: $foreign.drop, 
    fromCharArray: $foreign.fromCharArray, 
    joinWith: $foreign.joinWith, 
    length: $foreign.length, 
    replace: $foreign.replace, 
    replaceAll: $foreign.replaceAll, 
    singleton: $foreign.singleton, 
    split: $foreign.split, 
    take: $foreign.take, 
    toCharArray: $foreign.toCharArray, 
    toLower: $foreign.toLower, 
    toUpper: $foreign.toUpper, 
    trim: $foreign.trim
};

},{"../Control.Semigroupoid":35,"../Data.Eq":58,"../Data.Function":73,"../Data.Maybe":91,"../Data.Newtype":100,"../Data.Ord":107,"../Data.Ordering":108,"../Data.Ring":110,"../Data.Semigroup":114,"../Data.Semiring":116,"../Data.Show":118,"../Data.String.Unsafe":124,"../Prelude":228,"./foreign":125}],127:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Data_Functor = require("../Data.Functor");
var Data_Traversable_Accum = require("../Data.Traversable.Accum");
var Prelude = require("../Prelude");
var StateR = function (x) {
    return x;
};
var StateL = function (x) {
    return x;
};
var stateR = function (v) {
    return v;
};
var stateL = function (v) {
    return v;
};
var functorStateR = new Data_Functor.Functor(function (f) {
    return function (k) {
        return function (s) {
            var v = stateR(k)(s);
            return {
                accum: v.accum, 
                value: f(v.value)
            };
        };
    };
});
var functorStateL = new Data_Functor.Functor(function (f) {
    return function (k) {
        return function (s) {
            var v = stateL(k)(s);
            return {
                accum: v.accum, 
                value: f(v.value)
            };
        };
    };
});
var applyStateR = new Control_Apply.Apply(function () {
    return functorStateR;
}, function (f) {
    return function (x) {
        return function (s) {
            var v = stateR(x)(s);
            var v1 = stateR(f)(v.accum);
            return {
                accum: v1.accum, 
                value: v1.value(v.value)
            };
        };
    };
});
var applyStateL = new Control_Apply.Apply(function () {
    return functorStateL;
}, function (f) {
    return function (x) {
        return function (s) {
            var v = stateL(f)(s);
            var v1 = stateL(x)(v.accum);
            return {
                accum: v1.accum, 
                value: v.value(v1.value)
            };
        };
    };
});
var applicativeStateR = new Control_Applicative.Applicative(function () {
    return applyStateR;
}, function (a) {
    return function (s) {
        return {
            accum: s, 
            value: a
        };
    };
});
var applicativeStateL = new Control_Applicative.Applicative(function () {
    return applyStateL;
}, function (a) {
    return function (s) {
        return {
            accum: s, 
            value: a
        };
    };
});
module.exports = {
    StateL: StateL, 
    StateR: StateR, 
    stateL: stateL, 
    stateR: stateR, 
    functorStateL: functorStateL, 
    applyStateL: applyStateL, 
    applicativeStateL: applicativeStateL, 
    functorStateR: functorStateR, 
    applyStateR: applyStateR, 
    applicativeStateR: applicativeStateR
};

},{"../Control.Applicative":3,"../Control.Apply":5,"../Data.Functor":76,"../Data.Traversable.Accum":128,"../Prelude":228}],128:[function(require,module,exports){
arguments[4][99][0].apply(exports,arguments)
},{"dup":99}],129:[function(require,module,exports){
"use strict";

// jshint maxparams: 3

exports.traverseArrayImpl = function () {
  function Cont(fn) {
    this.fn = fn;
  }

  var emptyList = {};

  var ConsCell = function (head, tail) {
    this.head = head;
    this.tail = tail;
  };

  function consList(x) {
    return function (xs) {
      return new ConsCell(x, xs);
    };
  }

  function listToArray(list) {
    var arr = [];
    var xs = list;
    while (xs !== emptyList) {
      arr.push(xs.head);
      xs = xs.tail;
    }
    return arr;
  }

  return function (apply) {
    return function (map) {
      return function (pure) {
        return function (f) {
          var buildFrom = function (x, ys) {
            return apply(map(consList)(f(x)))(ys);
          };

          var go = function (acc, currentLen, xs) {
            if (currentLen === 0) {
              return acc;
            } else {
              var last = xs[currentLen - 1];
              return new Cont(function () {
                return go(buildFrom(last, acc), currentLen - 1, xs);
              });
            }
          };

          return function (array) {
            var result = go(pure(emptyList), array.length, array);
            while (result instanceof Cont) {
              result = result.fn();
            }

            return map(listToArray)(result);
          };
        };
      };
    };
  };
}();

},{}],130:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Category = require("../Control.Category");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Maybe_Last = require("../Data.Maybe.Last");
var Data_Monoid_Additive = require("../Data.Monoid.Additive");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Traversable_Accum = require("../Data.Traversable.Accum");
var Data_Traversable_Accum_Internal = require("../Data.Traversable.Accum.Internal");
var Prelude = require("../Prelude");
var Traversable = function (Foldable1, Functor0, sequence, traverse) {
    this.Foldable1 = Foldable1;
    this.Functor0 = Functor0;
    this.sequence = sequence;
    this.traverse = traverse;
};
var traverse = function (dict) {
    return dict.traverse;
};
var traversableMultiplicative = new Traversable(function () {
    return Data_Foldable.foldableMultiplicative;
}, function () {
    return Data_Monoid_Multiplicative.functorMultiplicative;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Multiplicative.Multiplicative)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Multiplicative.Multiplicative)(f(v));
        };
    };
});
var traversableMaybe = new Traversable(function () {
    return Data_Foldable.foldableMaybe;
}, function () {
    return Data_Maybe.functorMaybe;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
        };
        if (v instanceof Data_Maybe.Just) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe.Just.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Traversable line 86, column 1 - line 86, column 47: " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
            };
            if (v1 instanceof Data_Maybe.Just) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe.Just.create)(v(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Traversable line 86, column 1 - line 86, column 47: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
});
var traversableDual = new Traversable(function () {
    return Data_Foldable.foldableDual;
}, function () {
    return Data_Monoid_Dual.functorDual;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Dual.Dual)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Dual.Dual)(f(v));
        };
    };
});
var traversableDisj = new Traversable(function () {
    return Data_Foldable.foldableDisj;
}, function () {
    return Data_Monoid_Disj.functorDisj;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Disj.Disj)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Disj.Disj)(f(v));
        };
    };
});
var traversableConj = new Traversable(function () {
    return Data_Foldable.foldableConj;
}, function () {
    return Data_Monoid_Conj.functorConj;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Conj.Conj)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Conj.Conj)(f(v));
        };
    };
});
var traversableAdditive = new Traversable(function () {
    return Data_Foldable.foldableAdditive;
}, function () {
    return Data_Monoid_Additive.functorAdditive;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Additive.Additive)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Monoid_Additive.Additive)(f(v));
        };
    };
});
var sequenceDefault = function (dictTraversable) {
    return function (dictApplicative) {
        return traverse(dictTraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
    };
};
var traversableArray = new Traversable(function () {
    return Data_Foldable.foldableArray;
}, function () {
    return Data_Functor.functorArray;
}, function (dictApplicative) {
    return sequenceDefault(traversableArray)(dictApplicative);
}, function (dictApplicative) {
    return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
});
var sequence = function (dict) {
    return dict.sequence;
};
var traversableFirst = new Traversable(function () {
    return Data_Foldable.foldableFirst;
}, function () {
    return Data_Maybe_First.functorFirst;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe_First.First)(sequence(traversableMaybe)(dictApplicative)(v));
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe_First.First)(traverse(traversableMaybe)(dictApplicative)(f)(v));
        };
    };
});
var traversableLast = new Traversable(function () {
    return Data_Foldable.foldableLast;
}, function () {
    return Data_Maybe_Last.functorLast;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe_Last.Last)(sequence(traversableMaybe)(dictApplicative)(v));
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe_Last.Last)(traverse(traversableMaybe)(dictApplicative)(f)(v));
        };
    };
});
var traverseDefault = function (dictTraversable) {
    return function (dictApplicative) {
        return function (f) {
            return function (ta) {
                return sequence(dictTraversable)(dictApplicative)(Data_Functor.map(dictTraversable.Functor0())(f)(ta));
            };
        };
    };
};
var mapAccumR = function (dictTraversable) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return Data_Traversable_Accum_Internal.stateR(traverse(dictTraversable)(Data_Traversable_Accum_Internal.applicativeStateR)(function (a) {
                    return function (s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanr = function (dictTraversable) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumR(dictTraversable)(function (b) {
                    return function (a) {
                        var b$prime = f(a)(b);
                        return {
                            accum: b$prime, 
                            value: b$prime
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var mapAccumL = function (dictTraversable) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return Data_Traversable_Accum_Internal.stateL(traverse(dictTraversable)(Data_Traversable_Accum_Internal.applicativeStateL)(function (a) {
                    return function (s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanl = function (dictTraversable) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumL(dictTraversable)(function (b) {
                    return function (a) {
                        var b$prime = f(b)(a);
                        return {
                            accum: b$prime, 
                            value: b$prime
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var $$for = function (dictApplicative) {
    return function (dictTraversable) {
        return function (x) {
            return function (f) {
                return traverse(dictTraversable)(dictApplicative)(f)(x);
            };
        };
    };
};
module.exports = {
    Traversable: Traversable, 
    "for": $$for, 
    mapAccumL: mapAccumL, 
    mapAccumR: mapAccumR, 
    scanl: scanl, 
    scanr: scanr, 
    sequence: sequence, 
    sequenceDefault: sequenceDefault, 
    traverse: traverse, 
    traverseDefault: traverseDefault, 
    traversableArray: traversableArray, 
    traversableMaybe: traversableMaybe, 
    traversableFirst: traversableFirst, 
    traversableLast: traversableLast, 
    traversableAdditive: traversableAdditive, 
    traversableDual: traversableDual, 
    traversableConj: traversableConj, 
    traversableDisj: traversableDisj, 
    traversableMultiplicative: traversableMultiplicative
};

},{"../Control.Applicative":3,"../Control.Apply":5,"../Control.Category":10,"../Data.Foldable":63,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Maybe.First":89,"../Data.Maybe.Last":90,"../Data.Monoid.Additive":92,"../Data.Monoid.Conj":93,"../Data.Monoid.Disj":94,"../Data.Monoid.Dual":95,"../Data.Monoid.Multiplicative":97,"../Data.Traversable.Accum":128,"../Data.Traversable.Accum.Internal":127,"../Prelude":228,"./foreign":129}],131:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_FoldableWithIndex = require("../Data.FoldableWithIndex");
var Data_Function = require("../Data.Function");
var Data_FunctorWithIndex = require("../Data.FunctorWithIndex");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Maybe_Last = require("../Data.Maybe.Last");
var Data_Monoid_Additive = require("../Data.Monoid.Additive");
var Data_Monoid_Conj = require("../Data.Monoid.Conj");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Monoid_Dual = require("../Data.Monoid.Dual");
var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative");
var Data_Traversable = require("../Data.Traversable");
var Data_Traversable_Accum = require("../Data.Traversable.Accum");
var Data_Traversable_Accum_Internal = require("../Data.Traversable.Accum.Internal");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var TraversableWithIndex = function (FoldableWithIndex1, FunctorWithIndex0, Traversable2, traverseWithIndex) {
    this.FoldableWithIndex1 = FoldableWithIndex1;
    this.FunctorWithIndex0 = FunctorWithIndex0;
    this.Traversable2 = Traversable2;
    this.traverseWithIndex = traverseWithIndex;
};
var traverseWithIndexDefault = function (dictTraversableWithIndex) {
    return function (dictApplicative) {
        return function (f) {
            return function ($17) {
                return Data_Traversable.sequence(dictTraversableWithIndex.Traversable2())(dictApplicative)(Data_FunctorWithIndex.mapWithIndex(dictTraversableWithIndex.FunctorWithIndex0())(f)($17));
            };
        };
    };
};
var traverseWithIndex = function (dict) {
    return dict.traverseWithIndex;
};
var traversableWithIndexMultiplicative = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexMultiplicative;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexMultiplicative;
}, function () {
    return Data_Traversable.traversableMultiplicative;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableMultiplicative)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexMaybe = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexMaybe;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexMaybe;
}, function () {
    return Data_Traversable.traversableMaybe;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableMaybe)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexLast = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexLast;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexLast;
}, function () {
    return Data_Traversable.traversableLast;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableLast)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexFirst = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexFirst;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexFirst;
}, function () {
    return Data_Traversable.traversableFirst;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableFirst)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexDual = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexDual;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexDual;
}, function () {
    return Data_Traversable.traversableDual;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableDual)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexDisj = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexDisj;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexDisj;
}, function () {
    return Data_Traversable.traversableDisj;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableDisj)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexConj = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexConj;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexConj;
}, function () {
    return Data_Traversable.traversableConj;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableConj)(dictApplicative)(f(Data_Unit.unit));
    };
});
var traversableWithIndexArray = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexArray;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexArray;
}, function () {
    return Data_Traversable.traversableArray;
}, function (dictApplicative) {
    return traverseWithIndexDefault(traversableWithIndexArray)(dictApplicative);
});
var traversableWithIndexAdditive = new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexAdditive;
}, function () {
    return Data_FunctorWithIndex.functorWithIndexAdditive;
}, function () {
    return Data_Traversable.traversableAdditive;
}, function (dictApplicative) {
    return function (f) {
        return Data_Traversable.traverse(Data_Traversable.traversableAdditive)(dictApplicative)(f(Data_Unit.unit));
    };
});
var mapAccumRWithIndex = function (dictTraversableWithIndex) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return Data_Traversable_Accum_Internal.stateR(traverseWithIndex(dictTraversableWithIndex)(Data_Traversable_Accum_Internal.applicativeStateR)(function (i) {
                    return function (a) {
                        return function (s) {
                            return f(i)(s)(a);
                        };
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanrWithIndex = function (dictTraversableWithIndex) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumRWithIndex(dictTraversableWithIndex)(function (i) {
                    return function (b) {
                        return function (a) {
                            var b$prime = f(i)(a)(b);
                            return {
                                accum: b$prime, 
                                value: b$prime
                            };
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var mapAccumLWithIndex = function (dictTraversableWithIndex) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return Data_Traversable_Accum_Internal.stateL(traverseWithIndex(dictTraversableWithIndex)(Data_Traversable_Accum_Internal.applicativeStateL)(function (i) {
                    return function (a) {
                        return function (s) {
                            return f(i)(s)(a);
                        };
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanlWithIndex = function (dictTraversableWithIndex) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumLWithIndex(dictTraversableWithIndex)(function (i) {
                    return function (b) {
                        return function (a) {
                            var b$prime = f(i)(b)(a);
                            return {
                                accum: b$prime, 
                                value: b$prime
                            };
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var forWithIndex = function (dictApplicative) {
    return function (dictTraversableWithIndex) {
        return Data_Function.flip(traverseWithIndex(dictTraversableWithIndex)(dictApplicative));
    };
};
module.exports = {
    TraversableWithIndex: TraversableWithIndex, 
    forWithIndex: forWithIndex, 
    mapAccumLWithIndex: mapAccumLWithIndex, 
    mapAccumRWithIndex: mapAccumRWithIndex, 
    scanlWithIndex: scanlWithIndex, 
    scanrWithIndex: scanrWithIndex, 
    traverseWithIndex: traverseWithIndex, 
    traverseWithIndexDefault: traverseWithIndexDefault, 
    traversableWithIndexArray: traversableWithIndexArray, 
    traversableWithIndexMaybe: traversableWithIndexMaybe, 
    traversableWithIndexFirst: traversableWithIndexFirst, 
    traversableWithIndexLast: traversableWithIndexLast, 
    traversableWithIndexAdditive: traversableWithIndexAdditive, 
    traversableWithIndexDual: traversableWithIndexDual, 
    traversableWithIndexConj: traversableWithIndexConj, 
    traversableWithIndexDisj: traversableWithIndexDisj, 
    traversableWithIndexMultiplicative: traversableWithIndexMultiplicative
};

},{"../Control.Semigroupoid":35,"../Data.FoldableWithIndex":64,"../Data.Function":73,"../Data.FunctorWithIndex":78,"../Data.Maybe":91,"../Data.Maybe.First":89,"../Data.Maybe.Last":90,"../Data.Monoid.Additive":92,"../Data.Monoid.Conj":93,"../Data.Monoid.Disj":94,"../Data.Monoid.Dual":95,"../Data.Monoid.Multiplicative":97,"../Data.Traversable":130,"../Data.Traversable.Accum":128,"../Data.Traversable.Accum.Internal":127,"../Data.Unit":137,"../Prelude":228}],132:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var uncurry9 = function (f$prime) {
    return function (v) {
        return f$prime(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value1.value0);
    };
};
var uncurry8 = function (f$prime) {
    return function (v) {
        return f$prime(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value0);
    };
};
var uncurry7 = function (f$prime) {
    return function (v) {
        return f$prime(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value0);
    };
};
var uncurry6 = function (f$prime) {
    return function (v) {
        return f$prime(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value0);
    };
};
var uncurry5 = function (f) {
    return function (v) {
        return f(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0);
    };
};
var uncurry4 = function (f) {
    return function (v) {
        return f(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0);
    };
};
var uncurry3 = function (f) {
    return function (v) {
        return f(v.value0)(v.value1.value0)(v.value1.value1.value0);
    };
};
var uncurry2 = function (f) {
    return function (v) {
        return f(v.value0)(v.value1.value0);
    };
};
var uncurry10 = function (f$prime) {
    return function (v) {
        return f$prime(v.value0)(v.value1.value0)(v.value1.value1.value0)(v.value1.value1.value1.value0)(v.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value1.value0)(v.value1.value1.value1.value1.value1.value1.value1.value1.value1.value0);
    };
};
var uncurry1 = function (f) {
    return function (v) {
        return f(v.value0);
    };
};
var tuple9 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (i) {
                                    return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, new Data_Tuple.Tuple(h, new Data_Tuple.Tuple(i, Data_Unit.unit)))))))));
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var tuple8 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, new Data_Tuple.Tuple(h, Data_Unit.unit))))))));
                            };
                        };
                    };
                };
            };
        };
    };
};
var tuple7 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, Data_Unit.unit)))))));
                        };
                    };
                };
            };
        };
    };
};
var tuple6 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, Data_Unit.unit))))));
                    };
                };
            };
        };
    };
};
var tuple5 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, Data_Unit.unit)))));
                };
            };
        };
    };
};
var tuple4 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, Data_Unit.unit))));
            };
        };
    };
};
var tuple3 = function (a) {
    return function (b) {
        return function (c) {
            return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, Data_Unit.unit)));
        };
    };
};
var tuple2 = function (a) {
    return function (b) {
        return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, Data_Unit.unit));
    };
};
var tuple10 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return function (e) {
                    return function (f) {
                        return function (g) {
                            return function (h) {
                                return function (i) {
                                    return function (j) {
                                        return new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, new Data_Tuple.Tuple(h, new Data_Tuple.Tuple(i, new Data_Tuple.Tuple(j, Data_Unit.unit))))))))));
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var tuple1 = function (a) {
    return new Data_Tuple.Tuple(a, Data_Unit.unit);
};
var over9 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value1.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1.value1.value1.value1.value1)))))))));
    };
};
var over8 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1.value1.value1.value1))))))));
    };
};
var over7 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1.value1.value1)))))));
    };
};
var over6 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1.value1))))));
    };
};
var over5 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1)))));
    };
};
var over4 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value0), v.value1.value1.value1.value1))));
    };
};
var over3 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value0), v.value1.value1.value1)));
    };
};
var over2 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(o(v.value1.value0), v.value1.value1));
    };
};
var over10 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1.value1.value1.value1.value1.value1.value0, new Data_Tuple.Tuple(o(v.value1.value1.value1.value1.value1.value1.value1.value1.value1.value0), v.value1.value1.value1.value1.value1.value1.value1.value1.value1.value1))))))))));
    };
};
var over1 = function (o) {
    return function (v) {
        return new Data_Tuple.Tuple(o(v.value0), v.value1);
    };
};
var get9 = function (v) {
    return v.value1.value1.value1.value1.value1.value1.value1.value1.value0;
};
var get8 = function (v) {
    return v.value1.value1.value1.value1.value1.value1.value1.value0;
};
var get7 = function (v) {
    return v.value1.value1.value1.value1.value1.value1.value0;
};
var get6 = function (v) {
    return v.value1.value1.value1.value1.value1.value0;
};
var get5 = function (v) {
    return v.value1.value1.value1.value1.value0;
};
var get4 = function (v) {
    return v.value1.value1.value1.value0;
};
var get3 = function (v) {
    return v.value1.value1.value0;
};
var get2 = function (v) {
    return v.value1.value0;
};
var get10 = function (v) {
    return v.value1.value1.value1.value1.value1.value1.value1.value1.value1.value0;
};
var get1 = function (v) {
    return v.value0;
};
var curry9 = function (z) {
    return function (f$prime) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return function (f) {
                                return function (g) {
                                    return function (h) {
                                        return function (i) {
                                            return f$prime(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, new Data_Tuple.Tuple(h, new Data_Tuple.Tuple(i, z))))))))));
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry8 = function (z) {
    return function (f$prime) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return function (f) {
                                return function (g) {
                                    return function (h) {
                                        return f$prime(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, new Data_Tuple.Tuple(h, z)))))))));
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry7 = function (z) {
    return function (f$prime) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return function (f) {
                                return function (g) {
                                    return f$prime(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, z))))))));
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry6 = function (z) {
    return function (f$prime) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return function (f) {
                                return f$prime(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, z)))))));
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry5 = function (z) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return f(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, z))))));
                        };
                    };
                };
            };
        };
    };
};
var curry4 = function (z) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return f(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, z)))));
                    };
                };
            };
        };
    };
};
var curry3 = function (z) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return f(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, z))));
                };
            };
        };
    };
};
var curry2 = function (z) {
    return function (f) {
        return function (a) {
            return function (b) {
                return f(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, z)));
            };
        };
    };
};
var curry10 = function (z) {
    return function (f$prime) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return function (f) {
                                return function (g) {
                                    return function (h) {
                                        return function (i) {
                                            return function (j) {
                                                return f$prime(new Data_Tuple.Tuple(a, new Data_Tuple.Tuple(b, new Data_Tuple.Tuple(c, new Data_Tuple.Tuple(d, new Data_Tuple.Tuple(e, new Data_Tuple.Tuple(f, new Data_Tuple.Tuple(g, new Data_Tuple.Tuple(h, new Data_Tuple.Tuple(i, new Data_Tuple.Tuple(j, z)))))))))));
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var curry1 = function (z) {
    return function (f) {
        return function (a) {
            return f(new Data_Tuple.Tuple(a, z));
        };
    };
};
module.exports = {
    curry1: curry1, 
    curry10: curry10, 
    curry2: curry2, 
    curry3: curry3, 
    curry4: curry4, 
    curry5: curry5, 
    curry6: curry6, 
    curry7: curry7, 
    curry8: curry8, 
    curry9: curry9, 
    get1: get1, 
    get10: get10, 
    get2: get2, 
    get3: get3, 
    get4: get4, 
    get5: get5, 
    get6: get6, 
    get7: get7, 
    get8: get8, 
    get9: get9, 
    over1: over1, 
    over10: over10, 
    over2: over2, 
    over3: over3, 
    over4: over4, 
    over5: over5, 
    over6: over6, 
    over7: over7, 
    over8: over8, 
    over9: over9, 
    tuple1: tuple1, 
    tuple10: tuple10, 
    tuple2: tuple2, 
    tuple3: tuple3, 
    tuple4: tuple4, 
    tuple5: tuple5, 
    tuple6: tuple6, 
    tuple7: tuple7, 
    tuple8: tuple8, 
    tuple9: tuple9, 
    uncurry1: uncurry1, 
    uncurry10: uncurry10, 
    uncurry2: uncurry2, 
    uncurry3: uncurry3, 
    uncurry4: uncurry4, 
    uncurry5: uncurry5, 
    uncurry6: uncurry6, 
    uncurry7: uncurry7, 
    uncurry8: uncurry8, 
    uncurry9: uncurry9
};

},{"../Data.Tuple":133,"../Data.Unit":137,"../Prelude":228}],133:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Biapplicative = require("../Control.Biapplicative");
var Control_Biapply = require("../Control.Biapply");
var Control_Bind = require("../Control.Bind");
var Control_Comonad = require("../Control.Comonad");
var Control_Extend = require("../Control.Extend");
var Control_Lazy = require("../Control.Lazy");
var Control_Monad = require("../Control.Monad");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Bifoldable = require("../Data.Bifoldable");
var Data_Bifunctor = require("../Data.Bifunctor");
var Data_Bitraversable = require("../Data.Bitraversable");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Data_Bounded = require("../Data.Bounded");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_Distributive = require("../Data.Distributive");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Functor_Invariant = require("../Data.Functor.Invariant");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Maybe_First = require("../Data.Maybe.First");
var Data_Monoid = require("../Data.Monoid");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Traversable = require("../Data.Traversable");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Type_Equality = require("../Type.Equality");
var Tuple = (function () {
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    return Tuple;
})();
var uncurry = function (f) {
    return function (v) {
        return f(v.value0)(v.value1);
    };
};
var swap = function (v) {
    return new Tuple(v.value1, v.value0);
};
var snd = function (v) {
    return v.value1;
};
var showTuple = function (dictShow) {
    return function (dictShow1) {
        return new Data_Show.Show(function (v) {
            return "(Tuple " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
        });
    };
};
var semiringTuple = function (dictSemiring) {
    return function (dictSemiring1) {
        return new Data_Semiring.Semiring(function (v) {
            return function (v1) {
                return new Tuple(Data_Semiring.add(dictSemiring)(v.value0)(v1.value0), Data_Semiring.add(dictSemiring1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return function (v1) {
                return new Tuple(Data_Semiring.mul(dictSemiring)(v.value0)(v1.value0), Data_Semiring.mul(dictSemiring1)(v.value1)(v1.value1));
            };
        }, new Tuple(Data_Semiring.one(dictSemiring), Data_Semiring.one(dictSemiring1)), new Tuple(Data_Semiring.zero(dictSemiring), Data_Semiring.zero(dictSemiring1)));
    };
};
var semigroupoidTuple = new Control_Semigroupoid.Semigroupoid(function (v) {
    return function (v1) {
        return new Tuple(v1.value0, v.value1);
    };
});
var semigroupTuple = function (dictSemigroup) {
    return function (dictSemigroup1) {
        return new Data_Semigroup.Semigroup(function (v) {
            return function (v1) {
                return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), Data_Semigroup.append(dictSemigroup1)(v.value1)(v1.value1));
            };
        });
    };
};
var ringTuple = function (dictRing) {
    return function (dictRing1) {
        return new Data_Ring.Ring(function () {
            return semiringTuple(dictRing.Semiring0())(dictRing1.Semiring0());
        }, function (v) {
            return function (v1) {
                return new Tuple(Data_Ring.sub(dictRing)(v.value0)(v1.value0), Data_Ring.sub(dictRing1)(v.value1)(v1.value1));
            };
        });
    };
};
var monoidTuple = function (dictMonoid) {
    return function (dictMonoid1) {
        return new Data_Monoid.Monoid(function () {
            return semigroupTuple(dictMonoid.Semigroup0())(dictMonoid1.Semigroup0());
        }, new Tuple(Data_Monoid.mempty(dictMonoid), Data_Monoid.mempty(dictMonoid1)));
    };
};
var lookup = function (dictFoldable) {
    return function (dictEq) {
        return function (a) {
            return function ($264) {
                return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(Data_Foldable.foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function (v) {
                    var $146 = Data_Eq.eq(dictEq)(a)(v.value0);
                    if ($146) {
                        return new Data_Maybe.Just(v.value1);
                    };
                    return Data_Maybe.Nothing.value;
                })($264));
            };
        };
    };
};
var heytingAlgebraTuple = function (dictHeytingAlgebra) {
    return function (dictHeytingAlgebra1) {
        return new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
            return function (v1) {
                return new Tuple(Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.conj(dictHeytingAlgebra1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return function (v1) {
                return new Tuple(Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.disj(dictHeytingAlgebra1)(v.value1)(v1.value1));
            };
        }, new Tuple(Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra1)), function (v) {
            return function (v1) {
                return new Tuple(Data_HeytingAlgebra.implies(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.implies(dictHeytingAlgebra1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return new Tuple(Data_HeytingAlgebra.not(dictHeytingAlgebra)(v.value0), Data_HeytingAlgebra.not(dictHeytingAlgebra1)(v.value1));
        }, new Tuple(Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra1)));
    };
};
var functorTuple = new Data_Functor.Functor(function (f) {
    return function (v) {
        return new Tuple(v.value0, f(v.value1));
    };
});
var invariantTuple = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorTuple));
var fst = function (v) {
    return v.value0;
};
var lazyTuple = function (dictLazy) {
    return function (dictLazy1) {
        return new Control_Lazy.Lazy(function (f) {
            return new Tuple(Control_Lazy.defer(dictLazy)(function (v) {
                return fst(f(Data_Unit.unit));
            }), Control_Lazy.defer(dictLazy1)(function (v) {
                return snd(f(Data_Unit.unit));
            }));
        });
    };
};
var foldableTuple = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v.value1)(z);
        };
    };
});
var traversableTuple = new Data_Traversable.Traversable(function () {
    return foldableTuple;
}, function () {
    return functorTuple;
}, function (dictApplicative) {
    return function (v) {
        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create(v.value0))(v.value1);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create(v.value0))(f(v.value1));
        };
    };
});
var extendTuple = new Control_Extend.Extend(function () {
    return functorTuple;
}, function (f) {
    return function (v) {
        return new Tuple(v.value0, f(v));
    };
});
var eqTuple = function (dictEq) {
    return function (dictEq1) {
        return new Data_Eq.Eq(function (x) {
            return function (y) {
                return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
            };
        });
    };
};
var ordTuple = function (dictOrd) {
    return function (dictOrd1) {
        return new Data_Ord.Ord(function () {
            return eqTuple(dictOrd.Eq0())(dictOrd1.Eq0());
        }, function (x) {
            return function (y) {
                var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                if (v instanceof Data_Ordering.LT) {
                    return Data_Ordering.LT.value;
                };
                if (v instanceof Data_Ordering.GT) {
                    return Data_Ordering.GT.value;
                };
                return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
            };
        });
    };
};
var eq1Tuple = function (dictEq) {
    return new Data_Eq.Eq1(function (dictEq1) {
        return Data_Eq.eq(eqTuple(dictEq)(dictEq1));
    });
};
var ord1Tuple = function (dictOrd) {
    return new Data_Ord.Ord1(function () {
        return eq1Tuple(dictOrd.Eq0());
    }, function (dictOrd1) {
        return Data_Ord.compare(ordTuple(dictOrd)(dictOrd1));
    });
};
var distributiveTuple = function (dictTypeEquals) {
    return new Data_Distributive.Distributive(function () {
        return functorTuple;
    }, function (dictFunctor) {
        return Data_Distributive.collectDefault(distributiveTuple(dictTypeEquals))(dictFunctor);
    }, function (dictFunctor) {
        return function ($265) {
            return Tuple.create(Type_Equality.from(dictTypeEquals)(Data_Unit.unit))(Data_Functor.map(dictFunctor)(snd)($265));
        };
    });
};
var curry = function (f) {
    return function (a) {
        return function (b) {
            return f(new Tuple(a, b));
        };
    };
};
var comonadTuple = new Control_Comonad.Comonad(function () {
    return extendTuple;
}, snd);
var commutativeRingTuple = function (dictCommutativeRing) {
    return function (dictCommutativeRing1) {
        return new Data_CommutativeRing.CommutativeRing(function () {
            return ringTuple(dictCommutativeRing.Ring0())(dictCommutativeRing1.Ring0());
        });
    };
};
var boundedTuple = function (dictBounded) {
    return function (dictBounded1) {
        return new Data_Bounded.Bounded(function () {
            return ordTuple(dictBounded.Ord0())(dictBounded1.Ord0());
        }, new Tuple(Data_Bounded.bottom(dictBounded), Data_Bounded.bottom(dictBounded1)), new Tuple(Data_Bounded.top(dictBounded), Data_Bounded.top(dictBounded1)));
    };
};
var booleanAlgebraTuple = function (dictBooleanAlgebra) {
    return function (dictBooleanAlgebra1) {
        return new Data_BooleanAlgebra.BooleanAlgebra(function () {
            return heytingAlgebraTuple(dictBooleanAlgebra.HeytingAlgebra0())(dictBooleanAlgebra1.HeytingAlgebra0());
        });
    };
};
var bifunctorTuple = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (v) {
            return new Tuple(f(v.value0), g(v.value1));
        };
    };
});
var bifoldableTuple = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
    return function (f) {
        return function (g) {
            return function (v) {
                return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(g(v.value1));
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (v) {
                return g(f(z)(v.value0))(v.value1);
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (v) {
                return f(v.value0)(g(v.value1)(z));
            };
        };
    };
});
var bitraversableTuple = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableTuple;
}, function () {
    return bifunctorTuple;
}, function (dictApplicative) {
    return function (v) {
        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create)(v.value0))(v.value1);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (g) {
            return function (v) {
                return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Tuple.create)(f(v.value0)))(g(v.value1));
            };
        };
    };
});
var biapplyTuple = new Control_Biapply.Biapply(function () {
    return bifunctorTuple;
}, function (v) {
    return function (v1) {
        return new Tuple(v.value0(v1.value0), v.value1(v1.value1));
    };
});
var biapplicativeTuple = new Control_Biapplicative.Biapplicative(function () {
    return biapplyTuple;
}, Tuple.create);
var applyTuple = function (dictSemigroup) {
    return new Control_Apply.Apply(function () {
        return functorTuple;
    }, function (v) {
        return function (v1) {
            return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v.value1(v1.value1));
        };
    });
};
var bindTuple = function (dictSemigroup) {
    return new Control_Bind.Bind(function () {
        return applyTuple(dictSemigroup);
    }, function (v) {
        return function (f) {
            var v1 = f(v.value1);
            return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v1.value1);
        };
    });
};
var applicativeTuple = function (dictMonoid) {
    return new Control_Applicative.Applicative(function () {
        return applyTuple(dictMonoid.Semigroup0());
    }, Tuple.create(Data_Monoid.mempty(dictMonoid)));
};
var monadTuple = function (dictMonoid) {
    return new Control_Monad.Monad(function () {
        return applicativeTuple(dictMonoid);
    }, function () {
        return bindTuple(dictMonoid.Semigroup0());
    });
};
module.exports = {
    Tuple: Tuple, 
    curry: curry, 
    fst: fst, 
    lookup: lookup, 
    snd: snd, 
    swap: swap, 
    uncurry: uncurry, 
    showTuple: showTuple, 
    eqTuple: eqTuple, 
    eq1Tuple: eq1Tuple, 
    ordTuple: ordTuple, 
    ord1Tuple: ord1Tuple, 
    boundedTuple: boundedTuple, 
    semigroupoidTuple: semigroupoidTuple, 
    semigroupTuple: semigroupTuple, 
    monoidTuple: monoidTuple, 
    semiringTuple: semiringTuple, 
    ringTuple: ringTuple, 
    commutativeRingTuple: commutativeRingTuple, 
    heytingAlgebraTuple: heytingAlgebraTuple, 
    booleanAlgebraTuple: booleanAlgebraTuple, 
    functorTuple: functorTuple, 
    invariantTuple: invariantTuple, 
    bifunctorTuple: bifunctorTuple, 
    applyTuple: applyTuple, 
    biapplyTuple: biapplyTuple, 
    applicativeTuple: applicativeTuple, 
    biapplicativeTuple: biapplicativeTuple, 
    bindTuple: bindTuple, 
    monadTuple: monadTuple, 
    extendTuple: extendTuple, 
    comonadTuple: comonadTuple, 
    lazyTuple: lazyTuple, 
    foldableTuple: foldableTuple, 
    bifoldableTuple: bifoldableTuple, 
    traversableTuple: traversableTuple, 
    bitraversableTuple: bitraversableTuple, 
    distributiveTuple: distributiveTuple
};

},{"../Control.Applicative":3,"../Control.Apply":5,"../Control.Biapplicative":6,"../Control.Biapply":7,"../Control.Bind":9,"../Control.Comonad":11,"../Control.Extend":13,"../Control.Lazy":14,"../Control.Monad":31,"../Control.Semigroupoid":35,"../Data.Bifoldable":41,"../Data.Bifunctor":47,"../Data.Bitraversable":48,"../Data.BooleanAlgebra":50,"../Data.Bounded":52,"../Data.CommutativeRing":53,"../Data.Distributive":54,"../Data.Eq":58,"../Data.Foldable":63,"../Data.Function":73,"../Data.Functor":76,"../Data.Functor.Invariant":74,"../Data.HeytingAlgebra":80,"../Data.Maybe":91,"../Data.Maybe.First":89,"../Data.Monoid":98,"../Data.Newtype":100,"../Data.Ord":107,"../Data.Ordering":108,"../Data.Ring":110,"../Data.Semigroup":114,"../Data.Semiring":116,"../Data.Show":118,"../Data.Traversable":130,"../Data.Unit":137,"../Prelude":228,"../Type.Equality":231}],134:[function(require,module,exports){
"use strict";

exports.unfoldrArrayImpl = function (isNothing) {
  return function (fromJust) {
    return function (fst) {
      return function (snd) {
        return function (f) {
          return function (b) {
            var result = [];
            var value = b;
            while (true) { // eslint-disable-line no-constant-condition
              var maybe = f(value);
              if (isNothing(maybe)) return result;
              var tuple = fromJust(maybe);
              result.push(fst(tuple));
              value = snd(tuple);
            }
          };
        };
      };
    };
  };
};

},{}],135:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Ring = require("../Data.Ring");
var Data_Traversable = require("../Data.Traversable");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Unfoldable = function (unfoldr) {
    this.unfoldr = unfoldr;
};
var unfoldr = function (dict) {
    return dict.unfoldr;
};
var unfoldableArray = new Unfoldable($foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
var replicate = function (dictUnfoldable) {
    return function (n) {
        return function (v) {
            var step = function (i) {
                var $8 = i <= 0;
                if ($8) {
                    return Data_Maybe.Nothing.value;
                };
                return new Data_Maybe.Just(new Data_Tuple.Tuple(v, i - 1 | 0));
            };
            return unfoldr(dictUnfoldable)(step)(n);
        };
    };
};
var replicateA = function (dictApplicative) {
    return function (dictUnfoldable) {
        return function (dictTraversable) {
            return function (n) {
                return function (m) {
                    return Data_Traversable.sequence(dictTraversable)(dictApplicative)(replicate(dictUnfoldable)(n)(m));
                };
            };
        };
    };
};
var singleton = function (dictUnfoldable) {
    return replicate(dictUnfoldable)(1);
};
var none = function (dictUnfoldable) {
    return unfoldr(dictUnfoldable)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Unit.unit);
};
var fromMaybe = function (dictUnfoldable) {
    return unfoldr(dictUnfoldable)(function (b) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Maybe.Nothing.value))(b);
    });
};
module.exports = {
    Unfoldable: Unfoldable, 
    fromMaybe: fromMaybe, 
    none: none, 
    replicate: replicate, 
    replicateA: replicateA, 
    singleton: singleton, 
    unfoldr: unfoldr, 
    unfoldableArray: unfoldableArray
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Ord":107,"../Data.Ring":110,"../Data.Traversable":130,"../Data.Tuple":133,"../Data.Unit":137,"../Partial.Unsafe":225,"../Prelude":228,"./foreign":134}],136:[function(require,module,exports){
"use strict";

exports.unit = {};

},{}],137:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Data_Show = require("../Data.Show");
var showUnit = new Data_Show.Show(function (v) {
    return "unit";
});
module.exports = {
    showUnit: showUnit, 
    unit: $foreign.unit
};

},{"../Data.Show":118,"./foreign":136}],138:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Show = require("../Data.Show");
var Void = function (x) {
    return x;
};
var absurd = function (a) {
    var spin = function ($copy_v) {
        var $tco_result;
        function $tco_loop(v) {
            $copy_v = v;
            return;
        };
        while (!false) {
            $tco_result = $tco_loop($copy_v);
        };
        return $tco_result;
    };
    return spin(a);
};
var showVoid = new Data_Show.Show(absurd);
module.exports = {
    absurd: absurd, 
    showVoid: showVoid
};

},{"../Data.Show":118}],139:[function(require,module,exports){
/* globals exports */
"use strict";

// module Global

exports.nan = NaN;

exports.isNaN = isNaN;

exports.infinity = Infinity;

exports.isFinite = isFinite;

exports.readInt = function (radix) {
  return function (n) {
    return parseInt(n, radix);
  };
};

exports.readFloat = parseFloat;

exports.decodeURI = decodeURI;
exports.encodeURI = encodeURI;
exports.decodeURIComponent = decodeURIComponent;
exports.encodeURIComponent = encodeURIComponent;

},{}],140:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
module.exports = {
    "decodeURI": $foreign["decodeURI"], 
    "decodeURIComponent": $foreign["decodeURIComponent"], 
    "encodeURI": $foreign["encodeURI"], 
    "encodeURIComponent": $foreign["encodeURIComponent"], 
    infinity: $foreign.infinity, 
    "isFinite": $foreign["isFinite"], 
    "isNaN": $foreign["isNaN"], 
    nan: $foreign.nan, 
    readFloat: $foreign.readFloat, 
    readInt: $foreign.readInt
};

},{"./foreign":139}],141:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Foldable = require("../Data.Foldable");
var Data_Foreign = require("../Data.Foreign");
var Data_Foreign_Class = require("../Data.Foreign.Class");
var Data_Function = require("../Data.Function");
var Data_List = require("../Data.List");
var Data_Maybe = require("../Data.Maybe");
var Data_Ring = require("../Data.Ring");
var $$Math = require("../Math");
var Mathbox_Class_Base_Group = require("../Mathbox.Class.Base.Group");
var Mathbox_Class_Camera_Camera = require("../Mathbox.Class.Camera.Camera");
var Mathbox_Class_Data_Matrix = require("../Mathbox.Class.Data.Matrix");
var Mathbox_Class_Draw_Surface = require("../Mathbox.Class.Draw.Surface");
var Mathbox_Class_Operator_Swizzle = require("../Mathbox.Class.Operator.Swizzle");
var Mathbox_Class_Transform_Transform3 = require("../Mathbox.Class.Transform.Transform3");
var Mathbox_Class_View_Cartesian = require("../Mathbox.Class.View.Cartesian");
var Mathbox_Classes = require("../Mathbox.Classes");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Mathbox = require("../Mathbox.Mathbox");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var transform = function (v3) {
    return function (nested) {
        return Mathbox_Mathbox.Transform3.create((function () {
            var $7 = {};
            for (var $8 in Mathbox_Class_Transform_Transform3.mkTransform3) {
                if ({}.hasOwnProperty.call(Mathbox_Class_Transform_Transform3.mkTransform3, $8)) {
                    $7[$8] = Mathbox_Class_Transform_Transform3["mkTransform3"][$8];
                };
            };
            $7.position = Mathbox_Field.Val.create(v3);
            return $7;
        })())(Data_List.fromFoldable(Data_Foldable.foldableArray)(nested));
    };
};
var swizzle = function (s) {
    return Mathbox_Mathbox.Swizzle.create((function () {
        var $10 = {};
        for (var $11 in Mathbox_Class_Operator_Swizzle.mkSwizzle) {
            if ({}.hasOwnProperty.call(Mathbox_Class_Operator_Swizzle.mkSwizzle, $11)) {
                $10[$11] = Mathbox_Class_Operator_Swizzle["mkSwizzle"][$11];
            };
        };
        $10.order = Mathbox_Field.Val.create(Mathbox_Types.mkSwizzle1(s));
        return $10;
    })());
};
var surface = function (c) {
    return function (o) {
        return Mathbox_Mathbox.Surface.create((function () {
            var $13 = {};
            for (var $14 in Mathbox_Class_Draw_Surface.mkSurface) {
                if ({}.hasOwnProperty.call(Mathbox_Class_Draw_Surface.mkSurface, $14)) {
                    $13[$14] = Mathbox_Class_Draw_Surface["mkSurface"][$14];
                };
            };
            $13.color = Mathbox_Field.Val.create(Mathbox_Types.unsafeMkColor(c));
            $13.opacity = new Mathbox_Field.Val(o);
            return $13;
        })());
    };
};
var matrixData = Data_Foreign.toForeign([ [ [ -1 | 0, -1 | 0, -1 | 0 ], [ -1 | 0, -1 | 0, -1 | 0 ], [ 1, -1 | 0, -1 | 0 ], [ 1, -1 | 0, -1 | 0 ] ], [ [ -1 | 0, -1 | 0, 1 ], [ -1 | 0, -1 | 0, 1 ], [ 1, -1 | 0, 1 ], [ 1, -1 | 0, 1 ] ] ]);
var matrix = Mathbox_Mathbox.Matrix.create((function () {
    var $16 = {};
    for (var $17 in Mathbox_Class_Data_Matrix.mkMatrix) {
        if ({}.hasOwnProperty.call(Mathbox_Class_Data_Matrix.mkMatrix, $17)) {
            $16[$17] = Mathbox_Class_Data_Matrix["mkMatrix"][$17];
        };
    };
    $16.data = Data_Maybe.Just.create(new Mathbox_Field.Val(matrixData));
    $16.channels = new Mathbox_Field.Val(3);
    return $16;
})());
var group = function (nested) {
    return Mathbox_Mathbox.Group.create((function () {
        var $19 = {};
        for (var $20 in Mathbox_Class_Base_Group.mkGroup) {
            if ({}.hasOwnProperty.call(Mathbox_Class_Base_Group.mkGroup, $20)) {
                $19[$20] = Mathbox_Class_Base_Group["mkGroup"][$20];
            };
        };
        $19.active = new Mathbox_Field.Val(true);
        return $19;
    })())(Data_List.fromFoldable(Data_Foldable.foldableArray)(nested));
};
var cube = function (opacity) {
    return group([ surface("blue")(opacity), transform(Mathbox_Types.mkVec3(0)(2)(0))([ surface("blue")(opacity), transform(Mathbox_Types.mkVec3(0)(-2 | 0)(0))([ swizzle([ 2, 3, 1 ]), surface("red")(opacity), transform(Mathbox_Types.mkVec3(2)(0)(0))([ surface("red")(opacity), transform(Mathbox_Types.mkVec3(-2 | 0)(0)(0))([ swizzle([ 3, 2, 1 ]), surface("yellow")(opacity), transform(Mathbox_Types.mkVec3(0)(0)(2))([ surface("yellow")(opacity) ]) ]) ]) ]) ]) ]);
};
var cartesian = function (nested) {
    return Mathbox_Mathbox.Cartesian.create((function () {
        var $22 = {};
        for (var $23 in Mathbox_Class_View_Cartesian.mkCartesian) {
            if ({}.hasOwnProperty.call(Mathbox_Class_View_Cartesian.mkCartesian, $23)) {
                $22[$23] = Mathbox_Class_View_Cartesian["mkCartesian"][$23];
            };
        };
        $22.range = new Mathbox_Field.Val([ Mathbox_Types.mkVec2(-5 | 0)(5), Mathbox_Types.mkVec2(-5 | 0)(5), Mathbox_Types.mkVec2(-5 | 0)(5) ]);
        $22.scale = new Mathbox_Field.Val(Mathbox_Types.mkVec3(1)(1)(1));
        return $22;
    })())(Data_List.fromFoldable(Data_Foldable.foldableArray)(nested));
};
var cam = Mathbox_Mathbox.Camera.create((function () {
    var $25 = {};
    for (var $26 in Mathbox_Class_Camera_Camera.mkCamera) {
        if ({}.hasOwnProperty.call(Mathbox_Class_Camera_Camera.mkCamera, $26)) {
            $25[$26] = Mathbox_Class_Camera_Camera["mkCamera"][$26];
        };
    };
    $25.proxy = new Mathbox_Field.Val(true);
    $25.position = Data_Maybe.Just.create(Mathbox_Field.Val.create(Mathbox_Types.mkVec3(2)(3)(3)));
    return $25;
})());
var mathbox = cartesian([ cam, matrix, cube(0.9) ]);
var main = Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(Mathbox_Mathbox.mkMathbox({
    plugins: [ "core", "controls", "cursor" ], 
    controls: {
        klass: Mathbox_Mathbox.trackballControls
    }, 
    fullscreen: true
}))(Mathbox_Mathbox.applyOnThree(Mathbox_Mathbox.setThreeClearColor(Mathbox_Mathbox.colorWhite)(1.0))))(Mathbox_Mathbox.set({
    focus: new Data_Maybe.Just(0.3), 
    scale: new Data_Maybe.Just(72000.0)
})))(Mathbox_Mathbox.add(Mathbox_Mathbox.toJs(mathbox)));
module.exports = {
    cam: cam, 
    cartesian: cartesian, 
    cube: cube, 
    group: group, 
    main: main, 
    mathbox: mathbox, 
    matrix: matrix, 
    matrixData: matrixData, 
    surface: surface, 
    swizzle: swizzle, 
    transform: transform
};

},{"../Control.Bind":9,"../Control.Monad.Eff":20,"../Data.Foldable":63,"../Data.Foreign":70,"../Data.Foreign.Class":65,"../Data.Function":73,"../Data.List":88,"../Data.Maybe":91,"../Data.Ring":110,"../Math":143,"../Mathbox.Class.Base.Group":144,"../Mathbox.Class.Camera.Camera":150,"../Mathbox.Class.Data.Matrix":156,"../Mathbox.Class.Draw.Surface":167,"../Mathbox.Class.Operator.Swizzle":183,"../Mathbox.Class.Transform.Transform3":208,"../Mathbox.Class.View.Cartesian":211,"../Mathbox.Classes":218,"../Mathbox.Field":219,"../Mathbox.Mathbox":221,"../Mathbox.Types":223,"../Prelude":228}],142:[function(require,module,exports){
"use strict";

// module Math

exports.abs = Math.abs;

exports.acos = Math.acos;

exports.asin = Math.asin;

exports.atan = Math.atan;

exports.atan2 = function (y) {
  return function (x) {
    return Math.atan2(y, x);
  };
};

exports.ceil = Math.ceil;

exports.cos = Math.cos;

exports.exp = Math.exp;

exports.floor = Math.floor;

exports.trunc = Math.trunc || function (n) {
  return n < 0 ? Math.ceil(n) : Math.floor(n);
};

exports.log = Math.log;

exports.max = function (n1) {
  return function (n2) {
    return Math.max(n1, n2);
  };
};

exports.min = function (n1) {
  return function (n2) {
    return Math.min(n1, n2);
  };
};

exports.pow = function (n) {
  return function (p) {
    return Math.pow(n, p);
  };
};

exports.remainder = function (n) {
  return function (m) {
    return n % m;
  };
};

exports.round = Math.round;

exports.sin = Math.sin;

exports.sqrt = Math.sqrt;

exports.tan = Math.tan;

exports.e = Math.E;

exports.ln2 = Math.LN2;

exports.ln10 = Math.LN10;

exports.log2e = Math.LOG2E;

exports.log10e = Math.LOG10E;

exports.pi = Math.PI;

exports.tau = 2 * Math.PI;

exports.sqrt1_2 = Math.SQRT1_2;

exports.sqrt2 = Math.SQRT2;

},{}],143:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
module.exports = {
    abs: $foreign.abs, 
    acos: $foreign.acos, 
    asin: $foreign.asin, 
    atan: $foreign.atan, 
    atan2: $foreign.atan2, 
    ceil: $foreign.ceil, 
    cos: $foreign.cos, 
    e: $foreign.e, 
    exp: $foreign.exp, 
    floor: $foreign.floor, 
    ln10: $foreign.ln10, 
    ln2: $foreign.ln2, 
    log: $foreign.log, 
    log10e: $foreign.log10e, 
    log2e: $foreign.log2e, 
    max: $foreign.max, 
    min: $foreign.min, 
    pi: $foreign.pi, 
    pow: $foreign.pow, 
    remainder: $foreign.remainder, 
    round: $foreign.round, 
    sin: $foreign.sin, 
    sqrt: $foreign.sqrt, 
    sqrt1_2: $foreign.sqrt1_2, 
    sqrt2: $foreign.sqrt2, 
    tan: $foreign.tan, 
    tau: $foreign.tau, 
    trunc: $foreign.trunc
};

},{"./foreign":142}],144:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkGroup = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    visible: Mathbox_Field.Val.create(true), 
    active: Mathbox_Field.Val.create(true)
};
var groupToJs = function (g) {
    return {
        id: Data_Nullable.toNullable(g.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(g.classes), 
        visible: g.visible, 
        active: g.active
    };
};
module.exports = {
    groupToJs: groupToJs, 
    mkGroup: mkGroup
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],145:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkInherit = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0)
};
var inheritToJs = function (i) {
    return {
        id: Data_Nullable.toNullable(i.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(i.classes)
    };
};
module.exports = {
    inheritToJs: inheritToJs, 
    mkInherit: mkInherit
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],146:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var parentToJs = function (p) {
    return {
        id: Data_Nullable.toNullable(p.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(p.classes)
    };
};
var mkParent = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0)
};
module.exports = {
    mkParent: mkParent, 
    parentToJs: parentToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],147:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var rootToJs = function (r) {
    return {
        id: Data_Nullable.toNullable(r.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(r.classes), 
        speed: r.speed, 
        camera: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(r.camera), 
        pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(r.pass), 
        scale: Data_Nullable.toNullable(r.scale), 
        fov: Data_Nullable.toNullable(r.fov), 
        focus: Data_Nullable.toNullable(r.focus)
    };
};
var mkRoot = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    speed: Mathbox_Field.Val.create(1.0), 
    camera: Mathbox_Field.Val.create(Mathbox_Types.mkSelect([ Mathbox_Types.camera ])), 
    pass: Mathbox_Field.Val.create(Mathbox_Types.mkVertexPass0), 
    scale: Data_Maybe.Nothing.value, 
    fov: Data_Maybe.Nothing.value, 
    focus: Data_Maybe.Nothing.value
};
module.exports = {
    mkRoot: mkRoot, 
    rootToJs: rootToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],148:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var sourceToJs = function (s) {
    return {
        id: Data_Nullable.toNullable(s.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes)
    };
};
var mkSource = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0)
};
module.exports = {
    mkSource: mkSource, 
    sourceToJs: sourceToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],149:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var unitToJs = function (u) {
    return {
        id: Data_Nullable.toNullable(u.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(u.classes), 
        scale: Data_Nullable.toNullable(u.scale), 
        fov: Data_Nullable.toNullable(u.fov), 
        focus: Data_Nullable.toNullable(u.focus)
    };
};
var mkUnit = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    scale: Data_Maybe.Nothing.value, 
    fov: Data_Maybe.Nothing.value, 
    focus: Data_Maybe.Nothing.value
};
module.exports = {
    mkUnit: mkUnit, 
    unitToJs: unitToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],150:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkCamera = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    proxy: Mathbox_Field.Val.create(false), 
    position: Data_Maybe.Nothing.value, 
    quaternion: Data_Maybe.Nothing.value, 
    rotation: Data_Maybe.Nothing.value, 
    lookAt: Data_Maybe.Nothing.value, 
    up: Data_Maybe.Nothing.value, 
    eulerOrder: Mathbox_Field.Val.create(Mathbox_Types.mkSwizzle1(Mathbox_Types.xyz)), 
    fov: Data_Maybe.Nothing.value
};
var cameraToJs = function (c) {
    return {
        id: Data_Nullable.toNullable(c.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(c.classes), 
        proxy: c.proxy, 
        position: Data_Nullable.toNullable(c.position), 
        quaternion: Data_Nullable.toNullable(c.quaternion), 
        rotation: Data_Nullable.toNullable(c.rotation), 
        lookAt: Data_Nullable.toNullable(c.lookAt), 
        up: Data_Nullable.toNullable(c.up), 
        eulerOrder: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.swizzleToJs)(c.eulerOrder), 
        fov: Data_Nullable.toNullable(c.fov)
    };
};
module.exports = {
    cameraToJs: cameraToJs, 
    mkCamera: mkCamera
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],151:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkArea = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    channels: Mathbox_Field.Val.create(4), 
    items: Mathbox_Field.Val.create(1), 
    fps: Data_Maybe.Nothing.value, 
    hurry: Mathbox_Field.Val.create(5), 
    limit: Mathbox_Field.Val.create(60), 
    realtime: Mathbox_Field.Val.create(false), 
    observe: Mathbox_Field.Val.create(false), 
    aligned: Mathbox_Field.Val.create(false), 
    data: Data_Maybe.Nothing.value, 
    expr: Data_Maybe.Nothing.value, 
    bind: Data_Maybe.Nothing.value, 
    live: Mathbox_Field.Val.create(true), 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    history: Mathbox_Field.Val.create(1), 
    bufferWidth: Mathbox_Field.Val.create(1), 
    bufferHeight: Mathbox_Field.Val.create(1), 
    minFilter: Mathbox_Field.Val.create(Mathbox_Types.FilterNearest.value), 
    magFilter: Mathbox_Field.Val.create(Mathbox_Types.FilterNearest.value), 
    type: Mathbox_Field.Val.create(Mathbox_Types.TypeFloat.value), 
    rangeX: Data_Maybe.Nothing.value, 
    rangeY: Data_Maybe.Nothing.value, 
    axes: Mathbox_Field.Val.create(Mathbox_Types.mkSwizzle([ 1, 2 ])(2)), 
    centeredX: Mathbox_Field.Val.create(false), 
    paddingX: Mathbox_Field.Val.create(0.0), 
    centeredY: Mathbox_Field.Val.create(false), 
    paddingY: Mathbox_Field.Val.create(0.0)
};
var areaToJs = function (a) {
    return {
        id: Data_Nullable.toNullable(a.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(a.classes), 
        channels: a.channels, 
        items: a.items, 
        fps: Data_Nullable.toNullable(a.fps), 
        hurry: a.hurry, 
        limit: a.limit, 
        realtime: a.realtime, 
        observe: a.observe, 
        aligned: a.aligned, 
        data: Data_Nullable.toNullable(a.data), 
        expr: Data_Nullable.toNullable(a.expr), 
        bind: Data_Nullable.toNullable(a.bind), 
        live: a.live, 
        width: Data_Nullable.toNullable(a.width), 
        height: Data_Nullable.toNullable(a.height), 
        history: a.history, 
        bufferWidth: a.bufferWidth, 
        bufferHeight: a.bufferHeight, 
        minFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(a.minFilter), 
        magFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(a.magFilter), 
        type: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.typeToJs)(a.type), 
        rangeX: Data_Nullable.toNullable(a.rangeX), 
        rangeY: Data_Nullable.toNullable(a.rangeY), 
        axes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.swizzleToJs)(a.axes), 
        centeredX: a.centeredX, 
        paddingX: a.paddingX, 
        centeredY: a.centeredY, 
        paddingY: a.paddingY
    };
};
module.exports = {
    areaToJs: areaToJs, 
    mkArea: mkArea
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],152:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkArray_ = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    channels: Mathbox_Field.Val.create(4), 
    items: Mathbox_Field.Val.create(1), 
    fps: Data_Maybe.Nothing.value, 
    hurry: Mathbox_Field.Val.create(5), 
    limit: Mathbox_Field.Val.create(60), 
    realtime: Mathbox_Field.Val.create(false), 
    observe: Mathbox_Field.Val.create(false), 
    aligned: Mathbox_Field.Val.create(false), 
    data: Data_Maybe.Nothing.value, 
    expr: Data_Maybe.Nothing.value, 
    bind: Data_Maybe.Nothing.value, 
    live: Mathbox_Field.Val.create(true), 
    width: Data_Maybe.Nothing.value, 
    bufferWidth: Mathbox_Field.Val.create(1), 
    history: Mathbox_Field.Val.create(1), 
    minFilter: Mathbox_Field.Val.create(Mathbox_Types.FilterNearest.value), 
    magFilter: Mathbox_Field.Val.create(Mathbox_Types.FilterNearest.value), 
    type: Mathbox_Field.Val.create(Mathbox_Types.TypeFloat.value)
};
var array_ToJs = function (a) {
    return {
        id: Data_Nullable.toNullable(a.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(a.classes), 
        channels: a.channels, 
        items: a.items, 
        fps: Data_Nullable.toNullable(a.fps), 
        hurry: a.hurry, 
        limit: a.limit, 
        realtime: a.realtime, 
        observe: a.observe, 
        aligned: a.aligned, 
        data: Data_Nullable.toNullable(a.data), 
        expr: Data_Nullable.toNullable(a.expr), 
        bind: Data_Nullable.toNullable(a.bind), 
        live: a.live, 
        width: Data_Nullable.toNullable(a.width), 
        bufferWidth: a.bufferWidth, 
        history: a.history, 
        minFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(a.minFilter), 
        magFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(a.magFilter), 
        type: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.typeToJs)(a.type)
    };
};
module.exports = {
    array_ToJs: array_ToJs, 
    mkArray_: mkArray_
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],153:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkBuffer = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    channels: Mathbox_Field.Val.create(4), 
    items: Mathbox_Field.Val.create(1), 
    fps: Data_Maybe.Nothing.value, 
    hurry: Mathbox_Field.Val.create(5), 
    limit: Mathbox_Field.Val.create(60), 
    realtime: Mathbox_Field.Val.create(false), 
    observe: Mathbox_Field.Val.create(false), 
    aligned: Mathbox_Field.Val.create(false), 
    data: Data_Maybe.Nothing.value, 
    expr: Data_Maybe.Nothing.value, 
    bind: Data_Maybe.Nothing.value, 
    live: Mathbox_Field.Val.create(true), 
    minFilter: Mathbox_Field.Val.create(Mathbox_Types.FilterNearest.value), 
    magFilter: Mathbox_Field.Val.create(Mathbox_Types.FilterNearest.value), 
    type: Mathbox_Field.Val.create(Mathbox_Types.TypeFloat.value)
};
var bufferToJs = function (b) {
    return {
        id: Data_Nullable.toNullable(b.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(b.classes), 
        channels: b.channels, 
        items: b.items, 
        fps: Data_Nullable.toNullable(b.fps), 
        hurry: b.hurry, 
        limit: b.limit, 
        realtime: b.realtime, 
        observe: b.observe, 
        aligned: b.aligned, 
        data: Data_Nullable.toNullable(b.data), 
        expr: Data_Nullable.toNullable(b.expr), 
        bind: Data_Nullable.toNullable(b.bind), 
        live: b.live, 
        minFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(b.minFilter), 
        magFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(b.magFilter), 
        type: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.typeToJs)(b.type)
    };
};
module.exports = {
    bufferToJs: bufferToJs, 
    mkBuffer: mkBuffer
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],154:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkData = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    data: Data_Maybe.Nothing.value, 
    expr: Data_Maybe.Nothing.value, 
    bind: Data_Maybe.Nothing.value, 
    live: Mathbox_Field.Val.create(true), 
    active: Mathbox_Field.Val.create(true)
};
var dataToJs = function (d) {
    return {
        id: Data_Nullable.toNullable(d.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(d.classes), 
        data: Data_Nullable.toNullable(d.data), 
        expr: Data_Nullable.toNullable(d.expr), 
        bind: Data_Nullable.toNullable(d.bind), 
        live: d.live, 
        active: d.active
    };
};
module.exports = {
    dataToJs: dataToJs, 
    mkData: mkData
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],155:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkInterval = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    channels: Mathbox_Field.Val.create(4), 
    items: Mathbox_Field.Val.create(1), 
    fps: Data_Maybe.Nothing.value, 
    hurry: Mathbox_Field.Val.create(5), 
    limit: Mathbox_Field.Val.create(60), 
    realtime: Mathbox_Field.Val.create(false), 
    observe: Mathbox_Field.Val.create(false), 
    aligned: Mathbox_Field.Val.create(false), 
    data: Data_Maybe.Nothing.value, 
    expr: Data_Maybe.Nothing.value, 
    bind: Data_Maybe.Nothing.value, 
    live: Mathbox_Field.Val.create(true), 
    minFilter: Mathbox_Field.Val.create(Mathbox_Types.FilterNearest.value), 
    magFilter: Mathbox_Field.Val.create(Mathbox_Types.FilterNearest.value), 
    type: Mathbox_Field.Val.create(Mathbox_Types.TypeFloat.value), 
    width: Data_Maybe.Nothing.value, 
    bufferWidth: Mathbox_Field.Val.create(1), 
    history: Mathbox_Field.Val.create(1), 
    range: Data_Maybe.Nothing.value, 
    axis: Mathbox_Field.Val.create(Mathbox_Types.mkAxis0), 
    centered: Mathbox_Field.Val.create(false), 
    padding: Mathbox_Field.Val.create(0.0)
};
var intervalToJs = function (i) {
    return {
        id: Data_Nullable.toNullable(i.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(i.classes), 
        channels: i.channels, 
        items: i.items, 
        fps: Data_Nullable.toNullable(i.fps), 
        hurry: i.hurry, 
        limit: i.limit, 
        realtime: i.realtime, 
        observe: i.observe, 
        aligned: i.aligned, 
        data: Data_Nullable.toNullable(i.data), 
        expr: Data_Nullable.toNullable(i.expr), 
        bind: Data_Nullable.toNullable(i.bind), 
        live: i.live, 
        minFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(i.minFilter), 
        magFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(i.magFilter), 
        type: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.typeToJs)(i.type), 
        width: Data_Nullable.toNullable(i.width), 
        bufferWidth: i.bufferWidth, 
        history: i.history, 
        range: Data_Nullable.toNullable(i.range), 
        axis: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.axisToJs)(i.axis), 
        centered: i.centered, 
        padding: i.padding
    };
};
module.exports = {
    intervalToJs: intervalToJs, 
    mkInterval: mkInterval
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],156:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkMatrix = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    channels: Mathbox_Field.Val.create(4), 
    items: Mathbox_Field.Val.create(1), 
    fps: Data_Maybe.Nothing.value, 
    hurry: Mathbox_Field.Val.create(5), 
    limit: Mathbox_Field.Val.create(60), 
    realtime: Mathbox_Field.Val.create(false), 
    observe: Mathbox_Field.Val.create(false), 
    aligned: Mathbox_Field.Val.create(false), 
    data: Data_Maybe.Nothing.value, 
    expr: Data_Maybe.Nothing.value, 
    bind: Data_Maybe.Nothing.value, 
    live: Mathbox_Field.Val.create(true), 
    minFilter: Mathbox_Field.Val.create(Mathbox_Types.FilterNearest.value), 
    magFilter: Mathbox_Field.Val.create(Mathbox_Types.FilterNearest.value), 
    type: Mathbox_Field.Val.create(Mathbox_Types.TypeFloat.value), 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    history: Mathbox_Field.Val.create(1), 
    bufferWidth: Mathbox_Field.Val.create(1), 
    bufferHeight: Mathbox_Field.Val.create(1)
};
var matrixToJs = function (m) {
    return {
        id: Data_Nullable.toNullable(m.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(m.classes), 
        channels: m.channels, 
        items: m.items, 
        fps: Data_Nullable.toNullable(m.fps), 
        hurry: m.hurry, 
        limit: m.limit, 
        realtime: m.realtime, 
        observe: m.observe, 
        aligned: m.aligned, 
        data: Data_Nullable.toNullable(m.data), 
        expr: Data_Nullable.toNullable(m.expr), 
        bind: Data_Nullable.toNullable(m.bind), 
        live: m.live, 
        minFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(m.minFilter), 
        magFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(m.magFilter), 
        type: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.typeToJs)(m.type), 
        width: Data_Nullable.toNullable(m.width), 
        height: Data_Nullable.toNullable(m.height), 
        history: m.history, 
        bufferWidth: m.bufferWidth, 
        bufferHeight: m.bufferHeight
    };
};
module.exports = {
    matrixToJs: matrixToJs, 
    mkMatrix: mkMatrix
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],157:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var resolveToJs = function (r) {
    return {
        id: Data_Nullable.toNullable(r.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(r.classes), 
        data: Data_Nullable.toNullable(r.data), 
        expr: Data_Nullable.toNullable(r.expr), 
        bind: Data_Nullable.toNullable(r.bind), 
        live: r.live, 
        width: Data_Nullable.toNullable(r.width), 
        height: Data_Nullable.toNullable(r.height), 
        depth: Data_Nullable.toNullable(r.depth), 
        bufferWidth: r.bufferWidth, 
        bufferHeight: r.bufferHeight, 
        bufferDepth: r.bufferDepth
    };
};
var mkResolve = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    data: Data_Maybe.Nothing.value, 
    expr: Data_Maybe.Nothing.value, 
    bind: Data_Maybe.Nothing.value, 
    live: Mathbox_Field.Val.create(true), 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    depth: Data_Maybe.Nothing.value, 
    bufferWidth: Mathbox_Field.Val.create(1), 
    bufferHeight: Mathbox_Field.Val.create(1), 
    bufferDepth: Mathbox_Field.Val.create(1)
};
module.exports = {
    mkResolve: mkResolve, 
    resolveToJs: resolveToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],158:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var scaleToJs = function (s) {
    return {
        id: Data_Nullable.toNullable(s.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
        axis: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.axisToJs)(s.axis), 
        range: Data_Nullable.toNullable(s.range), 
        divide: s.divide, 
        unit: s.unit, 
        base: s.base, 
        mode: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.scaleToJs)(s.mode), 
        start: s.start, 
        end: s.end, 
        zero: s.zero, 
        factor: s.factor, 
        nice: s.nice, 
        origin: s.origin
    };
};
var mkScale = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    axis: Mathbox_Field.Val.create(Mathbox_Types.mkAxis0), 
    range: Data_Maybe.Nothing.value, 
    divide: Mathbox_Field.Val.create(10.0), 
    unit: Mathbox_Field.Val.create(1.0), 
    base: Mathbox_Field.Val.create(10.0), 
    mode: Mathbox_Field.Val.create(Mathbox_Types.mkScale0), 
    start: Mathbox_Field.Val.create(true), 
    end: Mathbox_Field.Val.create(true), 
    zero: Mathbox_Field.Val.create(true), 
    factor: Mathbox_Field.Val.create(1.0), 
    nice: Mathbox_Field.Val.create(true), 
    origin: Mathbox_Field.Val.create(Mathbox_Types.mkVec40)
};
module.exports = {
    mkScale: mkScale, 
    scaleToJs: scaleToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],159:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var volumeToJs = function (v) {
    return {
        id: Data_Nullable.toNullable(v.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(v.classes), 
        channels: v.channels, 
        items: v.items, 
        fps: Data_Nullable.toNullable(v.fps), 
        hurry: v.hurry, 
        limit: v.limit, 
        realtime: v.realtime, 
        observe: v.observe, 
        aligned: v.aligned, 
        data: Data_Nullable.toNullable(v.data), 
        expr: Data_Nullable.toNullable(v.expr), 
        bind: Data_Nullable.toNullable(v.bind), 
        live: v.live, 
        minFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(v.minFilter), 
        magFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(v.magFilter), 
        type: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.typeToJs)(v.type), 
        width: Data_Nullable.toNullable(v.width), 
        height: Data_Nullable.toNullable(v.height), 
        depth: Data_Nullable.toNullable(v.depth), 
        bufferWidth: v.bufferWidth, 
        bufferHeight: v.bufferHeight, 
        bufferDepth: v.bufferDepth, 
        rangeX: Data_Nullable.toNullable(v.rangeX), 
        rangeY: Data_Nullable.toNullable(v.rangeY), 
        rangeZ: Data_Nullable.toNullable(v.rangeZ), 
        axes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.swizzleToJs)(v.axes), 
        centeredX: v.centeredX, 
        paddingX: v.paddingX, 
        centeredY: v.centeredY, 
        paddingY: v.paddingY, 
        centeredZ: v.centeredZ, 
        paddingZ: v.paddingZ
    };
};
var mkVolume = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    channels: Mathbox_Field.Val.create(4), 
    items: Mathbox_Field.Val.create(1), 
    fps: Data_Maybe.Nothing.value, 
    hurry: Mathbox_Field.Val.create(5), 
    limit: Mathbox_Field.Val.create(60), 
    realtime: Mathbox_Field.Val.create(false), 
    observe: Mathbox_Field.Val.create(false), 
    aligned: Mathbox_Field.Val.create(false), 
    data: Data_Maybe.Nothing.value, 
    expr: Data_Maybe.Nothing.value, 
    bind: Data_Maybe.Nothing.value, 
    live: Mathbox_Field.Val.create(true), 
    minFilter: Mathbox_Field.Val.create(Mathbox_Types.FilterNearest.value), 
    magFilter: Mathbox_Field.Val.create(Mathbox_Types.FilterNearest.value), 
    type: Mathbox_Field.Val.create(Mathbox_Types.TypeFloat.value), 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    depth: Data_Maybe.Nothing.value, 
    bufferWidth: Mathbox_Field.Val.create(1), 
    bufferHeight: Mathbox_Field.Val.create(1), 
    bufferDepth: Mathbox_Field.Val.create(1), 
    rangeX: Data_Maybe.Nothing.value, 
    rangeY: Data_Maybe.Nothing.value, 
    rangeZ: Data_Maybe.Nothing.value, 
    axes: Mathbox_Field.Val.create(Mathbox_Types.mkSwizzle([ 1, 2, 3 ])(3)), 
    centeredX: Mathbox_Field.Val.create(false), 
    paddingX: Mathbox_Field.Val.create(0.0), 
    centeredY: Mathbox_Field.Val.create(false), 
    paddingY: Mathbox_Field.Val.create(0.0), 
    centeredZ: Mathbox_Field.Val.create(false), 
    paddingZ: Mathbox_Field.Val.create(0.0)
};
module.exports = {
    mkVolume: mkVolume, 
    volumeToJs: volumeToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],160:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var voxelToJs = function (v) {
    return {
        id: Data_Nullable.toNullable(v.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(v.classes), 
        channels: v.channels, 
        items: v.items, 
        fps: Data_Nullable.toNullable(v.fps), 
        hurry: v.hurry, 
        limit: v.limit, 
        realtime: v.realtime, 
        observe: v.observe, 
        aligned: v.aligned, 
        data: Data_Nullable.toNullable(v.data), 
        expr: Data_Nullable.toNullable(v.expr), 
        bind: Data_Nullable.toNullable(v.bind), 
        live: v.live, 
        minFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(v.minFilter), 
        magFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(v.magFilter), 
        type: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.typeToJs)(v.type), 
        width: Data_Nullable.toNullable(v.width), 
        height: Data_Nullable.toNullable(v.height), 
        depth: Data_Nullable.toNullable(v.depth), 
        bufferWidth: v.bufferWidth, 
        bufferHeight: v.bufferHeight, 
        bufferDepth: v.bufferDepth
    };
};
var mkVoxel = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    channels: Mathbox_Field.Val.create(4), 
    items: Mathbox_Field.Val.create(1), 
    fps: Data_Maybe.Nothing.value, 
    hurry: Mathbox_Field.Val.create(5), 
    limit: Mathbox_Field.Val.create(60), 
    realtime: Mathbox_Field.Val.create(false), 
    observe: Mathbox_Field.Val.create(false), 
    aligned: Mathbox_Field.Val.create(false), 
    data: Data_Maybe.Nothing.value, 
    expr: Data_Maybe.Nothing.value, 
    bind: Data_Maybe.Nothing.value, 
    live: Mathbox_Field.Val.create(true), 
    minFilter: Mathbox_Field.Val.create(Mathbox_Types.FilterNearest.value), 
    magFilter: Mathbox_Field.Val.create(Mathbox_Types.FilterNearest.value), 
    type: Mathbox_Field.Val.create(Mathbox_Types.TypeFloat.value), 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    depth: Data_Maybe.Nothing.value, 
    bufferWidth: Mathbox_Field.Val.create(1), 
    bufferHeight: Mathbox_Field.Val.create(1), 
    bufferDepth: Mathbox_Field.Val.create(1)
};
module.exports = {
    mkVoxel: mkVoxel, 
    voxelToJs: voxelToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],161:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkAxis = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    visible: Mathbox_Field.Val.create(true), 
    opacity: Mathbox_Field.Val.create(1.0), 
    color: Mathbox_Field.Val.create(Mathbox_Types.mkColor0), 
    blending: Mathbox_Field.Val.create(Mathbox_Types.mkBlending0), 
    zWrite: Mathbox_Field.Val.create(true), 
    zTest: Mathbox_Field.Val.create(true), 
    zIndex: Mathbox_Field.Val.create(Mathbox_Types.mkRound0), 
    zBias: Mathbox_Field.Val.create(0.0), 
    zOrder: Data_Maybe.Nothing.value, 
    width: Mathbox_Field.Val.create(2.0), 
    depth: Mathbox_Field.Val.create(1.0), 
    join: Mathbox_Field.Val.create(Mathbox_Types.mkJoin0), 
    stroke: Mathbox_Field.Val.create(Mathbox_Types.mkStroke0), 
    proximity: Data_Maybe.Nothing.value, 
    closed: Mathbox_Field.Val.create(false), 
    detail: Mathbox_Field.Val.create(1), 
    crossed: Mathbox_Field.Val.create(false), 
    range: Data_Maybe.Nothing.value, 
    axis: Mathbox_Field.Val.create(Mathbox_Types.mkAxis0), 
    size: Mathbox_Field.Val.create(3.0), 
    start: Mathbox_Field.Val.create(false), 
    end: Mathbox_Field.Val.create(true), 
    origin: Mathbox_Field.Val.create(Mathbox_Types.mkVec40)
};
var axisToJs = function (a) {
    return {
        id: Data_Nullable.toNullable(a.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(a.classes), 
        visible: a.visible, 
        opacity: a.opacity, 
        color: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.colorToJs)(a.color), 
        blending: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.blendingToJs)(a.blending), 
        zWrite: a.zWrite, 
        zTest: a.zTest, 
        zIndex: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.roundToJs)(a.zIndex), 
        zBias: a.zBias, 
        zOrder: Data_Nullable.toNullable(a.zOrder), 
        width: a.width, 
        depth: a.depth, 
        join: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.joinToJs)(a.join), 
        stroke: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.strokeToJs)(a.stroke), 
        proximity: Data_Nullable.toNullable(a.proximity), 
        closed: a.closed, 
        detail: a.detail, 
        crossed: a.crossed, 
        range: Data_Nullable.toNullable(a.range), 
        axis: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.axisToJs)(a.axis), 
        size: a.size, 
        start: a.start, 
        end: a.end, 
        origin: a.origin
    };
};
module.exports = {
    axisToJs: axisToJs, 
    mkAxis: mkAxis
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],162:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkFace = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    visible: Mathbox_Field.Val.create(true), 
    opacity: Mathbox_Field.Val.create(1.0), 
    color: Mathbox_Field.Val.create(Mathbox_Types.mkColor0), 
    blending: Mathbox_Field.Val.create(Mathbox_Types.mkBlending0), 
    zWrite: Mathbox_Field.Val.create(true), 
    zTest: Mathbox_Field.Val.create(true), 
    zIndex: Mathbox_Field.Val.create(Mathbox_Types.mkRound0), 
    zBias: Mathbox_Field.Val.create(0.0), 
    zOrder: Data_Maybe.Nothing.value, 
    width: Mathbox_Field.Val.create(2.0), 
    depth: Mathbox_Field.Val.create(1.0), 
    join: Mathbox_Field.Val.create(Mathbox_Types.mkJoin0), 
    stroke: Mathbox_Field.Val.create(Mathbox_Types.mkStroke0), 
    proximity: Data_Maybe.Nothing.value, 
    closed: Mathbox_Field.Val.create(false), 
    fill: Mathbox_Field.Val.create(true), 
    shaded: Mathbox_Field.Val.create(false), 
    map: Data_Maybe.Nothing.value, 
    lineBias: Mathbox_Field.Val.create(5.0), 
    line: Mathbox_Field.Val.create(false), 
    points: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    colors: Data_Maybe.Nothing.value
};
var faceToJs = function (f) {
    return {
        id: Data_Nullable.toNullable(f.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(f.classes), 
        visible: f.visible, 
        opacity: f.opacity, 
        color: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.colorToJs)(f.color), 
        blending: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.blendingToJs)(f.blending), 
        zWrite: f.zWrite, 
        zTest: f.zTest, 
        zIndex: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.roundToJs)(f.zIndex), 
        zBias: f.zBias, 
        zOrder: Data_Nullable.toNullable(f.zOrder), 
        width: f.width, 
        depth: f.depth, 
        join: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.joinToJs)(f.join), 
        stroke: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.strokeToJs)(f.stroke), 
        proximity: Data_Nullable.toNullable(f.proximity), 
        closed: f.closed, 
        fill: f.fill, 
        shaded: f.shaded, 
        map: Mathbox_Field.maybeToNullable(Mathbox_Types.selectToJs)(f.map), 
        lineBias: f.lineBias, 
        line: f.line, 
        points: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(f.points), 
        colors: Mathbox_Field.maybeToNullable(Mathbox_Types.selectToJs)(f.colors)
    };
};
module.exports = {
    faceToJs: faceToJs, 
    mkFace: mkFace
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],163:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkGrid = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    visible: Mathbox_Field.Val.create(true), 
    opacity: Mathbox_Field.Val.create(1.0), 
    color: Mathbox_Field.Val.create(Mathbox_Types.mkColor0), 
    blending: Mathbox_Field.Val.create(Mathbox_Types.mkBlending0), 
    zWrite: Mathbox_Field.Val.create(true), 
    zTest: Mathbox_Field.Val.create(true), 
    zIndex: Mathbox_Field.Val.create(Mathbox_Types.mkRound0), 
    zBias: Mathbox_Field.Val.create(0.0), 
    zOrder: Data_Maybe.Nothing.value, 
    width: Mathbox_Field.Val.create(2.0), 
    depth: Mathbox_Field.Val.create(1.0), 
    join: Mathbox_Field.Val.create(Mathbox_Types.mkJoin0), 
    stroke: Mathbox_Field.Val.create(Mathbox_Types.mkStroke0), 
    proximity: Data_Maybe.Nothing.value, 
    closed: Mathbox_Field.Val.create(false), 
    lineX: Mathbox_Field.Val.create(true), 
    lineY: Mathbox_Field.Val.create(true), 
    crossed: Mathbox_Field.Val.create(false), 
    closedX: Mathbox_Field.Val.create(false), 
    closedY: Mathbox_Field.Val.create(false), 
    axes: Mathbox_Field.Val.create(Mathbox_Types.mkSwizzle([ 1, 2 ])(2)), 
    origin: Mathbox_Field.Val.create(Mathbox_Types.mkVec40), 
    detailX: Mathbox_Field.Val.create(1), 
    crossedX: Mathbox_Field.Val.create(false), 
    detailY: Mathbox_Field.Val.create(1), 
    crossedY: Mathbox_Field.Val.create(false), 
    divideX: Mathbox_Field.Val.create(10.0), 
    unitX: Mathbox_Field.Val.create(1.0), 
    baseX: Mathbox_Field.Val.create(10.0), 
    modeX: Mathbox_Field.Val.create(Mathbox_Types.mkScale0), 
    startX: Mathbox_Field.Val.create(true), 
    endX: Mathbox_Field.Val.create(true), 
    zeroX: Mathbox_Field.Val.create(true), 
    factorX: Mathbox_Field.Val.create(1.0), 
    niceX: Mathbox_Field.Val.create(true), 
    divideY: Mathbox_Field.Val.create(10.0), 
    unitY: Mathbox_Field.Val.create(1.0), 
    baseY: Mathbox_Field.Val.create(10.0), 
    modeY: Mathbox_Field.Val.create(Mathbox_Types.mkScale0), 
    startY: Mathbox_Field.Val.create(true), 
    endY: Mathbox_Field.Val.create(true), 
    zeroY: Mathbox_Field.Val.create(true), 
    factorY: Mathbox_Field.Val.create(1.0), 
    niceY: Mathbox_Field.Val.create(true), 
    rangeX: Data_Maybe.Nothing.value, 
    rangeY: Data_Maybe.Nothing.value
};
var gridToJs = function (g) {
    return {
        id: Data_Nullable.toNullable(g.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(g.classes), 
        visible: g.visible, 
        opacity: g.opacity, 
        color: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.colorToJs)(g.color), 
        blending: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.blendingToJs)(g.blending), 
        zWrite: g.zWrite, 
        zTest: g.zTest, 
        zIndex: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.roundToJs)(g.zIndex), 
        zBias: g.zBias, 
        zOrder: Data_Nullable.toNullable(g.zOrder), 
        width: g.width, 
        depth: g.depth, 
        join: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.joinToJs)(g.join), 
        stroke: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.strokeToJs)(g.stroke), 
        proximity: Data_Nullable.toNullable(g.proximity), 
        closed: g.closed, 
        lineX: g.lineX, 
        lineY: g.lineY, 
        crossed: g.crossed, 
        closedX: g.closedX, 
        closedY: g.closedY, 
        axes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.swizzleToJs)(g.axes), 
        origin: g.origin, 
        detailX: g.detailX, 
        crossedX: g.crossedX, 
        detailY: g.detailY, 
        crossedY: g.crossedY, 
        divideX: g.divideX, 
        unitX: g.unitX, 
        baseX: g.baseX, 
        modeX: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.scaleToJs)(g.modeX), 
        startX: g.startX, 
        endX: g.endX, 
        zeroX: g.zeroX, 
        factorX: g.factorX, 
        niceX: g.niceX, 
        divideY: g.divideY, 
        unitY: g.unitY, 
        baseY: g.baseY, 
        modeY: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.scaleToJs)(g.modeY), 
        startY: g.startY, 
        endY: g.endY, 
        zeroY: g.zeroY, 
        factorY: g.factorY, 
        niceY: g.niceY, 
        rangeX: Data_Nullable.toNullable(g.rangeX), 
        rangeY: Data_Nullable.toNullable(g.rangeY)
    };
};
module.exports = {
    gridToJs: gridToJs, 
    mkGrid: mkGrid
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],164:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkLine = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    visible: Mathbox_Field.Val.create(true), 
    opacity: Mathbox_Field.Val.create(1.0), 
    color: Mathbox_Field.Val.create(Mathbox_Types.mkColor0), 
    blending: Mathbox_Field.Val.create(Mathbox_Types.mkBlending0), 
    zWrite: Mathbox_Field.Val.create(true), 
    zTest: Mathbox_Field.Val.create(true), 
    zIndex: Mathbox_Field.Val.create(Mathbox_Types.mkRound0), 
    zBias: Mathbox_Field.Val.create(0.0), 
    zOrder: Data_Maybe.Nothing.value, 
    width: Mathbox_Field.Val.create(2.0), 
    depth: Mathbox_Field.Val.create(1.0), 
    join: Mathbox_Field.Val.create(Mathbox_Types.mkJoin0), 
    stroke: Mathbox_Field.Val.create(Mathbox_Types.mkStroke0), 
    proximity: Data_Maybe.Nothing.value, 
    closed: Mathbox_Field.Val.create(false), 
    size: Mathbox_Field.Val.create(3.0), 
    start: Mathbox_Field.Val.create(false), 
    end: Mathbox_Field.Val.create(false), 
    points: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    colors: Data_Maybe.Nothing.value
};
var lineToJs = function (l) {
    return {
        id: Data_Nullable.toNullable(l.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(l.classes), 
        visible: l.visible, 
        opacity: l.opacity, 
        color: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.colorToJs)(l.color), 
        blending: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.blendingToJs)(l.blending), 
        zWrite: l.zWrite, 
        zTest: l.zTest, 
        zIndex: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.roundToJs)(l.zIndex), 
        zBias: l.zBias, 
        zOrder: Data_Nullable.toNullable(l.zOrder), 
        width: l.width, 
        depth: l.depth, 
        join: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.joinToJs)(l.join), 
        stroke: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.strokeToJs)(l.stroke), 
        proximity: Data_Nullable.toNullable(l.proximity), 
        closed: l.closed, 
        size: l.size, 
        start: l.start, 
        end: l.end, 
        points: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(l.points), 
        colors: Mathbox_Field.maybeToNullable(Mathbox_Types.selectToJs)(l.colors)
    };
};
module.exports = {
    lineToJs: lineToJs, 
    mkLine: mkLine
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],165:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var pointToJs = function (p) {
    return {
        id: Data_Nullable.toNullable(p.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(p.classes), 
        visible: p.visible, 
        opacity: p.opacity, 
        color: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.colorToJs)(p.color), 
        blending: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.blendingToJs)(p.blending), 
        zWrite: p.zWrite, 
        zTest: p.zTest, 
        zIndex: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.roundToJs)(p.zIndex), 
        zBias: p.zBias, 
        zOrder: Data_Nullable.toNullable(p.zOrder), 
        size: p.size, 
        sizes: Mathbox_Field.maybeToNullable(Mathbox_Types.selectToJs)(p.sizes), 
        shape: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.shapeToJs)(p.shape), 
        optical: p.optical, 
        fill: p.fill, 
        depth: p.depth, 
        points: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(p.points), 
        colors: Mathbox_Field.maybeToNullable(Mathbox_Types.selectToJs)(p.colors)
    };
};
var mkPoint = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    visible: Mathbox_Field.Val.create(true), 
    opacity: Mathbox_Field.Val.create(1.0), 
    color: Mathbox_Field.Val.create(Mathbox_Types.mkColor0), 
    blending: Mathbox_Field.Val.create(Mathbox_Types.mkBlending0), 
    zWrite: Mathbox_Field.Val.create(true), 
    zTest: Mathbox_Field.Val.create(true), 
    zIndex: Mathbox_Field.Val.create(Mathbox_Types.mkRound0), 
    zBias: Mathbox_Field.Val.create(0.0), 
    zOrder: Data_Maybe.Nothing.value, 
    size: Mathbox_Field.Val.create(4.0), 
    sizes: Data_Maybe.Nothing.value, 
    shape: Mathbox_Field.Val.create(Mathbox_Types.mkShape0), 
    optical: Mathbox_Field.Val.create(true), 
    fill: Mathbox_Field.Val.create(true), 
    depth: Mathbox_Field.Val.create(1.0), 
    points: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    colors: Data_Maybe.Nothing.value
};
module.exports = {
    mkPoint: mkPoint, 
    pointToJs: pointToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],166:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var stripToJs = function (s) {
    return {
        id: Data_Nullable.toNullable(s.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
        visible: s.visible, 
        opacity: s.opacity, 
        color: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.colorToJs)(s.color), 
        blending: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.blendingToJs)(s.blending), 
        zWrite: s.zWrite, 
        zTest: s.zTest, 
        zIndex: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.roundToJs)(s.zIndex), 
        zBias: s.zBias, 
        zOrder: Data_Nullable.toNullable(s.zOrder), 
        width: s.width, 
        depth: s.depth, 
        join: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.joinToJs)(s.join), 
        stroke: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.strokeToJs)(s.stroke), 
        proximity: Data_Nullable.toNullable(s.proximity), 
        closed: s.closed, 
        fill: s.fill, 
        shaded: s.shaded, 
        map: Mathbox_Field.maybeToNullable(Mathbox_Types.selectToJs)(s.map), 
        lineBias: s.lineBias, 
        line: s.line, 
        points: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(s.points), 
        colors: Mathbox_Field.maybeToNullable(Mathbox_Types.selectToJs)(s.colors)
    };
};
var mkStrip = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    visible: Mathbox_Field.Val.create(true), 
    opacity: Mathbox_Field.Val.create(1.0), 
    color: Mathbox_Field.Val.create(Mathbox_Types.mkColor0), 
    blending: Mathbox_Field.Val.create(Mathbox_Types.mkBlending0), 
    zWrite: Mathbox_Field.Val.create(true), 
    zTest: Mathbox_Field.Val.create(true), 
    zIndex: Mathbox_Field.Val.create(Mathbox_Types.mkRound0), 
    zBias: Mathbox_Field.Val.create(0.0), 
    zOrder: Data_Maybe.Nothing.value, 
    width: Mathbox_Field.Val.create(2.0), 
    depth: Mathbox_Field.Val.create(1.0), 
    join: Mathbox_Field.Val.create(Mathbox_Types.mkJoin0), 
    stroke: Mathbox_Field.Val.create(Mathbox_Types.mkStroke0), 
    proximity: Data_Maybe.Nothing.value, 
    closed: Mathbox_Field.Val.create(false), 
    fill: Mathbox_Field.Val.create(true), 
    shaded: Mathbox_Field.Val.create(false), 
    map: Data_Maybe.Nothing.value, 
    lineBias: Mathbox_Field.Val.create(5.0), 
    line: Mathbox_Field.Val.create(false), 
    points: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    colors: Data_Maybe.Nothing.value
};
module.exports = {
    mkStrip: mkStrip, 
    stripToJs: stripToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],167:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var surfaceToJs = function (s) {
    return {
        id: Data_Nullable.toNullable(s.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
        visible: s.visible, 
        opacity: s.opacity, 
        color: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.colorToJs)(s.color), 
        blending: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.blendingToJs)(s.blending), 
        zWrite: s.zWrite, 
        zTest: s.zTest, 
        zIndex: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.roundToJs)(s.zIndex), 
        zBias: s.zBias, 
        zOrder: Data_Nullable.toNullable(s.zOrder), 
        width: s.width, 
        depth: s.depth, 
        join: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.joinToJs)(s.join), 
        stroke: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.strokeToJs)(s.stroke), 
        proximity: Data_Nullable.toNullable(s.proximity), 
        closed: s.closed, 
        fill: s.fill, 
        shaded: s.shaded, 
        map: Mathbox_Field.maybeToNullable(Mathbox_Types.selectToJs)(s.map), 
        lineBias: s.lineBias, 
        points: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(s.points), 
        colors: Mathbox_Field.maybeToNullable(Mathbox_Types.selectToJs)(s.colors), 
        lineX: s.lineX, 
        lineY: s.lineY, 
        crossed: s.crossed, 
        closedX: s.closedX, 
        closedY: s.closedY
    };
};
var mkSurface = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    visible: Mathbox_Field.Val.create(true), 
    opacity: Mathbox_Field.Val.create(1.0), 
    color: Mathbox_Field.Val.create(Mathbox_Types.mkColor0), 
    blending: Mathbox_Field.Val.create(Mathbox_Types.mkBlending0), 
    zWrite: Mathbox_Field.Val.create(true), 
    zTest: Mathbox_Field.Val.create(true), 
    zIndex: Mathbox_Field.Val.create(Mathbox_Types.mkRound0), 
    zBias: Mathbox_Field.Val.create(0.0), 
    zOrder: Data_Maybe.Nothing.value, 
    width: Mathbox_Field.Val.create(2.0), 
    depth: Mathbox_Field.Val.create(1.0), 
    join: Mathbox_Field.Val.create(Mathbox_Types.mkJoin0), 
    stroke: Mathbox_Field.Val.create(Mathbox_Types.mkStroke0), 
    proximity: Data_Maybe.Nothing.value, 
    closed: Mathbox_Field.Val.create(false), 
    fill: Mathbox_Field.Val.create(true), 
    shaded: Mathbox_Field.Val.create(false), 
    map: Data_Maybe.Nothing.value, 
    lineBias: Mathbox_Field.Val.create(5.0), 
    points: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    colors: Data_Maybe.Nothing.value, 
    lineX: Mathbox_Field.Val.create(true), 
    lineY: Mathbox_Field.Val.create(true), 
    crossed: Mathbox_Field.Val.create(false), 
    closedX: Mathbox_Field.Val.create(false), 
    closedY: Mathbox_Field.Val.create(false)
};
module.exports = {
    mkSurface: mkSurface, 
    surfaceToJs: surfaceToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],168:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var ticksToJs = function (t) {
    return {
        id: Data_Nullable.toNullable(t.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(t.classes), 
        visible: t.visible, 
        opacity: t.opacity, 
        color: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.colorToJs)(t.color), 
        blending: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.blendingToJs)(t.blending), 
        zWrite: t.zWrite, 
        zTest: t.zTest, 
        zIndex: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.roundToJs)(t.zIndex), 
        zBias: t.zBias, 
        zOrder: Data_Nullable.toNullable(t.zOrder), 
        width: t.width, 
        depth: t.depth, 
        join: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.joinToJs)(t.join), 
        stroke: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.strokeToJs)(t.stroke), 
        proximity: Data_Nullable.toNullable(t.proximity), 
        closed: t.closed, 
        normal: t.normal, 
        size: t.size, 
        epsilon: t.epsilon, 
        points: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(t.points), 
        colors: Mathbox_Field.maybeToNullable(Mathbox_Types.selectToJs)(t.colors)
    };
};
var mkTicks = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    visible: Mathbox_Field.Val.create(true), 
    opacity: Mathbox_Field.Val.create(1.0), 
    color: Mathbox_Field.Val.create(Mathbox_Types.mkColor0), 
    blending: Mathbox_Field.Val.create(Mathbox_Types.mkBlending0), 
    zWrite: Mathbox_Field.Val.create(true), 
    zTest: Mathbox_Field.Val.create(true), 
    zIndex: Mathbox_Field.Val.create(Mathbox_Types.mkRound0), 
    zBias: Mathbox_Field.Val.create(0.0), 
    zOrder: Data_Maybe.Nothing.value, 
    width: Mathbox_Field.Val.create(2.0), 
    depth: Mathbox_Field.Val.create(1.0), 
    join: Mathbox_Field.Val.create(Mathbox_Types.mkJoin0), 
    stroke: Mathbox_Field.Val.create(Mathbox_Types.mkStroke0), 
    proximity: Data_Maybe.Nothing.value, 
    closed: Mathbox_Field.Val.create(false), 
    normal: Mathbox_Field.Val.create(Mathbox_Types.mkVec3(0)(0)(1)), 
    size: Mathbox_Field.Val.create(10.0), 
    epsilon: Mathbox_Field.Val.create(1.0e-3), 
    points: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    colors: Data_Maybe.Nothing.value
};
module.exports = {
    mkTicks: mkTicks, 
    ticksToJs: ticksToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],169:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var vectorToJs = function (v) {
    return {
        id: Data_Nullable.toNullable(v.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(v.classes), 
        visible: v.visible, 
        opacity: v.opacity, 
        color: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.colorToJs)(v.color), 
        blending: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.blendingToJs)(v.blending), 
        zWrite: v.zWrite, 
        zTest: v.zTest, 
        zIndex: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.roundToJs)(v.zIndex), 
        zBias: v.zBias, 
        zOrder: Data_Nullable.toNullable(v.zOrder), 
        width: v.width, 
        depth: v.depth, 
        join: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.joinToJs)(v.join), 
        stroke: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.strokeToJs)(v.stroke), 
        proximity: Data_Nullable.toNullable(v.proximity), 
        closed: v.closed, 
        size: v.size, 
        start: v.start, 
        end: v.end, 
        points: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(v.points), 
        colors: Mathbox_Field.maybeToNullable(Mathbox_Types.selectToJs)(v.colors)
    };
};
var mkVector = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    visible: Mathbox_Field.Val.create(true), 
    opacity: Mathbox_Field.Val.create(1.0), 
    color: Mathbox_Field.Val.create(Mathbox_Types.mkColor0), 
    blending: Mathbox_Field.Val.create(Mathbox_Types.mkBlending0), 
    zWrite: Mathbox_Field.Val.create(true), 
    zTest: Mathbox_Field.Val.create(true), 
    zIndex: Mathbox_Field.Val.create(Mathbox_Types.mkRound0), 
    zBias: Mathbox_Field.Val.create(0.0), 
    zOrder: Data_Maybe.Nothing.value, 
    width: Mathbox_Field.Val.create(2.0), 
    depth: Mathbox_Field.Val.create(1.0), 
    join: Mathbox_Field.Val.create(Mathbox_Types.mkJoin0), 
    stroke: Mathbox_Field.Val.create(Mathbox_Types.mkStroke0), 
    proximity: Data_Maybe.Nothing.value, 
    closed: Mathbox_Field.Val.create(false), 
    size: Mathbox_Field.Val.create(3.0), 
    start: Mathbox_Field.Val.create(false), 
    end: Mathbox_Field.Val.create(false), 
    points: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    colors: Data_Maybe.Nothing.value
};
module.exports = {
    mkVector: mkVector, 
    vectorToJs: vectorToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],170:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkClamp = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    source: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0)
};
var clampToJs = function (c) {
    return {
        id: Data_Nullable.toNullable(c.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(c.classes), 
        source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(c.source)
    };
};
module.exports = {
    clampToJs: clampToJs, 
    mkClamp: mkClamp
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],171:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkGrow = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    source: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    scale: Mathbox_Field.Val.create(1.0), 
    items: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    depth: Data_Maybe.Nothing.value
};
var growToJs = function (g) {
    return {
        id: Data_Nullable.toNullable(g.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(g.classes), 
        source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(g.source), 
        scale: g.scale, 
        items: Mathbox_Field.maybeToNullable(Mathbox_Types.anchorToJs)(g.items), 
        width: Mathbox_Field.maybeToNullable(Mathbox_Types.anchorToJs)(g.width), 
        height: Mathbox_Field.maybeToNullable(Mathbox_Types.anchorToJs)(g.height), 
        depth: Mathbox_Field.maybeToNullable(Mathbox_Types.anchorToJs)(g.depth)
    };
};
module.exports = {
    growToJs: growToJs, 
    mkGrow: mkGrow
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],172:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkJoin = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    source: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    order: Mathbox_Field.Val.create(Mathbox_Types.mkTranspose(Mathbox_Types.wxyz)), 
    axis: Data_Maybe.Nothing.value, 
    overlap: Mathbox_Field.Val.create(0)
};
var joinToJs = function (j) {
    return {
        id: Data_Nullable.toNullable(j.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(j.classes), 
        source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(j.source), 
        order: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.transposeToJs)(j.order), 
        axis: Mathbox_Field.maybeToNullable(Mathbox_Types.axisToJs)(j.axis), 
        overlap: j.overlap
    };
};
module.exports = {
    joinToJs: joinToJs, 
    mkJoin: mkJoin
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],173:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkLerp = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    source: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    size: Mathbox_Field.Val.create(Mathbox_Types.MappingAbsolute.value), 
    items: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    depth: Data_Maybe.Nothing.value, 
    centeredX: Mathbox_Field.Val.create(false), 
    paddingX: Mathbox_Field.Val.create(0.0), 
    centeredY: Mathbox_Field.Val.create(false), 
    paddingY: Mathbox_Field.Val.create(0.0), 
    centeredZ: Mathbox_Field.Val.create(false), 
    paddingZ: Mathbox_Field.Val.create(0.0), 
    centeredW: Mathbox_Field.Val.create(false), 
    paddingW: Mathbox_Field.Val.create(0.0)
};
var lerpToJs = function (l) {
    return {
        id: Data_Nullable.toNullable(l.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(l.classes), 
        source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(l.source), 
        size: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.mappingToJs)(l.size), 
        items: Data_Nullable.toNullable(l.items), 
        width: Data_Nullable.toNullable(l.width), 
        height: Data_Nullable.toNullable(l.height), 
        depth: Data_Nullable.toNullable(l.depth), 
        centeredX: l.centeredX, 
        paddingX: l.paddingX, 
        centeredY: l.centeredY, 
        paddingY: l.paddingY, 
        centeredZ: l.centeredZ, 
        paddingZ: l.paddingZ, 
        centeredW: l.centeredW, 
        paddingW: l.paddingW
    };
};
module.exports = {
    lerpToJs: lerpToJs, 
    mkLerp: mkLerp
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],174:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkMemo = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    source: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    minFilter: Mathbox_Field.Val.create(Mathbox_Types.FilterNearest.value), 
    magFilter: Mathbox_Field.Val.create(Mathbox_Types.FilterNearest.value), 
    type: Mathbox_Field.Val.create(Mathbox_Types.TypeFloat.value)
};
var memoToJs = function (m) {
    return {
        id: Data_Nullable.toNullable(m.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(m.classes), 
        source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(m.source), 
        minFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(m.minFilter), 
        magFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(m.magFilter), 
        type: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.typeToJs)(m.type)
    };
};
module.exports = {
    memoToJs: memoToJs, 
    mkMemo: mkMemo
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],175:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var operatorToJs = function (o) {
    return {
        id: Data_Nullable.toNullable(o.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(o.classes), 
        source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(o.source)
    };
};
var mkOperator = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    source: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0)
};
module.exports = {
    mkOperator: mkOperator, 
    operatorToJs: operatorToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],176:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var readbackToJs = function (r) {
    return {
        id: Data_Nullable.toNullable(r.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(r.classes), 
        source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(r.source), 
        type: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.typeToJs)(r.type), 
        expr: Data_Nullable.toNullable(r.expr), 
        data: r.data, 
        channels: r.channels, 
        items: Data_Nullable.toNullable(r.items), 
        width: Data_Nullable.toNullable(r.width), 
        height: Data_Nullable.toNullable(r.height), 
        depth: Data_Nullable.toNullable(r.depth), 
        active: r.active
    };
};
var mkReadback = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    source: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    type: Mathbox_Field.Val.create(Mathbox_Types.TypeFloat.value), 
    expr: Data_Maybe.Nothing.value, 
    data: Mathbox_Field.Val.create(Mathbox_Types.mkData0), 
    channels: Mathbox_Field.Val.create(4), 
    items: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    depth: Data_Maybe.Nothing.value, 
    active: Mathbox_Field.Val.create(true)
};
module.exports = {
    mkReadback: mkReadback, 
    readbackToJs: readbackToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],177:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var repeatToJs = function (r) {
    return {
        id: Data_Nullable.toNullable(r.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(r.classes), 
        source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(r.source), 
        items: r.items, 
        width: r.width, 
        height: r.height, 
        depth: r.depth
    };
};
var mkRepeat = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    source: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    items: Mathbox_Field.Val.create(1.0), 
    width: Mathbox_Field.Val.create(1.0), 
    height: Mathbox_Field.Val.create(1.0), 
    depth: Mathbox_Field.Val.create(1.0)
};
module.exports = {
    mkRepeat: mkRepeat, 
    repeatToJs: repeatToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],178:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var resampleToJs = function (r) {
    return {
        id: Data_Nullable.toNullable(r.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(r.classes), 
        source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(r.source), 
        indices: r.indices, 
        channels: r.channels, 
        sample: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.mappingToJs)(r.sample), 
        size: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.mappingToJs)(r.size), 
        items: Data_Nullable.toNullable(r.items), 
        width: Data_Nullable.toNullable(r.width), 
        height: Data_Nullable.toNullable(r.height), 
        depth: Data_Nullable.toNullable(r.depth), 
        centeredX: r.centeredX, 
        paddingX: r.paddingX, 
        centeredY: r.centeredY, 
        paddingY: r.paddingY, 
        centeredZ: r.centeredZ, 
        paddingZ: r.paddingZ, 
        centeredW: r.centeredW, 
        paddingW: r.paddingW, 
        shader: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(r.shader)
    };
};
var mkResample = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    source: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    indices: Mathbox_Field.Val.create(4.0), 
    channels: Mathbox_Field.Val.create(4.0), 
    sample: Mathbox_Field.Val.create(Mathbox_Types.mkMapping0), 
    size: Mathbox_Field.Val.create(Mathbox_Types.MappingAbsolute.value), 
    items: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    depth: Data_Maybe.Nothing.value, 
    centeredX: Mathbox_Field.Val.create(false), 
    paddingX: Mathbox_Field.Val.create(0.0), 
    centeredY: Mathbox_Field.Val.create(false), 
    paddingY: Mathbox_Field.Val.create(0.0), 
    centeredZ: Mathbox_Field.Val.create(false), 
    paddingZ: Mathbox_Field.Val.create(0.0), 
    centeredW: Mathbox_Field.Val.create(false), 
    paddingW: Mathbox_Field.Val.create(0.0), 
    shader: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0)
};
module.exports = {
    mkResample: mkResample, 
    resampleToJs: resampleToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],179:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var sliceToJs = function (s) {
    return {
        id: Data_Nullable.toNullable(s.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
        source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(s.source), 
        items: Data_Nullable.toNullable(s.items), 
        width: Data_Nullable.toNullable(s.width), 
        height: Data_Nullable.toNullable(s.height), 
        depth: Data_Nullable.toNullable(s.depth)
    };
};
var mkSlice = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    source: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    items: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    depth: Data_Maybe.Nothing.value
};
module.exports = {
    mkSlice: mkSlice, 
    sliceToJs: sliceToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],180:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var splitToJs = function (s) {
    return {
        id: Data_Nullable.toNullable(s.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
        source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(s.source), 
        order: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.transposeToJs)(s.order), 
        axis: Mathbox_Field.maybeToNullable(Mathbox_Types.axisToJs)(s.axis), 
        length: s.length, 
        overlap: s.overlap
    };
};
var mkSplit = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    source: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    order: Mathbox_Field.Val.create(Mathbox_Types.mkTranspose(Mathbox_Types.wxyz)), 
    axis: Data_Maybe.Nothing.value, 
    length: Mathbox_Field.Val.create(1), 
    overlap: Mathbox_Field.Val.create(0)
};
module.exports = {
    mkSplit: mkSplit, 
    splitToJs: splitToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],181:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var spreadToJs = function (s) {
    return {
        id: Data_Nullable.toNullable(s.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
        source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(s.source), 
        unit: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.mappingToJs)(s.unit), 
        items: Data_Nullable.toNullable(s.items), 
        width: Data_Nullable.toNullable(s.width), 
        height: Data_Nullable.toNullable(s.height), 
        depth: Data_Nullable.toNullable(s.depth), 
        alignItems: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.anchorToJs)(s.alignItems), 
        alignWidth: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.anchorToJs)(s.alignWidth), 
        alignHeight: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.anchorToJs)(s.alignHeight), 
        alignDepth: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.anchorToJs)(s.alignDepth)
    };
};
var mkSpread = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    source: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    unit: Mathbox_Field.Val.create(Mathbox_Types.mkMapping0), 
    items: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    depth: Data_Maybe.Nothing.value, 
    alignItems: Mathbox_Field.Val.create(Mathbox_Types.mkAnchor0), 
    alignWidth: Mathbox_Field.Val.create(Mathbox_Types.mkAnchor0), 
    alignHeight: Mathbox_Field.Val.create(Mathbox_Types.mkAnchor0), 
    alignDepth: Mathbox_Field.Val.create(Mathbox_Types.mkAnchor0)
};
module.exports = {
    mkSpread: mkSpread, 
    spreadToJs: spreadToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],182:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var subdivideToJs = function (s) {
    return {
        id: Data_Nullable.toNullable(s.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
        source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(s.source), 
        items: Data_Nullable.toNullable(s.items), 
        width: Data_Nullable.toNullable(s.width), 
        height: Data_Nullable.toNullable(s.height), 
        depth: Data_Nullable.toNullable(s.depth), 
        bevel: s.bevel, 
        lerp: s.lerp
    };
};
var mkSubdivide = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    source: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    items: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    depth: Data_Maybe.Nothing.value, 
    bevel: Mathbox_Field.Val.create(1.0), 
    lerp: Mathbox_Field.Val.create(true)
};
module.exports = {
    mkSubdivide: mkSubdivide, 
    subdivideToJs: subdivideToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],183:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var swizzleToJs = function (s) {
    return {
        id: Data_Nullable.toNullable(s.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
        source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(s.source), 
        order: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.swizzleToJs)(s.order)
    };
};
var mkSwizzle = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    source: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    order: Mathbox_Field.Val.create(Mathbox_Types.mkSwizzle0)
};
module.exports = {
    mkSwizzle: mkSwizzle, 
    swizzleToJs: swizzleToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],184:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var transposeToJs = function (t) {
    return {
        id: Data_Nullable.toNullable(t.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(t.classes), 
        source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(t.source), 
        order: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.transposeToJs)(t.order)
    };
};
var mkTranspose = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    source: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    order: Mathbox_Field.Val.create(Mathbox_Types.mkTranspose0)
};
module.exports = {
    mkTranspose: mkTranspose, 
    transposeToJs: transposeToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],185:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Data_Ring = require("../Data.Ring");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkDOM = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    visible: Mathbox_Field.Val.create(true), 
    opacity: Mathbox_Field.Val.create(1.0), 
    zIndex: Mathbox_Field.Val.create(Mathbox_Types.mkRound(0)), 
    points: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    html: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    size: Mathbox_Field.Val.create(16.0), 
    outline: Mathbox_Field.Val.create(2.0), 
    zoom: Mathbox_Field.Val.create(1.0), 
    color: Data_Maybe.Nothing.value, 
    attributes: Data_Maybe.Nothing.value, 
    pointerEvents: Mathbox_Field.Val.create(false), 
    offset: Mathbox_Field.Val.create(Mathbox_Types.mkVec2(0)(-20 | 0)), 
    snap: Mathbox_Field.Val.create(false), 
    depth: Mathbox_Field.Val.create(0.0)
};
var dOMToJs = function (d) {
    return {
        id: Data_Nullable.toNullable(d.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(d.classes), 
        visible: d.visible, 
        opacity: d.opacity, 
        zIndex: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.roundToJs)(d.zIndex), 
        points: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(d.points), 
        html: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(d.html), 
        size: d.size, 
        outline: d.outline, 
        zoom: d.zoom, 
        color: Mathbox_Field.maybeToNullable(Mathbox_Types.colorToJs)(d.color), 
        attributes: Data_Nullable.toNullable(d.attributes), 
        pointerEvents: d.pointerEvents, 
        offset: d.offset, 
        snap: d.snap, 
        depth: d.depth
    };
};
module.exports = {
    dOMToJs: dOMToJs, 
    mkDOM: mkDOM
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Data.Ring":110,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],186:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkHTML = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    items: Mathbox_Field.Val.create(1), 
    fps: Data_Maybe.Nothing.value, 
    hurry: Mathbox_Field.Val.create(5), 
    limit: Mathbox_Field.Val.create(60), 
    realtime: Mathbox_Field.Val.create(false), 
    observe: Mathbox_Field.Val.create(false), 
    aligned: Mathbox_Field.Val.create(false), 
    data: Data_Maybe.Nothing.value, 
    expr: Data_Maybe.Nothing.value, 
    bind: Data_Maybe.Nothing.value, 
    live: Mathbox_Field.Val.create(true), 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    depth: Data_Maybe.Nothing.value, 
    bufferWidth: Mathbox_Field.Val.create(1), 
    bufferHeight: Mathbox_Field.Val.create(1), 
    bufferDepth: Mathbox_Field.Val.create(1)
};
var hTMLToJs = function (h) {
    return {
        id: Data_Nullable.toNullable(h.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(h.classes), 
        items: h.items, 
        fps: Data_Nullable.toNullable(h.fps), 
        hurry: h.hurry, 
        limit: h.limit, 
        realtime: h.realtime, 
        observe: h.observe, 
        aligned: h.aligned, 
        data: Data_Nullable.toNullable(h.data), 
        expr: Data_Nullable.toNullable(h.expr), 
        bind: Data_Nullable.toNullable(h.bind), 
        live: h.live, 
        width: Data_Nullable.toNullable(h.width), 
        height: Data_Nullable.toNullable(h.height), 
        depth: Data_Nullable.toNullable(h.depth), 
        bufferWidth: h.bufferWidth, 
        bufferHeight: h.bufferHeight, 
        bufferDepth: h.bufferDepth
    };
};
module.exports = {
    hTMLToJs: hTMLToJs, 
    mkHTML: mkHTML
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],187:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var moveToJs = function (m) {
    return {
        id: Data_Nullable.toNullable(m.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(m.classes), 
        stagger: m.stagger, 
        enter: Data_Nullable.toNullable(m.enter), 
        exit: Data_Nullable.toNullable(m.exit), 
        delay: m.delay, 
        delayEnter: Data_Nullable.toNullable(m.delayEnter), 
        delayExit: Data_Nullable.toNullable(m.delayExit), 
        duration: m.duration, 
        durationEnter: Data_Nullable.toNullable(m.durationEnter), 
        durationExit: Data_Nullable.toNullable(m.durationExit), 
        pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(m.pass), 
        from: m.from, 
        to: m.to
    };
};
var mkMove = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    stagger: Mathbox_Field.Val.create(Mathbox_Types.mkVec40), 
    enter: Data_Maybe.Nothing.value, 
    exit: Data_Maybe.Nothing.value, 
    delay: Mathbox_Field.Val.create(0.0), 
    delayEnter: Data_Maybe.Nothing.value, 
    delayExit: Data_Maybe.Nothing.value, 
    duration: Mathbox_Field.Val.create(0.3), 
    durationEnter: Data_Maybe.Nothing.value, 
    durationExit: Data_Maybe.Nothing.value, 
    pass: Mathbox_Field.Val.create(Mathbox_Types.mkVertexPass0), 
    from: Mathbox_Field.Val.create(Mathbox_Types.mkVec40), 
    to: Mathbox_Field.Val.create(Mathbox_Types.mkVec40)
};
module.exports = {
    mkMove: mkMove, 
    moveToJs: moveToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],188:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var playToJs = function (p) {
    return {
        id: Data_Nullable.toNullable(p.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(p.classes), 
        target: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(p.target), 
        script: p.script, 
        ease: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.easeToJs)(p.ease), 
        trigger: Data_Nullable.toNullable(p.trigger), 
        delay: p.delay, 
        pace: p.pace, 
        speed: p.speed, 
        from: p.from, 
        to: p.to, 
        realtime: p.realtime, 
        loop: p.loop
    };
};
var mkPlay = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    target: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    script: Mathbox_Field.Val.create(Mathbox_Types.mkObject0), 
    ease: Mathbox_Field.Val.create(Mathbox_Types.EaseCosine.value), 
    trigger: Data_Maybe.Nothing.value, 
    delay: Mathbox_Field.Val.create(0.0), 
    pace: Mathbox_Field.Val.create(1.0), 
    speed: Mathbox_Field.Val.create(1.0), 
    from: Mathbox_Field.Val.create(0.0), 
    to: Mathbox_Field.Val.create(Mathbox_Types.infinity), 
    realtime: Mathbox_Field.Val.create(false), 
    loop: Mathbox_Field.Val.create(false)
};
module.exports = {
    mkPlay: mkPlay, 
    playToJs: playToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],189:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var presentToJs = function (p) {
    return {
        id: Data_Nullable.toNullable(p.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(p.classes), 
        index: p.index, 
        directed: p.directed, 
        length: p.length
    };
};
var mkPresent = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    index: Mathbox_Field.Val.create(1), 
    directed: Mathbox_Field.Val.create(true), 
    length: Mathbox_Field.Val.create(0.0)
};
module.exports = {
    mkPresent: mkPresent, 
    presentToJs: presentToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],190:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var revealToJs = function (r) {
    return {
        id: Data_Nullable.toNullable(r.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(r.classes), 
        stagger: r.stagger, 
        enter: Data_Nullable.toNullable(r.enter), 
        exit: Data_Nullable.toNullable(r.exit), 
        delay: r.delay, 
        delayEnter: Data_Nullable.toNullable(r.delayEnter), 
        delayExit: Data_Nullable.toNullable(r.delayExit), 
        duration: r.duration, 
        durationEnter: Data_Nullable.toNullable(r.durationEnter), 
        durationExit: Data_Nullable.toNullable(r.durationExit)
    };
};
var mkReveal = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    stagger: Mathbox_Field.Val.create(Mathbox_Types.mkVec40), 
    enter: Data_Maybe.Nothing.value, 
    exit: Data_Maybe.Nothing.value, 
    delay: Mathbox_Field.Val.create(0.0), 
    delayEnter: Data_Maybe.Nothing.value, 
    delayExit: Data_Maybe.Nothing.value, 
    duration: Mathbox_Field.Val.create(0.3), 
    durationEnter: Data_Maybe.Nothing.value, 
    durationExit: Data_Maybe.Nothing.value
};
module.exports = {
    mkReveal: mkReveal, 
    revealToJs: revealToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],191:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var slideToJs = function (s) {
    return {
        id: Data_Nullable.toNullable(s.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
        order: Data_Nullable.toNullable(s.order), 
        steps: s.steps, 
        early: s.early, 
        late: s.late, 
        from: Data_Nullable.toNullable(s.from), 
        to: Data_Nullable.toNullable(s.to)
    };
};
var mkSlide = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    order: Data_Maybe.Nothing.value, 
    steps: Mathbox_Field.Val.create(1.0), 
    early: Mathbox_Field.Val.create(0), 
    late: Mathbox_Field.Val.create(0), 
    from: Data_Maybe.Nothing.value, 
    to: Data_Maybe.Nothing.value
};
module.exports = {
    mkSlide: mkSlide, 
    slideToJs: slideToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],192:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var stepToJs = function (s) {
    return {
        id: Data_Nullable.toNullable(s.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
        target: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(s.target), 
        script: s.script, 
        ease: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.easeToJs)(s.ease), 
        playback: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.easeToJs)(s.playback), 
        stops: Data_Nullable.toNullable(s.stops), 
        delay: s.delay, 
        duration: s.duration, 
        pace: s.pace, 
        speed: s.speed, 
        rewind: s.rewind, 
        skip: s.skip, 
        realtime: s.realtime, 
        trigger: Data_Nullable.toNullable(s.trigger)
    };
};
var mkStep = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    target: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    script: Mathbox_Field.Val.create(Mathbox_Types.mkObject0), 
    ease: Mathbox_Field.Val.create(Mathbox_Types.EaseCosine.value), 
    playback: Mathbox_Field.Val.create(Mathbox_Types.EaseLinear.value), 
    stops: Data_Maybe.Nothing.value, 
    delay: Mathbox_Field.Val.create(0.0), 
    duration: Mathbox_Field.Val.create(0.3), 
    pace: Mathbox_Field.Val.create(0.0), 
    speed: Mathbox_Field.Val.create(1.0), 
    rewind: Mathbox_Field.Val.create(2.0), 
    skip: Mathbox_Field.Val.create(true), 
    realtime: Mathbox_Field.Val.create(false), 
    trigger: Data_Maybe.Nothing.value
};
module.exports = {
    mkStep: mkStep, 
    stepToJs: stepToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],193:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var trackToJs = function (t) {
    return {
        id: Data_Nullable.toNullable(t.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(t.classes), 
        target: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(t.target), 
        script: t.script, 
        ease: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.easeToJs)(t.ease), 
        seek: Data_Nullable.toNullable(t.seek)
    };
};
var mkTrack = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    target: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    script: Mathbox_Field.Val.create(Mathbox_Types.mkObject0), 
    ease: Mathbox_Field.Val.create(Mathbox_Types.EaseCosine.value), 
    seek: Data_Maybe.Nothing.value
};
module.exports = {
    mkTrack: mkTrack, 
    trackToJs: trackToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],194:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var transitionToJs = function (t) {
    return {
        id: Data_Nullable.toNullable(t.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(t.classes), 
        stagger: t.stagger, 
        enter: Data_Nullable.toNullable(t.enter), 
        exit: Data_Nullable.toNullable(t.exit), 
        delay: t.delay, 
        delayEnter: Data_Nullable.toNullable(t.delayEnter), 
        delayExit: Data_Nullable.toNullable(t.delayExit), 
        duration: t.duration, 
        durationEnter: Data_Nullable.toNullable(t.durationEnter), 
        durationExit: Data_Nullable.toNullable(t.durationExit)
    };
};
var mkTransition = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    stagger: Mathbox_Field.Val.create(Mathbox_Types.mkVec40), 
    enter: Data_Maybe.Nothing.value, 
    exit: Data_Maybe.Nothing.value, 
    delay: Mathbox_Field.Val.create(0.0), 
    delayEnter: Data_Maybe.Nothing.value, 
    delayExit: Data_Maybe.Nothing.value, 
    duration: Mathbox_Field.Val.create(0.3), 
    durationEnter: Data_Maybe.Nothing.value, 
    durationExit: Data_Maybe.Nothing.value
};
module.exports = {
    mkTransition: mkTransition, 
    transitionToJs: transitionToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],195:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkCompose = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    visible: Mathbox_Field.Val.create(true), 
    source: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    opacity: Mathbox_Field.Val.create(1.0), 
    color: Mathbox_Field.Val.create(Mathbox_Types.mkColor0), 
    blending: Mathbox_Field.Val.create(Mathbox_Types.mkBlending0), 
    zWrite: Mathbox_Field.Val.create(true), 
    zTest: Mathbox_Field.Val.create(true), 
    zIndex: Mathbox_Field.Val.create(Mathbox_Types.mkRound0), 
    zBias: Mathbox_Field.Val.create(0.0), 
    zOrder: Data_Maybe.Nothing.value, 
    alpha: Mathbox_Field.Val.create(false)
};
var composeToJs = function (c) {
    return {
        id: Data_Nullable.toNullable(c.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(c.classes), 
        visible: c.visible, 
        source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(c.source), 
        opacity: c.opacity, 
        color: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.colorToJs)(c.color), 
        blending: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.blendingToJs)(c.blending), 
        zWrite: c.zWrite, 
        zTest: c.zTest, 
        zIndex: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.roundToJs)(c.zIndex), 
        zBias: c.zBias, 
        zOrder: Data_Nullable.toNullable(c.zOrder), 
        alpha: c.alpha
    };
};
module.exports = {
    composeToJs: composeToJs, 
    mkCompose: mkCompose
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],196:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var rTTToJs = function (r) {
    return {
        id: Data_Nullable.toNullable(r.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(r.classes), 
        speed: r.speed, 
        camera: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(r.camera), 
        pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(r.pass), 
        minFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(r.minFilter), 
        magFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(r.magFilter), 
        type: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.typeToJs)(r.type), 
        size: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.mappingToJs)(r.size), 
        width: Data_Nullable.toNullable(r.width), 
        height: Data_Nullable.toNullable(r.height), 
        history: r.history
    };
};
var mkRTT = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    speed: Mathbox_Field.Val.create(1.0), 
    camera: Mathbox_Field.Val.create(Mathbox_Types.mkSelect([ Mathbox_Types.camera ])), 
    pass: Mathbox_Field.Val.create(Mathbox_Types.mkVertexPass0), 
    minFilter: Mathbox_Field.Val.create(Mathbox_Types.FilterNearest.value), 
    magFilter: Mathbox_Field.Val.create(Mathbox_Types.FilterNearest.value), 
    type: Mathbox_Field.Val.create(Mathbox_Types.TypeFloat.value), 
    size: Mathbox_Field.Val.create(Mathbox_Types.MappingAbsolute.value), 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    history: Mathbox_Field.Val.create(1)
};
module.exports = {
    mkRTT: mkRTT, 
    rTTToJs: rTTToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],197:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var shaderToJs = function (s) {
    return {
        id: Data_Nullable.toNullable(s.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
        sources: Mathbox_Field.maybeToNullable(Mathbox_Types.selectToJs)(s.sources), 
        language: s.language, 
        code: s.code, 
        uniforms: Data_Nullable.toNullable(s.uniforms)
    };
};
var mkShader = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    sources: Data_Maybe.Nothing.value, 
    language: Mathbox_Field.Val.create(Mathbox_Types.mkString(Mathbox_Types.glsl)), 
    code: Mathbox_Field.Val.create(Mathbox_Types.mkString0), 
    uniforms: Data_Maybe.Nothing.value
};
module.exports = {
    mkShader: mkShader, 
    shaderToJs: shaderToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],198:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkFormat = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    source: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    minFilter: Mathbox_Field.Val.create(Mathbox_Types.FilterNearest.value), 
    magFilter: Mathbox_Field.Val.create(Mathbox_Types.FilterNearest.value), 
    type: Mathbox_Field.Val.create(Mathbox_Types.TypeFloat.value), 
    digits: Data_Maybe.Nothing.value, 
    data: Data_Maybe.Nothing.value, 
    expr: Data_Maybe.Nothing.value, 
    live: Mathbox_Field.Val.create(true), 
    font: Mathbox_Field.Val.create(Mathbox_Types.mkFont(Mathbox_Types.sansSerif)), 
    style: Mathbox_Field.Val.create(Mathbox_Types.mkString0), 
    variant: Mathbox_Field.Val.create(Mathbox_Types.mkString0), 
    weight: Mathbox_Field.Val.create(Mathbox_Types.mkString0), 
    detail: Mathbox_Field.Val.create(24.0), 
    sdf: Mathbox_Field.Val.create(5.0)
};
var formatToJs = function (f) {
    return {
        id: Data_Nullable.toNullable(f.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(f.classes), 
        source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(f.source), 
        minFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(f.minFilter), 
        magFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(f.magFilter), 
        type: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.typeToJs)(f.type), 
        digits: Data_Nullable.toNullable(f.digits), 
        data: Data_Nullable.toNullable(f.data), 
        expr: Data_Nullable.toNullable(f.expr), 
        live: f.live, 
        font: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.fontToJs)(f.font), 
        style: f.style, 
        variant: f.variant, 
        weight: f.weight, 
        detail: f.detail, 
        sdf: f.sdf
    };
};
module.exports = {
    formatToJs: formatToJs, 
    mkFormat: mkFormat
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],199:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Data_Ring = require("../Data.Ring");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkLabel = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    visible: Mathbox_Field.Val.create(true), 
    opacity: Mathbox_Field.Val.create(1.0), 
    color: Mathbox_Field.Val.create(Mathbox_Types.mkColor0), 
    blending: Mathbox_Field.Val.create(Mathbox_Types.mkBlending0), 
    zWrite: Mathbox_Field.Val.create(true), 
    zTest: Mathbox_Field.Val.create(true), 
    zIndex: Mathbox_Field.Val.create(Mathbox_Types.mkRound0), 
    zBias: Mathbox_Field.Val.create(0.0), 
    zOrder: Data_Maybe.Nothing.value, 
    text: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    size: Mathbox_Field.Val.create(16.0), 
    outline: Mathbox_Field.Val.create(2.0), 
    expand: Mathbox_Field.Val.create(0.0), 
    background: Mathbox_Field.Val.create(Mathbox_Types.mkColor(1)(1)(1)), 
    offset: Mathbox_Field.Val.create(Mathbox_Types.mkVec2(0)(-20 | 0)), 
    snap: Mathbox_Field.Val.create(false), 
    depth: Mathbox_Field.Val.create(0.0), 
    points: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    colors: Data_Maybe.Nothing.value
};
var labelToJs = function (l) {
    return {
        id: Data_Nullable.toNullable(l.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(l.classes), 
        visible: l.visible, 
        opacity: l.opacity, 
        color: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.colorToJs)(l.color), 
        blending: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.blendingToJs)(l.blending), 
        zWrite: l.zWrite, 
        zTest: l.zTest, 
        zIndex: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.roundToJs)(l.zIndex), 
        zBias: l.zBias, 
        zOrder: Data_Nullable.toNullable(l.zOrder), 
        text: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(l.text), 
        size: l.size, 
        outline: l.outline, 
        expand: l.expand, 
        background: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.colorToJs)(l.background), 
        offset: l.offset, 
        snap: l.snap, 
        depth: l.depth, 
        points: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(l.points), 
        colors: Mathbox_Field.maybeToNullable(Mathbox_Types.selectToJs)(l.colors)
    };
};
module.exports = {
    labelToJs: labelToJs, 
    mkLabel: mkLabel
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Data.Ring":110,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],200:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var retextToJs = function (r) {
    return {
        id: Data_Nullable.toNullable(r.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(r.classes), 
        source: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(r.source), 
        indices: r.indices, 
        channels: r.channels, 
        sample: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.mappingToJs)(r.sample), 
        size: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.mappingToJs)(r.size), 
        items: Data_Nullable.toNullable(r.items), 
        width: Data_Nullable.toNullable(r.width), 
        height: Data_Nullable.toNullable(r.height), 
        depth: Data_Nullable.toNullable(r.depth), 
        centeredX: r.centeredX, 
        paddingX: r.paddingX, 
        centeredY: r.centeredY, 
        paddingY: r.paddingY, 
        centeredZ: r.centeredZ, 
        paddingZ: r.paddingZ, 
        centeredW: r.centeredW, 
        paddingW: r.paddingW, 
        shader: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(r.shader)
    };
};
var mkRetext = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    source: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    indices: Mathbox_Field.Val.create(4.0), 
    channels: Mathbox_Field.Val.create(4.0), 
    sample: Mathbox_Field.Val.create(Mathbox_Types.mkMapping0), 
    size: Mathbox_Field.Val.create(Mathbox_Types.MappingAbsolute.value), 
    items: Data_Maybe.Nothing.value, 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    depth: Data_Maybe.Nothing.value, 
    centeredX: Mathbox_Field.Val.create(false), 
    paddingX: Mathbox_Field.Val.create(0.0), 
    centeredY: Mathbox_Field.Val.create(false), 
    paddingY: Mathbox_Field.Val.create(0.0), 
    centeredZ: Mathbox_Field.Val.create(false), 
    paddingZ: Mathbox_Field.Val.create(0.0), 
    centeredW: Mathbox_Field.Val.create(false), 
    paddingW: Mathbox_Field.Val.create(0.0), 
    shader: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0)
};
module.exports = {
    mkRetext: mkRetext, 
    retextToJs: retextToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],201:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var textToJs = function (t) {
    return {
        id: Data_Nullable.toNullable(t.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(t.classes), 
        items: t.items, 
        fps: Data_Nullable.toNullable(t.fps), 
        hurry: t.hurry, 
        limit: t.limit, 
        realtime: t.realtime, 
        observe: t.observe, 
        aligned: t.aligned, 
        data: Data_Nullable.toNullable(t.data), 
        expr: Data_Nullable.toNullable(t.expr), 
        bind: Data_Nullable.toNullable(t.bind), 
        live: t.live, 
        minFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(t.minFilter), 
        magFilter: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.filterToJs)(t.magFilter), 
        type: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.typeToJs)(t.type), 
        width: Data_Nullable.toNullable(t.width), 
        height: Data_Nullable.toNullable(t.height), 
        depth: Data_Nullable.toNullable(t.depth), 
        bufferWidth: t.bufferWidth, 
        bufferHeight: t.bufferHeight, 
        bufferDepth: t.bufferDepth, 
        font: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.fontToJs)(t.font), 
        style: t.style, 
        variant: t.variant, 
        weight: t.weight, 
        detail: t.detail, 
        sdf: t.sdf
    };
};
var mkText = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    items: Mathbox_Field.Val.create(1), 
    fps: Data_Maybe.Nothing.value, 
    hurry: Mathbox_Field.Val.create(5), 
    limit: Mathbox_Field.Val.create(60), 
    realtime: Mathbox_Field.Val.create(false), 
    observe: Mathbox_Field.Val.create(false), 
    aligned: Mathbox_Field.Val.create(false), 
    data: Data_Maybe.Nothing.value, 
    expr: Data_Maybe.Nothing.value, 
    bind: Data_Maybe.Nothing.value, 
    live: Mathbox_Field.Val.create(true), 
    minFilter: Mathbox_Field.Val.create(Mathbox_Types.FilterNearest.value), 
    magFilter: Mathbox_Field.Val.create(Mathbox_Types.FilterNearest.value), 
    type: Mathbox_Field.Val.create(Mathbox_Types.TypeFloat.value), 
    width: Data_Maybe.Nothing.value, 
    height: Data_Maybe.Nothing.value, 
    depth: Data_Maybe.Nothing.value, 
    bufferWidth: Mathbox_Field.Val.create(1), 
    bufferHeight: Mathbox_Field.Val.create(1), 
    bufferDepth: Mathbox_Field.Val.create(1), 
    font: Mathbox_Field.Val.create(Mathbox_Types.mkFont(Mathbox_Types.sansSerif)), 
    style: Mathbox_Field.Val.create(Mathbox_Types.mkString0), 
    variant: Mathbox_Field.Val.create(Mathbox_Types.mkString0), 
    weight: Mathbox_Field.Val.create(Mathbox_Types.mkString0), 
    detail: Mathbox_Field.Val.create(24.0), 
    sdf: Mathbox_Field.Val.create(5.0)
};
module.exports = {
    mkText: mkText, 
    textToJs: textToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],202:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkClock = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    seek: Data_Maybe.Nothing.value, 
    delay: Mathbox_Field.Val.create(0.0), 
    pace: Mathbox_Field.Val.create(1.0), 
    speed: Mathbox_Field.Val.create(1.0), 
    from: Mathbox_Field.Val.create(0.0), 
    to: Mathbox_Field.Val.create(Mathbox_Types.infinity), 
    realtime: Mathbox_Field.Val.create(false), 
    loop: Mathbox_Field.Val.create(false)
};
var clockToJs = function (c) {
    return {
        id: Data_Nullable.toNullable(c.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(c.classes), 
        seek: Data_Nullable.toNullable(c.seek), 
        delay: c.delay, 
        pace: c.pace, 
        speed: c.speed, 
        from: c.from, 
        to: c.to, 
        realtime: c.realtime, 
        loop: c.loop
    };
};
module.exports = {
    clockToJs: clockToJs, 
    mkClock: mkClock
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],203:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var nowToJs = function (n) {
    return {
        id: Data_Nullable.toNullable(n.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(n.classes), 
        now: Mathbox_Field.maybeToNullable(Mathbox_Types.timestampToJs)(n.now), 
        seek: Data_Nullable.toNullable(n.seek), 
        pace: n.pace, 
        speed: n.speed
    };
};
var mkNow = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    now: Data_Maybe.Nothing.value, 
    seek: Data_Maybe.Nothing.value, 
    pace: Mathbox_Field.Val.create(1.0), 
    speed: Mathbox_Field.Val.create(1.0)
};
module.exports = {
    mkNow: mkNow, 
    nowToJs: nowToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],204:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkFragment = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    shader: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    pass: Mathbox_Field.Val.create(Mathbox_Types.mkFragmentPass0), 
    gamma: Mathbox_Field.Val.create(false)
};
var fragmentToJs = function (f) {
    return {
        id: Data_Nullable.toNullable(f.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(f.classes), 
        shader: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(f.shader), 
        pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.fragmentPassToJs)(f.pass), 
        gamma: f.gamma
    };
};
module.exports = {
    fragmentToJs: fragmentToJs, 
    mkFragment: mkFragment
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],205:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkLayer = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    pass: Mathbox_Field.Val.create(Mathbox_Types.mkVertexPass0), 
    depth: Mathbox_Field.Val.create(1.0), 
    fit: Mathbox_Field.Val.create(Mathbox_Types.FitY.value)
};
var layerToJs = function (l) {
    return {
        id: Data_Nullable.toNullable(l.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(l.classes), 
        pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(l.pass), 
        depth: l.depth, 
        fit: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.fitToJs)(l.fit)
    };
};
module.exports = {
    layerToJs: layerToJs, 
    mkLayer: mkLayer
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],206:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkMask = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    shader: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0)
};
var maskToJs = function (m) {
    return {
        id: Data_Nullable.toNullable(m.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(m.classes), 
        shader: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(m.shader)
    };
};
module.exports = {
    maskToJs: maskToJs, 
    mkMask: mkMask
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],207:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var transformToJs = function (t) {
    return {
        id: Data_Nullable.toNullable(t.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(t.classes), 
        pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(t.pass), 
        gamma: t.gamma
    };
};
var mkTransform = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    pass: Mathbox_Field.Val.create(Mathbox_Types.mkVertexPass0), 
    gamma: Mathbox_Field.Val.create(false)
};
module.exports = {
    mkTransform: mkTransform, 
    transformToJs: transformToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],208:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var transform3ToJs = function (t) {
    return {
        id: Data_Nullable.toNullable(t.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(t.classes), 
        pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(t.pass), 
        position: t.position, 
        quaternion: t.quaternion, 
        rotation: t.rotation, 
        eulerOrder: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.swizzleToJs)(t.eulerOrder), 
        scale: t.scale, 
        matrix: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.mat4ToJs)(t.matrix)
    };
};
var mkTransform3 = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    pass: Mathbox_Field.Val.create(Mathbox_Types.mkVertexPass0), 
    position: Mathbox_Field.Val.create(Mathbox_Types.mkVec30), 
    quaternion: Mathbox_Field.Val.create(Mathbox_Types.mkQuat0), 
    rotation: Mathbox_Field.Val.create(Mathbox_Types.mkVec30), 
    eulerOrder: Mathbox_Field.Val.create(Mathbox_Types.mkSwizzle1(Mathbox_Types.xyz)), 
    scale: Mathbox_Field.Val.create(Mathbox_Types.mkVec3(1)(1)(1)), 
    matrix: Mathbox_Field.Val.create(Mathbox_Types.mkMat4(1)(0)(0)(0)(0)(1)(0)(0)(0)(0)(1)(0)(0)(0)(0)(1))
};
module.exports = {
    mkTransform3: mkTransform3, 
    transform3ToJs: transform3ToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],209:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var transform4ToJs = function (t) {
    return {
        id: Data_Nullable.toNullable(t.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(t.classes), 
        pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(t.pass), 
        position: t.position, 
        scale: t.scale, 
        matrix: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.mat4ToJs)(t.matrix)
    };
};
var mkTransform4 = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    pass: Mathbox_Field.Val.create(Mathbox_Types.mkVertexPass0), 
    position: Mathbox_Field.Val.create(Mathbox_Types.mkVec40), 
    scale: Mathbox_Field.Val.create(Mathbox_Types.mkVec4(1)(1)(1)(1)), 
    matrix: Mathbox_Field.Val.create(Mathbox_Types.mkMat4(1)(0)(0)(0)(0)(1)(0)(0)(0)(0)(1)(0)(0)(0)(0)(1))
};
module.exports = {
    mkTransform4: mkTransform4, 
    transform4ToJs: transform4ToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],210:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var vertexToJs = function (v) {
    return {
        id: Data_Nullable.toNullable(v.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(v.classes), 
        shader: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.selectToJs)(v.shader), 
        pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(v.pass)
    };
};
var mkVertex = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    shader: Mathbox_Field.Val.create(Mathbox_Types.mkSelect0), 
    pass: Mathbox_Field.Val.create(Mathbox_Types.mkVertexPass0)
};
module.exports = {
    mkVertex: mkVertex, 
    vertexToJs: vertexToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],211:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Data_Ring = require("../Data.Ring");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkCartesian = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    visible: Mathbox_Field.Val.create(true), 
    range: Mathbox_Field.Val.create([ Mathbox_Types.mkVec2(-1 | 0)(1) ]), 
    position: Mathbox_Field.Val.create(Mathbox_Types.mkVec30), 
    quaternion: Mathbox_Field.Val.create(Mathbox_Types.mkQuat0), 
    rotation: Mathbox_Field.Val.create(Mathbox_Types.mkVec30), 
    scale: Mathbox_Field.Val.create(Mathbox_Types.mkVec3(1)(1)(1)), 
    eulerOrder: Mathbox_Field.Val.create(Mathbox_Types.mkSwizzle1(Mathbox_Types.xyz)), 
    pass: Mathbox_Field.Val.create(Mathbox_Types.mkVertexPass0)
};
var cartesianToJs = function (c) {
    return {
        id: Data_Nullable.toNullable(c.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(c.classes), 
        visible: c.visible, 
        range: c.range, 
        position: c.position, 
        quaternion: c.quaternion, 
        rotation: c.rotation, 
        scale: c.scale, 
        eulerOrder: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.swizzleToJs)(c.eulerOrder), 
        pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(c.pass)
    };
};
module.exports = {
    cartesianToJs: cartesianToJs, 
    mkCartesian: mkCartesian
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Data.Ring":110,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],212:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Data_Ring = require("../Data.Ring");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var mkCartesian4 = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    visible: Mathbox_Field.Val.create(true), 
    range: Mathbox_Field.Val.create([ Mathbox_Types.mkVec2(-1 | 0)(1) ]), 
    position: Mathbox_Field.Val.create(Mathbox_Types.mkVec40), 
    scale: Mathbox_Field.Val.create(Mathbox_Types.mkVec4(1)(1)(1)(1)), 
    pass: Mathbox_Field.Val.create(Mathbox_Types.mkVertexPass0)
};
var cartesian4ToJs = function (c) {
    return {
        id: Data_Nullable.toNullable(c.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(c.classes), 
        visible: c.visible, 
        range: c.range, 
        position: c.position, 
        scale: c.scale, 
        pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(c.pass)
    };
};
module.exports = {
    cartesian4ToJs: cartesian4ToJs, 
    mkCartesian4: mkCartesian4
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Data.Ring":110,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],213:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Data_Ring = require("../Data.Ring");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var polarToJs = function (p) {
    return {
        id: Data_Nullable.toNullable(p.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(p.classes), 
        visible: p.visible, 
        range: p.range, 
        position: p.position, 
        quaternion: p.quaternion, 
        rotation: p.rotation, 
        scale: p.scale, 
        eulerOrder: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.swizzleToJs)(p.eulerOrder), 
        bend: p.bend, 
        helix: p.helix, 
        pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(p.pass)
    };
};
var mkPolar = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    visible: Mathbox_Field.Val.create(true), 
    range: Mathbox_Field.Val.create([ Mathbox_Types.mkVec2(-1 | 0)(1) ]), 
    position: Mathbox_Field.Val.create(Mathbox_Types.mkVec30), 
    quaternion: Mathbox_Field.Val.create(Mathbox_Types.mkQuat0), 
    rotation: Mathbox_Field.Val.create(Mathbox_Types.mkVec30), 
    scale: Mathbox_Field.Val.create(Mathbox_Types.mkVec3(1)(1)(1)), 
    eulerOrder: Mathbox_Field.Val.create(Mathbox_Types.mkSwizzle1(Mathbox_Types.xyz)), 
    bend: Mathbox_Field.Val.create(1.0), 
    helix: Mathbox_Field.Val.create(0.0), 
    pass: Mathbox_Field.Val.create(Mathbox_Types.mkVertexPass0)
};
module.exports = {
    mkPolar: mkPolar, 
    polarToJs: polarToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Data.Ring":110,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],214:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Data_Ring = require("../Data.Ring");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var sphericalToJs = function (s) {
    return {
        id: Data_Nullable.toNullable(s.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
        visible: s.visible, 
        range: s.range, 
        position: s.position, 
        quaternion: s.quaternion, 
        rotation: s.rotation, 
        scale: s.scale, 
        eulerOrder: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.swizzleToJs)(s.eulerOrder), 
        bend: s.bend, 
        pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(s.pass)
    };
};
var mkSpherical = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    visible: Mathbox_Field.Val.create(true), 
    range: Mathbox_Field.Val.create([ Mathbox_Types.mkVec2(-1 | 0)(1) ]), 
    position: Mathbox_Field.Val.create(Mathbox_Types.mkVec30), 
    quaternion: Mathbox_Field.Val.create(Mathbox_Types.mkQuat0), 
    rotation: Mathbox_Field.Val.create(Mathbox_Types.mkVec30), 
    scale: Mathbox_Field.Val.create(Mathbox_Types.mkVec3(1)(1)(1)), 
    eulerOrder: Mathbox_Field.Val.create(Mathbox_Types.mkSwizzle1(Mathbox_Types.xyz)), 
    bend: Mathbox_Field.Val.create(1.0), 
    pass: Mathbox_Field.Val.create(Mathbox_Types.mkVertexPass0)
};
module.exports = {
    mkSpherical: mkSpherical, 
    sphericalToJs: sphericalToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Data.Ring":110,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],215:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Data_Ring = require("../Data.Ring");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var stereographicToJs = function (s) {
    return {
        id: Data_Nullable.toNullable(s.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
        visible: s.visible, 
        range: s.range, 
        position: s.position, 
        quaternion: s.quaternion, 
        rotation: s.rotation, 
        scale: s.scale, 
        eulerOrder: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.swizzleToJs)(s.eulerOrder), 
        bend: s.bend, 
        pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(s.pass)
    };
};
var mkStereographic = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    visible: Mathbox_Field.Val.create(true), 
    range: Mathbox_Field.Val.create([ Mathbox_Types.mkVec2(-1 | 0)(1) ]), 
    position: Mathbox_Field.Val.create(Mathbox_Types.mkVec30), 
    quaternion: Mathbox_Field.Val.create(Mathbox_Types.mkQuat0), 
    rotation: Mathbox_Field.Val.create(Mathbox_Types.mkVec30), 
    scale: Mathbox_Field.Val.create(Mathbox_Types.mkVec3(1)(1)(1)), 
    eulerOrder: Mathbox_Field.Val.create(Mathbox_Types.mkSwizzle1(Mathbox_Types.xyz)), 
    bend: Mathbox_Field.Val.create(1.0), 
    pass: Mathbox_Field.Val.create(Mathbox_Types.mkVertexPass0)
};
module.exports = {
    mkStereographic: mkStereographic, 
    stereographicToJs: stereographicToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Data.Ring":110,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],216:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Data_Ring = require("../Data.Ring");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var stereographic4ToJs = function (s) {
    return {
        id: Data_Nullable.toNullable(s.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(s.classes), 
        visible: s.visible, 
        range: s.range, 
        position: s.position, 
        scale: s.scale, 
        bend: s.bend, 
        pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(s.pass)
    };
};
var mkStereographic4 = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    visible: Mathbox_Field.Val.create(true), 
    range: Mathbox_Field.Val.create([ Mathbox_Types.mkVec2(-1 | 0)(1) ]), 
    position: Mathbox_Field.Val.create(Mathbox_Types.mkVec40), 
    scale: Mathbox_Field.Val.create(Mathbox_Types.mkVec4(1)(1)(1)(1)), 
    bend: Mathbox_Field.Val.create(1.0), 
    pass: Mathbox_Field.Val.create(Mathbox_Types.mkVertexPass0)
};
module.exports = {
    mkStereographic4: mkStereographic4, 
    stereographic4ToJs: stereographic4ToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Data.Ring":110,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],217:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Data_Ring = require("../Data.Ring");
var Mathbox_Field = require("../Mathbox.Field");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var viewToJs = function (v) {
    return {
        id: Data_Nullable.toNullable(v.id), 
        classes: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.classesToJs)(v.classes), 
        visible: v.visible, 
        range: v.range, 
        pass: Data_Functor.map(Mathbox_Field.functorField)(Mathbox_Types.vertexPassToJs)(v.pass)
    };
};
var mkView = {
    id: Data_Maybe.Nothing.value, 
    classes: Mathbox_Field.Val.create(Mathbox_Types.mkClasses0), 
    visible: Mathbox_Field.Val.create(true), 
    range: Mathbox_Field.Val.create([ Mathbox_Types.mkVec2(-1 | 0)(1) ]), 
    pass: Mathbox_Field.Val.create(Mathbox_Types.mkVertexPass0)
};
module.exports = {
    mkView: mkView, 
    viewToJs: viewToJs
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Data.Ring":110,"../Mathbox.Field":219,"../Mathbox.Types":223,"../Prelude":228}],218:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Mathbox_Class_Base_Group = require("../Mathbox.Class.Base.Group");
var Mathbox_Class_Base_Inherit = require("../Mathbox.Class.Base.Inherit");
var Mathbox_Class_Base_Parent = require("../Mathbox.Class.Base.Parent");
var Mathbox_Class_Base_Root = require("../Mathbox.Class.Base.Root");
var Mathbox_Class_Base_Source = require("../Mathbox.Class.Base.Source");
var Mathbox_Class_Base_Unit = require("../Mathbox.Class.Base.Unit");
var Mathbox_Class_Camera_Camera = require("../Mathbox.Class.Camera.Camera");
var Mathbox_Class_Data_Area = require("../Mathbox.Class.Data.Area");
var Mathbox_Class_Data_Array = require("../Mathbox.Class.Data.Array");
var Mathbox_Class_Data_Buffer = require("../Mathbox.Class.Data.Buffer");
var Mathbox_Class_Data_Data = require("../Mathbox.Class.Data.Data");
var Mathbox_Class_Data_Interval = require("../Mathbox.Class.Data.Interval");
var Mathbox_Class_Data_Matrix = require("../Mathbox.Class.Data.Matrix");
var Mathbox_Class_Data_Resolve = require("../Mathbox.Class.Data.Resolve");
var Mathbox_Class_Data_Scale = require("../Mathbox.Class.Data.Scale");
var Mathbox_Class_Data_Volume = require("../Mathbox.Class.Data.Volume");
var Mathbox_Class_Data_Voxel = require("../Mathbox.Class.Data.Voxel");
var Mathbox_Class_Draw_Axis = require("../Mathbox.Class.Draw.Axis");
var Mathbox_Class_Draw_Face = require("../Mathbox.Class.Draw.Face");
var Mathbox_Class_Draw_Grid = require("../Mathbox.Class.Draw.Grid");
var Mathbox_Class_Draw_Line = require("../Mathbox.Class.Draw.Line");
var Mathbox_Class_Draw_Point = require("../Mathbox.Class.Draw.Point");
var Mathbox_Class_Draw_Strip = require("../Mathbox.Class.Draw.Strip");
var Mathbox_Class_Draw_Surface = require("../Mathbox.Class.Draw.Surface");
var Mathbox_Class_Draw_Ticks = require("../Mathbox.Class.Draw.Ticks");
var Mathbox_Class_Draw_Vector = require("../Mathbox.Class.Draw.Vector");
var Mathbox_Class_Operator_Clamp = require("../Mathbox.Class.Operator.Clamp");
var Mathbox_Class_Operator_Grow = require("../Mathbox.Class.Operator.Grow");
var Mathbox_Class_Operator_Join = require("../Mathbox.Class.Operator.Join");
var Mathbox_Class_Operator_Lerp = require("../Mathbox.Class.Operator.Lerp");
var Mathbox_Class_Operator_Memo = require("../Mathbox.Class.Operator.Memo");
var Mathbox_Class_Operator_Operator = require("../Mathbox.Class.Operator.Operator");
var Mathbox_Class_Operator_Readback = require("../Mathbox.Class.Operator.Readback");
var Mathbox_Class_Operator_Repeat = require("../Mathbox.Class.Operator.Repeat");
var Mathbox_Class_Operator_Resample = require("../Mathbox.Class.Operator.Resample");
var Mathbox_Class_Operator_Slice = require("../Mathbox.Class.Operator.Slice");
var Mathbox_Class_Operator_Split = require("../Mathbox.Class.Operator.Split");
var Mathbox_Class_Operator_Spread = require("../Mathbox.Class.Operator.Spread");
var Mathbox_Class_Operator_Subdivide = require("../Mathbox.Class.Operator.Subdivide");
var Mathbox_Class_Operator_Swizzle = require("../Mathbox.Class.Operator.Swizzle");
var Mathbox_Class_Operator_Transpose = require("../Mathbox.Class.Operator.Transpose");
var Mathbox_Class_Overlay_DOM = require("../Mathbox.Class.Overlay.DOM");
var Mathbox_Class_Overlay_HTML = require("../Mathbox.Class.Overlay.HTML");
var Mathbox_Class_Present_Move = require("../Mathbox.Class.Present.Move");
var Mathbox_Class_Present_Play = require("../Mathbox.Class.Present.Play");
var Mathbox_Class_Present_Present = require("../Mathbox.Class.Present.Present");
var Mathbox_Class_Present_Reveal = require("../Mathbox.Class.Present.Reveal");
var Mathbox_Class_Present_Slide = require("../Mathbox.Class.Present.Slide");
var Mathbox_Class_Present_Step = require("../Mathbox.Class.Present.Step");
var Mathbox_Class_Present_Track = require("../Mathbox.Class.Present.Track");
var Mathbox_Class_Present_Transition = require("../Mathbox.Class.Present.Transition");
var Mathbox_Class_Rtt_Compose = require("../Mathbox.Class.Rtt.Compose");
var Mathbox_Class_Rtt_RTT = require("../Mathbox.Class.Rtt.RTT");
var Mathbox_Class_Shader_Shader = require("../Mathbox.Class.Shader.Shader");
var Mathbox_Class_Text_Format = require("../Mathbox.Class.Text.Format");
var Mathbox_Class_Text_Label = require("../Mathbox.Class.Text.Label");
var Mathbox_Class_Text_Retext = require("../Mathbox.Class.Text.Retext");
var Mathbox_Class_Text_Text = require("../Mathbox.Class.Text.Text");
var Mathbox_Class_Time_Clock = require("../Mathbox.Class.Time.Clock");
var Mathbox_Class_Time_Now = require("../Mathbox.Class.Time.Now");
var Mathbox_Class_Transform_Fragment = require("../Mathbox.Class.Transform.Fragment");
var Mathbox_Class_Transform_Layer = require("../Mathbox.Class.Transform.Layer");
var Mathbox_Class_Transform_Mask = require("../Mathbox.Class.Transform.Mask");
var Mathbox_Class_Transform_Transform = require("../Mathbox.Class.Transform.Transform");
var Mathbox_Class_Transform_Transform3 = require("../Mathbox.Class.Transform.Transform3");
var Mathbox_Class_Transform_Transform4 = require("../Mathbox.Class.Transform.Transform4");
var Mathbox_Class_Transform_Vertex = require("../Mathbox.Class.Transform.Vertex");
var Mathbox_Class_View_Cartesian = require("../Mathbox.Class.View.Cartesian");
var Mathbox_Class_View_Cartesian4 = require("../Mathbox.Class.View.Cartesian4");
var Mathbox_Class_View_Polar = require("../Mathbox.Class.View.Polar");
var Mathbox_Class_View_Spherical = require("../Mathbox.Class.View.Spherical");
var Mathbox_Class_View_Stereographic = require("../Mathbox.Class.View.Stereographic");
var Mathbox_Class_View_Stereographic4 = require("../Mathbox.Class.View.Stereographic4");
var Mathbox_Class_View_View = require("../Mathbox.Class.View.View");
module.exports = {};

},{"../Mathbox.Class.Base.Group":144,"../Mathbox.Class.Base.Inherit":145,"../Mathbox.Class.Base.Parent":146,"../Mathbox.Class.Base.Root":147,"../Mathbox.Class.Base.Source":148,"../Mathbox.Class.Base.Unit":149,"../Mathbox.Class.Camera.Camera":150,"../Mathbox.Class.Data.Area":151,"../Mathbox.Class.Data.Array":152,"../Mathbox.Class.Data.Buffer":153,"../Mathbox.Class.Data.Data":154,"../Mathbox.Class.Data.Interval":155,"../Mathbox.Class.Data.Matrix":156,"../Mathbox.Class.Data.Resolve":157,"../Mathbox.Class.Data.Scale":158,"../Mathbox.Class.Data.Volume":159,"../Mathbox.Class.Data.Voxel":160,"../Mathbox.Class.Draw.Axis":161,"../Mathbox.Class.Draw.Face":162,"../Mathbox.Class.Draw.Grid":163,"../Mathbox.Class.Draw.Line":164,"../Mathbox.Class.Draw.Point":165,"../Mathbox.Class.Draw.Strip":166,"../Mathbox.Class.Draw.Surface":167,"../Mathbox.Class.Draw.Ticks":168,"../Mathbox.Class.Draw.Vector":169,"../Mathbox.Class.Operator.Clamp":170,"../Mathbox.Class.Operator.Grow":171,"../Mathbox.Class.Operator.Join":172,"../Mathbox.Class.Operator.Lerp":173,"../Mathbox.Class.Operator.Memo":174,"../Mathbox.Class.Operator.Operator":175,"../Mathbox.Class.Operator.Readback":176,"../Mathbox.Class.Operator.Repeat":177,"../Mathbox.Class.Operator.Resample":178,"../Mathbox.Class.Operator.Slice":179,"../Mathbox.Class.Operator.Split":180,"../Mathbox.Class.Operator.Spread":181,"../Mathbox.Class.Operator.Subdivide":182,"../Mathbox.Class.Operator.Swizzle":183,"../Mathbox.Class.Operator.Transpose":184,"../Mathbox.Class.Overlay.DOM":185,"../Mathbox.Class.Overlay.HTML":186,"../Mathbox.Class.Present.Move":187,"../Mathbox.Class.Present.Play":188,"../Mathbox.Class.Present.Present":189,"../Mathbox.Class.Present.Reveal":190,"../Mathbox.Class.Present.Slide":191,"../Mathbox.Class.Present.Step":192,"../Mathbox.Class.Present.Track":193,"../Mathbox.Class.Present.Transition":194,"../Mathbox.Class.Rtt.Compose":195,"../Mathbox.Class.Rtt.RTT":196,"../Mathbox.Class.Shader.Shader":197,"../Mathbox.Class.Text.Format":198,"../Mathbox.Class.Text.Label":199,"../Mathbox.Class.Text.Retext":200,"../Mathbox.Class.Text.Text":201,"../Mathbox.Class.Time.Clock":202,"../Mathbox.Class.Time.Now":203,"../Mathbox.Class.Transform.Fragment":204,"../Mathbox.Class.Transform.Layer":205,"../Mathbox.Class.Transform.Mask":206,"../Mathbox.Class.Transform.Transform":207,"../Mathbox.Class.Transform.Transform3":208,"../Mathbox.Class.Transform.Transform4":209,"../Mathbox.Class.Transform.Vertex":210,"../Mathbox.Class.View.Cartesian":211,"../Mathbox.Class.View.Cartesian4":212,"../Mathbox.Class.View.Polar":213,"../Mathbox.Class.View.Spherical":214,"../Mathbox.Class.View.Stereographic":215,"../Mathbox.Class.View.Stereographic4":216,"../Mathbox.Class.View.View":217}],219:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Types = require("../Mathbox.Types");
var Prelude = require("../Prelude");
var Signal = require("../Signal");
var Val = (function () {
    function Val(value0) {
        this.value0 = value0;
    };
    Val.create = function (value0) {
        return new Val(value0);
    };
    return Val;
})();
var Fun = (function () {
    function Fun(value0) {
        this.value0 = value0;
    };
    Fun.create = function (value0) {
        return new Fun(value0);
    };
    return Fun;
})();
var Sig = (function () {
    function Sig(value0) {
        this.value0 = value0;
    };
    Sig.create = function (value0) {
        return new Sig(value0);
    };
    return Sig;
})();
var functorField = new Data_Functor.Functor(function (f) {
    return function (v) {
        if (v instanceof Val) {
            return new Val(f(v.value0));
        };
        if (v instanceof Fun) {
            return new Fun(function (n) {
                return f(v.value0(n));
            });
        };
        if (v instanceof Sig) {
            return new Sig(Data_Functor.map(Signal.functorSignal)(f)(v.value0));
        };
        throw new Error("Failed pattern match at Mathbox.Field line 12, column 1 - line 12, column 39: " + [ f.constructor.name, v.constructor.name ]);
    };
});
var mapPos = function (f) {
    return function (p) {
        return Data_Functor.map(functorField)(f)(p);
    };
};
var maybeToNullable = function (f) {
    return function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return Data_Nullable.toNullable(Data_Maybe.Nothing.value);
        };
        if (v instanceof Data_Maybe.Just) {
            return Data_Nullable.toNullable(new Data_Maybe.Just(Data_Functor.map(functorField)(f)(v.value0)));
        };
        throw new Error("Failed pattern match at Mathbox.Field line 24, column 1 - line 24, column 81: " + [ f.constructor.name, v.constructor.name ]);
    };
};
var constrName = function (v) {
    if (v instanceof Val) {
        return "Val";
    };
    if (v instanceof Fun) {
        return "Fun";
    };
    if (v instanceof Sig) {
        return "Sig";
    };
    throw new Error("Failed pattern match at Mathbox.Field line 19, column 1 - line 19, column 42: " + [ v.constructor.name ]);
};
module.exports = {
    Val: Val, 
    Fun: Fun, 
    Sig: Sig, 
    constrName: constrName, 
    mapPos: mapPos, 
    maybeToNullable: maybeToNullable, 
    functorField: functorField
};

},{"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Types":223,"../Prelude":228,"../Signal":230}],220:[function(require,module,exports){
"use strict";

exports.trackballControls = THREE.TrackballControls;
exports.orbitControls = THREE.OrbitControls;

exports.setThreeClearColor = function (color) {
    return function(alpha) {
        return function(three) {
            three.renderer.setClearColor(color, alpha);
            return three;
        };
    };
};

exports.mkMathbox = function (options) {
    return function () {
        var mathbox = mathBox(options);
        if (mathbox.fallback) throw "WebGL not supported";
        return mathbox;
    };
};

exports.applyOnThree = function(f) {
    return function(mathbox) {
        return function() {
            f(mathbox.three);
            return mathbox;
        };
    };
};

exports.jsAdd = function (ctx) {
    return function (type) {
        return function (options) {
            return function (fieldConstrName) {
                return function () {
                    var splitted = split(fieldConstrName, options.value0);
                    return ctx.add(type, splitted[0], splitted[1]);
                };
            };
        };
    };
};

exports.jsEnd = function (ctx) {
    return function () {
        return ctx.end();
    };
};

var split = function(fieldConstrName, object) {
    var options = {};
    var binds = {};
    for(var prop in object) {
        var propVal = object[prop];
        try {
          var v = unwrap(fieldConstrName, propVal);
        } catch (e) {
          var str = JSON.stringify(object);
          console.log(str);
          console.log(object);
          console.log(prop);
          throw e;
        }
        if (v != null) {
            if (v[0] != null) {
                options[prop] = v[0];
            } else if (v[1] != null) {
                binds[prop] = v[1];
            }
        }
    }
    return [options, binds];
};

var signalToFun = function (signal) {
  return function(t) {
    return signal.get();
  }
};

var unwrap = function(fieldConstrName, propVal) {
    if (propVal == null) {
      return [null, null];
    }
    if (fieldConstrName(propVal) === 'Val') {
        return [propVal.value0, null];
    }
    if (fieldConstrName(propVal) === 'Fun') {
      return [null, propVal.value0];
    }
    if (fieldConstrName(propVal) === 'Sig') {
      return [null, signalToFun(propVal.value0)];
    }
    console.log(propVal);
    throw "Unexpected propVal:" + propVal;
};

exports.jsSet_k = function (ctx) {
    return function (key) {
        return function () {
            return ctx.set(key);
        };
    };
};

},{}],221:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Data_Functor = require("../Data.Functor");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Mathbox_Class_Base_Group = require("../Mathbox.Class.Base.Group");
var Mathbox_Class_Base_Inherit = require("../Mathbox.Class.Base.Inherit");
var Mathbox_Class_Base_Parent = require("../Mathbox.Class.Base.Parent");
var Mathbox_Class_Base_Root = require("../Mathbox.Class.Base.Root");
var Mathbox_Class_Base_Source = require("../Mathbox.Class.Base.Source");
var Mathbox_Class_Base_Unit = require("../Mathbox.Class.Base.Unit");
var Mathbox_Class_Camera_Camera = require("../Mathbox.Class.Camera.Camera");
var Mathbox_Class_Data_Area = require("../Mathbox.Class.Data.Area");
var Mathbox_Class_Data_Array = require("../Mathbox.Class.Data.Array");
var Mathbox_Class_Data_Buffer = require("../Mathbox.Class.Data.Buffer");
var Mathbox_Class_Data_Data = require("../Mathbox.Class.Data.Data");
var Mathbox_Class_Data_Interval = require("../Mathbox.Class.Data.Interval");
var Mathbox_Class_Data_Matrix = require("../Mathbox.Class.Data.Matrix");
var Mathbox_Class_Data_Resolve = require("../Mathbox.Class.Data.Resolve");
var Mathbox_Class_Data_Scale = require("../Mathbox.Class.Data.Scale");
var Mathbox_Class_Data_Volume = require("../Mathbox.Class.Data.Volume");
var Mathbox_Class_Data_Voxel = require("../Mathbox.Class.Data.Voxel");
var Mathbox_Class_Draw_Axis = require("../Mathbox.Class.Draw.Axis");
var Mathbox_Class_Draw_Face = require("../Mathbox.Class.Draw.Face");
var Mathbox_Class_Draw_Grid = require("../Mathbox.Class.Draw.Grid");
var Mathbox_Class_Draw_Line = require("../Mathbox.Class.Draw.Line");
var Mathbox_Class_Draw_Point = require("../Mathbox.Class.Draw.Point");
var Mathbox_Class_Draw_Strip = require("../Mathbox.Class.Draw.Strip");
var Mathbox_Class_Draw_Surface = require("../Mathbox.Class.Draw.Surface");
var Mathbox_Class_Draw_Ticks = require("../Mathbox.Class.Draw.Ticks");
var Mathbox_Class_Draw_Vector = require("../Mathbox.Class.Draw.Vector");
var Mathbox_Class_Operator_Clamp = require("../Mathbox.Class.Operator.Clamp");
var Mathbox_Class_Operator_Grow = require("../Mathbox.Class.Operator.Grow");
var Mathbox_Class_Operator_Join = require("../Mathbox.Class.Operator.Join");
var Mathbox_Class_Operator_Lerp = require("../Mathbox.Class.Operator.Lerp");
var Mathbox_Class_Operator_Memo = require("../Mathbox.Class.Operator.Memo");
var Mathbox_Class_Operator_Operator = require("../Mathbox.Class.Operator.Operator");
var Mathbox_Class_Operator_Readback = require("../Mathbox.Class.Operator.Readback");
var Mathbox_Class_Operator_Repeat = require("../Mathbox.Class.Operator.Repeat");
var Mathbox_Class_Operator_Resample = require("../Mathbox.Class.Operator.Resample");
var Mathbox_Class_Operator_Slice = require("../Mathbox.Class.Operator.Slice");
var Mathbox_Class_Operator_Split = require("../Mathbox.Class.Operator.Split");
var Mathbox_Class_Operator_Spread = require("../Mathbox.Class.Operator.Spread");
var Mathbox_Class_Operator_Subdivide = require("../Mathbox.Class.Operator.Subdivide");
var Mathbox_Class_Operator_Swizzle = require("../Mathbox.Class.Operator.Swizzle");
var Mathbox_Class_Operator_Transpose = require("../Mathbox.Class.Operator.Transpose");
var Mathbox_Class_Overlay_DOM = require("../Mathbox.Class.Overlay.DOM");
var Mathbox_Class_Overlay_HTML = require("../Mathbox.Class.Overlay.HTML");
var Mathbox_Class_Present_Move = require("../Mathbox.Class.Present.Move");
var Mathbox_Class_Present_Play = require("../Mathbox.Class.Present.Play");
var Mathbox_Class_Present_Present = require("../Mathbox.Class.Present.Present");
var Mathbox_Class_Present_Reveal = require("../Mathbox.Class.Present.Reveal");
var Mathbox_Class_Present_Slide = require("../Mathbox.Class.Present.Slide");
var Mathbox_Class_Present_Step = require("../Mathbox.Class.Present.Step");
var Mathbox_Class_Present_Track = require("../Mathbox.Class.Present.Track");
var Mathbox_Class_Present_Transition = require("../Mathbox.Class.Present.Transition");
var Mathbox_Class_Rtt_Compose = require("../Mathbox.Class.Rtt.Compose");
var Mathbox_Class_Rtt_RTT = require("../Mathbox.Class.Rtt.RTT");
var Mathbox_Class_Shader_Shader = require("../Mathbox.Class.Shader.Shader");
var Mathbox_Class_Text_Format = require("../Mathbox.Class.Text.Format");
var Mathbox_Class_Text_Label = require("../Mathbox.Class.Text.Label");
var Mathbox_Class_Text_Retext = require("../Mathbox.Class.Text.Retext");
var Mathbox_Class_Text_Text = require("../Mathbox.Class.Text.Text");
var Mathbox_Class_Time_Clock = require("../Mathbox.Class.Time.Clock");
var Mathbox_Class_Time_Now = require("../Mathbox.Class.Time.Now");
var Mathbox_Class_Transform_Fragment = require("../Mathbox.Class.Transform.Fragment");
var Mathbox_Class_Transform_Layer = require("../Mathbox.Class.Transform.Layer");
var Mathbox_Class_Transform_Mask = require("../Mathbox.Class.Transform.Mask");
var Mathbox_Class_Transform_Transform = require("../Mathbox.Class.Transform.Transform");
var Mathbox_Class_Transform_Transform3 = require("../Mathbox.Class.Transform.Transform3");
var Mathbox_Class_Transform_Transform4 = require("../Mathbox.Class.Transform.Transform4");
var Mathbox_Class_Transform_Vertex = require("../Mathbox.Class.Transform.Vertex");
var Mathbox_Class_View_Cartesian = require("../Mathbox.Class.View.Cartesian");
var Mathbox_Class_View_Cartesian4 = require("../Mathbox.Class.View.Cartesian4");
var Mathbox_Class_View_Polar = require("../Mathbox.Class.View.Polar");
var Mathbox_Class_View_Spherical = require("../Mathbox.Class.View.Spherical");
var Mathbox_Class_View_Stereographic = require("../Mathbox.Class.View.Stereographic");
var Mathbox_Class_View_Stereographic4 = require("../Mathbox.Class.View.Stereographic4");
var Mathbox_Class_View_View = require("../Mathbox.Class.View.View");
var Mathbox_Classes = require("../Mathbox.Classes");
var Mathbox_Field = require("../Mathbox.Field");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var Area = (function () {
    function Area(value0) {
        this.value0 = value0;
    };
    Area.create = function (value0) {
        return new Area(value0);
    };
    return Area;
})();
var Array_ = (function () {
    function Array_(value0) {
        this.value0 = value0;
    };
    Array_.create = function (value0) {
        return new Array_(value0);
    };
    return Array_;
})();
var Axis = (function () {
    function Axis(value0) {
        this.value0 = value0;
    };
    Axis.create = function (value0) {
        return new Axis(value0);
    };
    return Axis;
})();
var Buffer = (function () {
    function Buffer(value0) {
        this.value0 = value0;
    };
    Buffer.create = function (value0) {
        return new Buffer(value0);
    };
    return Buffer;
})();
var Camera = (function () {
    function Camera(value0) {
        this.value0 = value0;
    };
    Camera.create = function (value0) {
        return new Camera(value0);
    };
    return Camera;
})();
var Cartesian = (function () {
    function Cartesian(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Cartesian.create = function (value0) {
        return function (value1) {
            return new Cartesian(value0, value1);
        };
    };
    return Cartesian;
})();
var Cartesian4 = (function () {
    function Cartesian4(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Cartesian4.create = function (value0) {
        return function (value1) {
            return new Cartesian4(value0, value1);
        };
    };
    return Cartesian4;
})();
var Clamp = (function () {
    function Clamp(value0) {
        this.value0 = value0;
    };
    Clamp.create = function (value0) {
        return new Clamp(value0);
    };
    return Clamp;
})();
var Clock = (function () {
    function Clock(value0) {
        this.value0 = value0;
    };
    Clock.create = function (value0) {
        return new Clock(value0);
    };
    return Clock;
})();
var Compose = (function () {
    function Compose(value0) {
        this.value0 = value0;
    };
    Compose.create = function (value0) {
        return new Compose(value0);
    };
    return Compose;
})();
var DOM = (function () {
    function DOM(value0) {
        this.value0 = value0;
    };
    DOM.create = function (value0) {
        return new DOM(value0);
    };
    return DOM;
})();
var Data = (function () {
    function Data(value0) {
        this.value0 = value0;
    };
    Data.create = function (value0) {
        return new Data(value0);
    };
    return Data;
})();
var Face = (function () {
    function Face(value0) {
        this.value0 = value0;
    };
    Face.create = function (value0) {
        return new Face(value0);
    };
    return Face;
})();
var Format = (function () {
    function Format(value0) {
        this.value0 = value0;
    };
    Format.create = function (value0) {
        return new Format(value0);
    };
    return Format;
})();
var Fragment = (function () {
    function Fragment(value0) {
        this.value0 = value0;
    };
    Fragment.create = function (value0) {
        return new Fragment(value0);
    };
    return Fragment;
})();
var Grid = (function () {
    function Grid(value0) {
        this.value0 = value0;
    };
    Grid.create = function (value0) {
        return new Grid(value0);
    };
    return Grid;
})();
var Group = (function () {
    function Group(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Group.create = function (value0) {
        return function (value1) {
            return new Group(value0, value1);
        };
    };
    return Group;
})();
var Grow = (function () {
    function Grow(value0) {
        this.value0 = value0;
    };
    Grow.create = function (value0) {
        return new Grow(value0);
    };
    return Grow;
})();
var HTML = (function () {
    function HTML(value0) {
        this.value0 = value0;
    };
    HTML.create = function (value0) {
        return new HTML(value0);
    };
    return HTML;
})();
var Inherit = (function () {
    function Inherit(value0) {
        this.value0 = value0;
    };
    Inherit.create = function (value0) {
        return new Inherit(value0);
    };
    return Inherit;
})();
var Interval = (function () {
    function Interval(value0) {
        this.value0 = value0;
    };
    Interval.create = function (value0) {
        return new Interval(value0);
    };
    return Interval;
})();
var Join = (function () {
    function Join(value0) {
        this.value0 = value0;
    };
    Join.create = function (value0) {
        return new Join(value0);
    };
    return Join;
})();
var Label = (function () {
    function Label(value0) {
        this.value0 = value0;
    };
    Label.create = function (value0) {
        return new Label(value0);
    };
    return Label;
})();
var Layer = (function () {
    function Layer(value0) {
        this.value0 = value0;
    };
    Layer.create = function (value0) {
        return new Layer(value0);
    };
    return Layer;
})();
var Lerp = (function () {
    function Lerp(value0) {
        this.value0 = value0;
    };
    Lerp.create = function (value0) {
        return new Lerp(value0);
    };
    return Lerp;
})();
var Line = (function () {
    function Line(value0) {
        this.value0 = value0;
    };
    Line.create = function (value0) {
        return new Line(value0);
    };
    return Line;
})();
var Mask = (function () {
    function Mask(value0) {
        this.value0 = value0;
    };
    Mask.create = function (value0) {
        return new Mask(value0);
    };
    return Mask;
})();
var Matrix = (function () {
    function Matrix(value0) {
        this.value0 = value0;
    };
    Matrix.create = function (value0) {
        return new Matrix(value0);
    };
    return Matrix;
})();
var Memo = (function () {
    function Memo(value0) {
        this.value0 = value0;
    };
    Memo.create = function (value0) {
        return new Memo(value0);
    };
    return Memo;
})();
var Move = (function () {
    function Move(value0) {
        this.value0 = value0;
    };
    Move.create = function (value0) {
        return new Move(value0);
    };
    return Move;
})();
var Now = (function () {
    function Now(value0) {
        this.value0 = value0;
    };
    Now.create = function (value0) {
        return new Now(value0);
    };
    return Now;
})();
var Operator = (function () {
    function Operator(value0) {
        this.value0 = value0;
    };
    Operator.create = function (value0) {
        return new Operator(value0);
    };
    return Operator;
})();
var Parent = (function () {
    function Parent(value0) {
        this.value0 = value0;
    };
    Parent.create = function (value0) {
        return new Parent(value0);
    };
    return Parent;
})();
var Play = (function () {
    function Play(value0) {
        this.value0 = value0;
    };
    Play.create = function (value0) {
        return new Play(value0);
    };
    return Play;
})();
var Point = (function () {
    function Point(value0) {
        this.value0 = value0;
    };
    Point.create = function (value0) {
        return new Point(value0);
    };
    return Point;
})();
var Polar = (function () {
    function Polar(value0) {
        this.value0 = value0;
    };
    Polar.create = function (value0) {
        return new Polar(value0);
    };
    return Polar;
})();
var Present = (function () {
    function Present(value0) {
        this.value0 = value0;
    };
    Present.create = function (value0) {
        return new Present(value0);
    };
    return Present;
})();
var RTT = (function () {
    function RTT(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    RTT.create = function (value0) {
        return function (value1) {
            return new RTT(value0, value1);
        };
    };
    return RTT;
})();
var Readback = (function () {
    function Readback(value0) {
        this.value0 = value0;
    };
    Readback.create = function (value0) {
        return new Readback(value0);
    };
    return Readback;
})();
var Repeat = (function () {
    function Repeat(value0) {
        this.value0 = value0;
    };
    Repeat.create = function (value0) {
        return new Repeat(value0);
    };
    return Repeat;
})();
var Resample = (function () {
    function Resample(value0) {
        this.value0 = value0;
    };
    Resample.create = function (value0) {
        return new Resample(value0);
    };
    return Resample;
})();
var Resolve = (function () {
    function Resolve(value0) {
        this.value0 = value0;
    };
    Resolve.create = function (value0) {
        return new Resolve(value0);
    };
    return Resolve;
})();
var Retext = (function () {
    function Retext(value0) {
        this.value0 = value0;
    };
    Retext.create = function (value0) {
        return new Retext(value0);
    };
    return Retext;
})();
var Reveal = (function () {
    function Reveal(value0) {
        this.value0 = value0;
    };
    Reveal.create = function (value0) {
        return new Reveal(value0);
    };
    return Reveal;
})();
var Root = (function () {
    function Root(value0) {
        this.value0 = value0;
    };
    Root.create = function (value0) {
        return new Root(value0);
    };
    return Root;
})();
var Scale = (function () {
    function Scale(value0) {
        this.value0 = value0;
    };
    Scale.create = function (value0) {
        return new Scale(value0);
    };
    return Scale;
})();
var Shader = (function () {
    function Shader(value0) {
        this.value0 = value0;
    };
    Shader.create = function (value0) {
        return new Shader(value0);
    };
    return Shader;
})();
var Slice = (function () {
    function Slice(value0) {
        this.value0 = value0;
    };
    Slice.create = function (value0) {
        return new Slice(value0);
    };
    return Slice;
})();
var Slide = (function () {
    function Slide(value0) {
        this.value0 = value0;
    };
    Slide.create = function (value0) {
        return new Slide(value0);
    };
    return Slide;
})();
var Source = (function () {
    function Source(value0) {
        this.value0 = value0;
    };
    Source.create = function (value0) {
        return new Source(value0);
    };
    return Source;
})();
var Spherical = (function () {
    function Spherical(value0) {
        this.value0 = value0;
    };
    Spherical.create = function (value0) {
        return new Spherical(value0);
    };
    return Spherical;
})();
var Split = (function () {
    function Split(value0) {
        this.value0 = value0;
    };
    Split.create = function (value0) {
        return new Split(value0);
    };
    return Split;
})();
var Spread = (function () {
    function Spread(value0) {
        this.value0 = value0;
    };
    Spread.create = function (value0) {
        return new Spread(value0);
    };
    return Spread;
})();
var Step = (function () {
    function Step(value0) {
        this.value0 = value0;
    };
    Step.create = function (value0) {
        return new Step(value0);
    };
    return Step;
})();
var Stereographic = (function () {
    function Stereographic(value0) {
        this.value0 = value0;
    };
    Stereographic.create = function (value0) {
        return new Stereographic(value0);
    };
    return Stereographic;
})();
var Stereographic4 = (function () {
    function Stereographic4(value0) {
        this.value0 = value0;
    };
    Stereographic4.create = function (value0) {
        return new Stereographic4(value0);
    };
    return Stereographic4;
})();
var Strip = (function () {
    function Strip(value0) {
        this.value0 = value0;
    };
    Strip.create = function (value0) {
        return new Strip(value0);
    };
    return Strip;
})();
var Subdivide = (function () {
    function Subdivide(value0) {
        this.value0 = value0;
    };
    Subdivide.create = function (value0) {
        return new Subdivide(value0);
    };
    return Subdivide;
})();
var Surface = (function () {
    function Surface(value0) {
        this.value0 = value0;
    };
    Surface.create = function (value0) {
        return new Surface(value0);
    };
    return Surface;
})();
var Swizzle = (function () {
    function Swizzle(value0) {
        this.value0 = value0;
    };
    Swizzle.create = function (value0) {
        return new Swizzle(value0);
    };
    return Swizzle;
})();
var Text = (function () {
    function Text(value0) {
        this.value0 = value0;
    };
    Text.create = function (value0) {
        return new Text(value0);
    };
    return Text;
})();
var Ticks = (function () {
    function Ticks(value0) {
        this.value0 = value0;
    };
    Ticks.create = function (value0) {
        return new Ticks(value0);
    };
    return Ticks;
})();
var Track = (function () {
    function Track(value0) {
        this.value0 = value0;
    };
    Track.create = function (value0) {
        return new Track(value0);
    };
    return Track;
})();
var Transform = (function () {
    function Transform(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Transform.create = function (value0) {
        return function (value1) {
            return new Transform(value0, value1);
        };
    };
    return Transform;
})();
var Transform3 = (function () {
    function Transform3(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Transform3.create = function (value0) {
        return function (value1) {
            return new Transform3(value0, value1);
        };
    };
    return Transform3;
})();
var Transform4 = (function () {
    function Transform4(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Transform4.create = function (value0) {
        return function (value1) {
            return new Transform4(value0, value1);
        };
    };
    return Transform4;
})();
var Transition = (function () {
    function Transition(value0) {
        this.value0 = value0;
    };
    Transition.create = function (value0) {
        return new Transition(value0);
    };
    return Transition;
})();
var Transpose = (function () {
    function Transpose(value0) {
        this.value0 = value0;
    };
    Transpose.create = function (value0) {
        return new Transpose(value0);
    };
    return Transpose;
})();
var Unit = (function () {
    function Unit(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Unit.create = function (value0) {
        return function (value1) {
            return new Unit(value0, value1);
        };
    };
    return Unit;
})();
var Vector = (function () {
    function Vector(value0) {
        this.value0 = value0;
    };
    Vector.create = function (value0) {
        return new Vector(value0);
    };
    return Vector;
})();
var Vertex = (function () {
    function Vertex(value0) {
        this.value0 = value0;
    };
    Vertex.create = function (value0) {
        return new Vertex(value0);
    };
    return Vertex;
})();
var View = (function () {
    function View(value0) {
        this.value0 = value0;
    };
    View.create = function (value0) {
        return new View(value0);
    };
    return View;
})();
var Volume = (function () {
    function Volume(value0) {
        this.value0 = value0;
    };
    Volume.create = function (value0) {
        return new Volume(value0);
    };
    return Volume;
})();
var Voxel = (function () {
    function Voxel(value0) {
        this.value0 = value0;
    };
    Voxel.create = function (value0) {
        return new Voxel(value0);
    };
    return Voxel;
})();
var JsArea = (function () {
    function JsArea(value0) {
        this.value0 = value0;
    };
    JsArea.create = function (value0) {
        return new JsArea(value0);
    };
    return JsArea;
})();
var JsArray_ = (function () {
    function JsArray_(value0) {
        this.value0 = value0;
    };
    JsArray_.create = function (value0) {
        return new JsArray_(value0);
    };
    return JsArray_;
})();
var JsAxis = (function () {
    function JsAxis(value0) {
        this.value0 = value0;
    };
    JsAxis.create = function (value0) {
        return new JsAxis(value0);
    };
    return JsAxis;
})();
var JsBuffer = (function () {
    function JsBuffer(value0) {
        this.value0 = value0;
    };
    JsBuffer.create = function (value0) {
        return new JsBuffer(value0);
    };
    return JsBuffer;
})();
var JsCamera = (function () {
    function JsCamera(value0) {
        this.value0 = value0;
    };
    JsCamera.create = function (value0) {
        return new JsCamera(value0);
    };
    return JsCamera;
})();
var JsCartesian = (function () {
    function JsCartesian(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    JsCartesian.create = function (value0) {
        return function (value1) {
            return new JsCartesian(value0, value1);
        };
    };
    return JsCartesian;
})();
var JsCartesian4 = (function () {
    function JsCartesian4(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    JsCartesian4.create = function (value0) {
        return function (value1) {
            return new JsCartesian4(value0, value1);
        };
    };
    return JsCartesian4;
})();
var JsClamp = (function () {
    function JsClamp(value0) {
        this.value0 = value0;
    };
    JsClamp.create = function (value0) {
        return new JsClamp(value0);
    };
    return JsClamp;
})();
var JsClock = (function () {
    function JsClock(value0) {
        this.value0 = value0;
    };
    JsClock.create = function (value0) {
        return new JsClock(value0);
    };
    return JsClock;
})();
var JsCompose = (function () {
    function JsCompose(value0) {
        this.value0 = value0;
    };
    JsCompose.create = function (value0) {
        return new JsCompose(value0);
    };
    return JsCompose;
})();
var JsDOM = (function () {
    function JsDOM(value0) {
        this.value0 = value0;
    };
    JsDOM.create = function (value0) {
        return new JsDOM(value0);
    };
    return JsDOM;
})();
var JsData = (function () {
    function JsData(value0) {
        this.value0 = value0;
    };
    JsData.create = function (value0) {
        return new JsData(value0);
    };
    return JsData;
})();
var JsFace = (function () {
    function JsFace(value0) {
        this.value0 = value0;
    };
    JsFace.create = function (value0) {
        return new JsFace(value0);
    };
    return JsFace;
})();
var JsFormat = (function () {
    function JsFormat(value0) {
        this.value0 = value0;
    };
    JsFormat.create = function (value0) {
        return new JsFormat(value0);
    };
    return JsFormat;
})();
var JsFragment = (function () {
    function JsFragment(value0) {
        this.value0 = value0;
    };
    JsFragment.create = function (value0) {
        return new JsFragment(value0);
    };
    return JsFragment;
})();
var JsGrid = (function () {
    function JsGrid(value0) {
        this.value0 = value0;
    };
    JsGrid.create = function (value0) {
        return new JsGrid(value0);
    };
    return JsGrid;
})();
var JsGroup = (function () {
    function JsGroup(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    JsGroup.create = function (value0) {
        return function (value1) {
            return new JsGroup(value0, value1);
        };
    };
    return JsGroup;
})();
var JsGrow = (function () {
    function JsGrow(value0) {
        this.value0 = value0;
    };
    JsGrow.create = function (value0) {
        return new JsGrow(value0);
    };
    return JsGrow;
})();
var JsHTML = (function () {
    function JsHTML(value0) {
        this.value0 = value0;
    };
    JsHTML.create = function (value0) {
        return new JsHTML(value0);
    };
    return JsHTML;
})();
var JsInherit = (function () {
    function JsInherit(value0) {
        this.value0 = value0;
    };
    JsInherit.create = function (value0) {
        return new JsInherit(value0);
    };
    return JsInherit;
})();
var JsInterval = (function () {
    function JsInterval(value0) {
        this.value0 = value0;
    };
    JsInterval.create = function (value0) {
        return new JsInterval(value0);
    };
    return JsInterval;
})();
var JsJoin = (function () {
    function JsJoin(value0) {
        this.value0 = value0;
    };
    JsJoin.create = function (value0) {
        return new JsJoin(value0);
    };
    return JsJoin;
})();
var JsLabel = (function () {
    function JsLabel(value0) {
        this.value0 = value0;
    };
    JsLabel.create = function (value0) {
        return new JsLabel(value0);
    };
    return JsLabel;
})();
var JsLayer = (function () {
    function JsLayer(value0) {
        this.value0 = value0;
    };
    JsLayer.create = function (value0) {
        return new JsLayer(value0);
    };
    return JsLayer;
})();
var JsLerp = (function () {
    function JsLerp(value0) {
        this.value0 = value0;
    };
    JsLerp.create = function (value0) {
        return new JsLerp(value0);
    };
    return JsLerp;
})();
var JsLine = (function () {
    function JsLine(value0) {
        this.value0 = value0;
    };
    JsLine.create = function (value0) {
        return new JsLine(value0);
    };
    return JsLine;
})();
var JsMask = (function () {
    function JsMask(value0) {
        this.value0 = value0;
    };
    JsMask.create = function (value0) {
        return new JsMask(value0);
    };
    return JsMask;
})();
var JsMatrix = (function () {
    function JsMatrix(value0) {
        this.value0 = value0;
    };
    JsMatrix.create = function (value0) {
        return new JsMatrix(value0);
    };
    return JsMatrix;
})();
var JsMemo = (function () {
    function JsMemo(value0) {
        this.value0 = value0;
    };
    JsMemo.create = function (value0) {
        return new JsMemo(value0);
    };
    return JsMemo;
})();
var JsMove = (function () {
    function JsMove(value0) {
        this.value0 = value0;
    };
    JsMove.create = function (value0) {
        return new JsMove(value0);
    };
    return JsMove;
})();
var JsNow = (function () {
    function JsNow(value0) {
        this.value0 = value0;
    };
    JsNow.create = function (value0) {
        return new JsNow(value0);
    };
    return JsNow;
})();
var JsOperator = (function () {
    function JsOperator(value0) {
        this.value0 = value0;
    };
    JsOperator.create = function (value0) {
        return new JsOperator(value0);
    };
    return JsOperator;
})();
var JsParent = (function () {
    function JsParent(value0) {
        this.value0 = value0;
    };
    JsParent.create = function (value0) {
        return new JsParent(value0);
    };
    return JsParent;
})();
var JsPlay = (function () {
    function JsPlay(value0) {
        this.value0 = value0;
    };
    JsPlay.create = function (value0) {
        return new JsPlay(value0);
    };
    return JsPlay;
})();
var JsPoint = (function () {
    function JsPoint(value0) {
        this.value0 = value0;
    };
    JsPoint.create = function (value0) {
        return new JsPoint(value0);
    };
    return JsPoint;
})();
var JsPolar = (function () {
    function JsPolar(value0) {
        this.value0 = value0;
    };
    JsPolar.create = function (value0) {
        return new JsPolar(value0);
    };
    return JsPolar;
})();
var JsPresent = (function () {
    function JsPresent(value0) {
        this.value0 = value0;
    };
    JsPresent.create = function (value0) {
        return new JsPresent(value0);
    };
    return JsPresent;
})();
var JsRTT = (function () {
    function JsRTT(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    JsRTT.create = function (value0) {
        return function (value1) {
            return new JsRTT(value0, value1);
        };
    };
    return JsRTT;
})();
var JsReadback = (function () {
    function JsReadback(value0) {
        this.value0 = value0;
    };
    JsReadback.create = function (value0) {
        return new JsReadback(value0);
    };
    return JsReadback;
})();
var JsRepeat = (function () {
    function JsRepeat(value0) {
        this.value0 = value0;
    };
    JsRepeat.create = function (value0) {
        return new JsRepeat(value0);
    };
    return JsRepeat;
})();
var JsResample = (function () {
    function JsResample(value0) {
        this.value0 = value0;
    };
    JsResample.create = function (value0) {
        return new JsResample(value0);
    };
    return JsResample;
})();
var JsResolve = (function () {
    function JsResolve(value0) {
        this.value0 = value0;
    };
    JsResolve.create = function (value0) {
        return new JsResolve(value0);
    };
    return JsResolve;
})();
var JsRetext = (function () {
    function JsRetext(value0) {
        this.value0 = value0;
    };
    JsRetext.create = function (value0) {
        return new JsRetext(value0);
    };
    return JsRetext;
})();
var JsReveal = (function () {
    function JsReveal(value0) {
        this.value0 = value0;
    };
    JsReveal.create = function (value0) {
        return new JsReveal(value0);
    };
    return JsReveal;
})();
var JsRoot = (function () {
    function JsRoot(value0) {
        this.value0 = value0;
    };
    JsRoot.create = function (value0) {
        return new JsRoot(value0);
    };
    return JsRoot;
})();
var JsScale = (function () {
    function JsScale(value0) {
        this.value0 = value0;
    };
    JsScale.create = function (value0) {
        return new JsScale(value0);
    };
    return JsScale;
})();
var JsShader = (function () {
    function JsShader(value0) {
        this.value0 = value0;
    };
    JsShader.create = function (value0) {
        return new JsShader(value0);
    };
    return JsShader;
})();
var JsSlice = (function () {
    function JsSlice(value0) {
        this.value0 = value0;
    };
    JsSlice.create = function (value0) {
        return new JsSlice(value0);
    };
    return JsSlice;
})();
var JsSlide = (function () {
    function JsSlide(value0) {
        this.value0 = value0;
    };
    JsSlide.create = function (value0) {
        return new JsSlide(value0);
    };
    return JsSlide;
})();
var JsSource = (function () {
    function JsSource(value0) {
        this.value0 = value0;
    };
    JsSource.create = function (value0) {
        return new JsSource(value0);
    };
    return JsSource;
})();
var JsSpherical = (function () {
    function JsSpherical(value0) {
        this.value0 = value0;
    };
    JsSpherical.create = function (value0) {
        return new JsSpherical(value0);
    };
    return JsSpherical;
})();
var JsSplit = (function () {
    function JsSplit(value0) {
        this.value0 = value0;
    };
    JsSplit.create = function (value0) {
        return new JsSplit(value0);
    };
    return JsSplit;
})();
var JsSpread = (function () {
    function JsSpread(value0) {
        this.value0 = value0;
    };
    JsSpread.create = function (value0) {
        return new JsSpread(value0);
    };
    return JsSpread;
})();
var JsStep = (function () {
    function JsStep(value0) {
        this.value0 = value0;
    };
    JsStep.create = function (value0) {
        return new JsStep(value0);
    };
    return JsStep;
})();
var JsStereographic = (function () {
    function JsStereographic(value0) {
        this.value0 = value0;
    };
    JsStereographic.create = function (value0) {
        return new JsStereographic(value0);
    };
    return JsStereographic;
})();
var JsStereographic4 = (function () {
    function JsStereographic4(value0) {
        this.value0 = value0;
    };
    JsStereographic4.create = function (value0) {
        return new JsStereographic4(value0);
    };
    return JsStereographic4;
})();
var JsStrip = (function () {
    function JsStrip(value0) {
        this.value0 = value0;
    };
    JsStrip.create = function (value0) {
        return new JsStrip(value0);
    };
    return JsStrip;
})();
var JsSubdivide = (function () {
    function JsSubdivide(value0) {
        this.value0 = value0;
    };
    JsSubdivide.create = function (value0) {
        return new JsSubdivide(value0);
    };
    return JsSubdivide;
})();
var JsSurface = (function () {
    function JsSurface(value0) {
        this.value0 = value0;
    };
    JsSurface.create = function (value0) {
        return new JsSurface(value0);
    };
    return JsSurface;
})();
var JsSwizzle = (function () {
    function JsSwizzle(value0) {
        this.value0 = value0;
    };
    JsSwizzle.create = function (value0) {
        return new JsSwizzle(value0);
    };
    return JsSwizzle;
})();
var JsText = (function () {
    function JsText(value0) {
        this.value0 = value0;
    };
    JsText.create = function (value0) {
        return new JsText(value0);
    };
    return JsText;
})();
var JsTicks = (function () {
    function JsTicks(value0) {
        this.value0 = value0;
    };
    JsTicks.create = function (value0) {
        return new JsTicks(value0);
    };
    return JsTicks;
})();
var JsTrack = (function () {
    function JsTrack(value0) {
        this.value0 = value0;
    };
    JsTrack.create = function (value0) {
        return new JsTrack(value0);
    };
    return JsTrack;
})();
var JsTransform = (function () {
    function JsTransform(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    JsTransform.create = function (value0) {
        return function (value1) {
            return new JsTransform(value0, value1);
        };
    };
    return JsTransform;
})();
var JsTransform3 = (function () {
    function JsTransform3(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    JsTransform3.create = function (value0) {
        return function (value1) {
            return new JsTransform3(value0, value1);
        };
    };
    return JsTransform3;
})();
var JsTransform4 = (function () {
    function JsTransform4(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    JsTransform4.create = function (value0) {
        return function (value1) {
            return new JsTransform4(value0, value1);
        };
    };
    return JsTransform4;
})();
var JsTransition = (function () {
    function JsTransition(value0) {
        this.value0 = value0;
    };
    JsTransition.create = function (value0) {
        return new JsTransition(value0);
    };
    return JsTransition;
})();
var JsTranspose = (function () {
    function JsTranspose(value0) {
        this.value0 = value0;
    };
    JsTranspose.create = function (value0) {
        return new JsTranspose(value0);
    };
    return JsTranspose;
})();
var JsUnit = (function () {
    function JsUnit(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    JsUnit.create = function (value0) {
        return function (value1) {
            return new JsUnit(value0, value1);
        };
    };
    return JsUnit;
})();
var JsVector = (function () {
    function JsVector(value0) {
        this.value0 = value0;
    };
    JsVector.create = function (value0) {
        return new JsVector(value0);
    };
    return JsVector;
})();
var JsVertex = (function () {
    function JsVertex(value0) {
        this.value0 = value0;
    };
    JsVertex.create = function (value0) {
        return new JsVertex(value0);
    };
    return JsVertex;
})();
var JsView = (function () {
    function JsView(value0) {
        this.value0 = value0;
    };
    JsView.create = function (value0) {
        return new JsView(value0);
    };
    return JsView;
})();
var JsVolume = (function () {
    function JsVolume(value0) {
        this.value0 = value0;
    };
    JsVolume.create = function (value0) {
        return new JsVolume(value0);
    };
    return JsVolume;
})();
var JsVoxel = (function () {
    function JsVoxel(value0) {
        this.value0 = value0;
    };
    JsVoxel.create = function (value0) {
        return new JsVoxel(value0);
    };
    return JsVoxel;
})();
var unsafeMkThreeColor = Unsafe_Coerce.unsafeCoerce;
var toJs = function (v) {
    if (v instanceof Area) {
        return new JsArea(Mathbox_Class_Data_Area.areaToJs(v.value0));
    };
    if (v instanceof Array_) {
        return new JsArray_(Mathbox_Class_Data_Array.array_ToJs(v.value0));
    };
    if (v instanceof Axis) {
        return new JsAxis(Mathbox_Class_Draw_Axis.axisToJs(v.value0));
    };
    if (v instanceof Buffer) {
        return new JsBuffer(Mathbox_Class_Data_Buffer.bufferToJs(v.value0));
    };
    if (v instanceof Camera) {
        return new JsCamera(Mathbox_Class_Camera_Camera.cameraToJs(v.value0));
    };
    if (v instanceof Cartesian) {
        return new JsCartesian(Mathbox_Class_View_Cartesian.cartesianToJs(v.value0), Data_Functor.map(Data_List_Types.functorList)(toJs)(v.value1));
    };
    if (v instanceof Cartesian4) {
        return new JsCartesian4(Mathbox_Class_View_Cartesian4.cartesian4ToJs(v.value0), Data_Functor.map(Data_List_Types.functorList)(toJs)(v.value1));
    };
    if (v instanceof Clamp) {
        return new JsClamp(Mathbox_Class_Operator_Clamp.clampToJs(v.value0));
    };
    if (v instanceof Clock) {
        return new JsClock(Mathbox_Class_Time_Clock.clockToJs(v.value0));
    };
    if (v instanceof Compose) {
        return new JsCompose(Mathbox_Class_Rtt_Compose.composeToJs(v.value0));
    };
    if (v instanceof DOM) {
        return new JsDOM(Mathbox_Class_Overlay_DOM.dOMToJs(v.value0));
    };
    if (v instanceof Data) {
        return new JsData(Mathbox_Class_Data_Data.dataToJs(v.value0));
    };
    if (v instanceof Face) {
        return new JsFace(Mathbox_Class_Draw_Face.faceToJs(v.value0));
    };
    if (v instanceof Format) {
        return new JsFormat(Mathbox_Class_Text_Format.formatToJs(v.value0));
    };
    if (v instanceof Fragment) {
        return new JsFragment(Mathbox_Class_Transform_Fragment.fragmentToJs(v.value0));
    };
    if (v instanceof Grid) {
        return new JsGrid(Mathbox_Class_Draw_Grid.gridToJs(v.value0));
    };
    if (v instanceof Group) {
        return new JsGroup(Mathbox_Class_Base_Group.groupToJs(v.value0), Data_Functor.map(Data_List_Types.functorList)(toJs)(v.value1));
    };
    if (v instanceof Grow) {
        return new JsGrow(Mathbox_Class_Operator_Grow.growToJs(v.value0));
    };
    if (v instanceof HTML) {
        return new JsHTML(Mathbox_Class_Overlay_HTML.hTMLToJs(v.value0));
    };
    if (v instanceof Inherit) {
        return new JsInherit(Mathbox_Class_Base_Inherit.inheritToJs(v.value0));
    };
    if (v instanceof Interval) {
        return new JsInterval(Mathbox_Class_Data_Interval.intervalToJs(v.value0));
    };
    if (v instanceof Join) {
        return new JsJoin(Mathbox_Class_Operator_Join.joinToJs(v.value0));
    };
    if (v instanceof Label) {
        return new JsLabel(Mathbox_Class_Text_Label.labelToJs(v.value0));
    };
    if (v instanceof Layer) {
        return new JsLayer(Mathbox_Class_Transform_Layer.layerToJs(v.value0));
    };
    if (v instanceof Lerp) {
        return new JsLerp(Mathbox_Class_Operator_Lerp.lerpToJs(v.value0));
    };
    if (v instanceof Line) {
        return new JsLine(Mathbox_Class_Draw_Line.lineToJs(v.value0));
    };
    if (v instanceof Mask) {
        return new JsMask(Mathbox_Class_Transform_Mask.maskToJs(v.value0));
    };
    if (v instanceof Matrix) {
        return new JsMatrix(Mathbox_Class_Data_Matrix.matrixToJs(v.value0));
    };
    if (v instanceof Memo) {
        return new JsMemo(Mathbox_Class_Operator_Memo.memoToJs(v.value0));
    };
    if (v instanceof Move) {
        return new JsMove(Mathbox_Class_Present_Move.moveToJs(v.value0));
    };
    if (v instanceof Now) {
        return new JsNow(Mathbox_Class_Time_Now.nowToJs(v.value0));
    };
    if (v instanceof Operator) {
        return new JsOperator(Mathbox_Class_Operator_Operator.operatorToJs(v.value0));
    };
    if (v instanceof Parent) {
        return new JsParent(Mathbox_Class_Base_Parent.parentToJs(v.value0));
    };
    if (v instanceof Play) {
        return new JsPlay(Mathbox_Class_Present_Play.playToJs(v.value0));
    };
    if (v instanceof Point) {
        return new JsPoint(Mathbox_Class_Draw_Point.pointToJs(v.value0));
    };
    if (v instanceof Polar) {
        return new JsPolar(Mathbox_Class_View_Polar.polarToJs(v.value0));
    };
    if (v instanceof Present) {
        return new JsPresent(Mathbox_Class_Present_Present.presentToJs(v.value0));
    };
    if (v instanceof RTT) {
        return new JsRTT(Mathbox_Class_Rtt_RTT.rTTToJs(v.value0), Data_Functor.map(Data_List_Types.functorList)(toJs)(v.value1));
    };
    if (v instanceof Readback) {
        return new JsReadback(Mathbox_Class_Operator_Readback.readbackToJs(v.value0));
    };
    if (v instanceof Repeat) {
        return new JsRepeat(Mathbox_Class_Operator_Repeat.repeatToJs(v.value0));
    };
    if (v instanceof Resample) {
        return new JsResample(Mathbox_Class_Operator_Resample.resampleToJs(v.value0));
    };
    if (v instanceof Resolve) {
        return new JsResolve(Mathbox_Class_Data_Resolve.resolveToJs(v.value0));
    };
    if (v instanceof Retext) {
        return new JsRetext(Mathbox_Class_Text_Retext.retextToJs(v.value0));
    };
    if (v instanceof Reveal) {
        return new JsReveal(Mathbox_Class_Present_Reveal.revealToJs(v.value0));
    };
    if (v instanceof Root) {
        return new JsRoot(Mathbox_Class_Base_Root.rootToJs(v.value0));
    };
    if (v instanceof Scale) {
        return new JsScale(Mathbox_Class_Data_Scale.scaleToJs(v.value0));
    };
    if (v instanceof Shader) {
        return new JsShader(Mathbox_Class_Shader_Shader.shaderToJs(v.value0));
    };
    if (v instanceof Slice) {
        return new JsSlice(Mathbox_Class_Operator_Slice.sliceToJs(v.value0));
    };
    if (v instanceof Slide) {
        return new JsSlide(Mathbox_Class_Present_Slide.slideToJs(v.value0));
    };
    if (v instanceof Source) {
        return new JsSource(Mathbox_Class_Base_Source.sourceToJs(v.value0));
    };
    if (v instanceof Spherical) {
        return new JsSpherical(Mathbox_Class_View_Spherical.sphericalToJs(v.value0));
    };
    if (v instanceof Split) {
        return new JsSplit(Mathbox_Class_Operator_Split.splitToJs(v.value0));
    };
    if (v instanceof Spread) {
        return new JsSpread(Mathbox_Class_Operator_Spread.spreadToJs(v.value0));
    };
    if (v instanceof Step) {
        return new JsStep(Mathbox_Class_Present_Step.stepToJs(v.value0));
    };
    if (v instanceof Stereographic) {
        return new JsStereographic(Mathbox_Class_View_Stereographic.stereographicToJs(v.value0));
    };
    if (v instanceof Stereographic4) {
        return new JsStereographic4(Mathbox_Class_View_Stereographic4.stereographic4ToJs(v.value0));
    };
    if (v instanceof Strip) {
        return new JsStrip(Mathbox_Class_Draw_Strip.stripToJs(v.value0));
    };
    if (v instanceof Subdivide) {
        return new JsSubdivide(Mathbox_Class_Operator_Subdivide.subdivideToJs(v.value0));
    };
    if (v instanceof Surface) {
        return new JsSurface(Mathbox_Class_Draw_Surface.surfaceToJs(v.value0));
    };
    if (v instanceof Swizzle) {
        return new JsSwizzle(Mathbox_Class_Operator_Swizzle.swizzleToJs(v.value0));
    };
    if (v instanceof Text) {
        return new JsText(Mathbox_Class_Text_Text.textToJs(v.value0));
    };
    if (v instanceof Ticks) {
        return new JsTicks(Mathbox_Class_Draw_Ticks.ticksToJs(v.value0));
    };
    if (v instanceof Track) {
        return new JsTrack(Mathbox_Class_Present_Track.trackToJs(v.value0));
    };
    if (v instanceof Transform) {
        return new JsTransform(Mathbox_Class_Transform_Transform.transformToJs(v.value0), Data_Functor.map(Data_List_Types.functorList)(toJs)(v.value1));
    };
    if (v instanceof Transform3) {
        return new JsTransform3(Mathbox_Class_Transform_Transform3.transform3ToJs(v.value0), Data_Functor.map(Data_List_Types.functorList)(toJs)(v.value1));
    };
    if (v instanceof Transform4) {
        return new JsTransform4(Mathbox_Class_Transform_Transform4.transform4ToJs(v.value0), Data_Functor.map(Data_List_Types.functorList)(toJs)(v.value1));
    };
    if (v instanceof Transition) {
        return new JsTransition(Mathbox_Class_Present_Transition.transitionToJs(v.value0));
    };
    if (v instanceof Transpose) {
        return new JsTranspose(Mathbox_Class_Operator_Transpose.transposeToJs(v.value0));
    };
    if (v instanceof Unit) {
        return new JsUnit(Mathbox_Class_Base_Unit.unitToJs(v.value0), Data_Functor.map(Data_List_Types.functorList)(toJs)(v.value1));
    };
    if (v instanceof Vector) {
        return new JsVector(Mathbox_Class_Draw_Vector.vectorToJs(v.value0));
    };
    if (v instanceof Vertex) {
        return new JsVertex(Mathbox_Class_Transform_Vertex.vertexToJs(v.value0));
    };
    if (v instanceof View) {
        return new JsView(Mathbox_Class_View_View.viewToJs(v.value0));
    };
    if (v instanceof Volume) {
        return new JsVolume(Mathbox_Class_Data_Volume.volumeToJs(v.value0));
    };
    if (v instanceof Voxel) {
        return new JsVoxel(Mathbox_Class_Data_Voxel.voxelToJs(v.value0));
    };
    throw new Error("Failed pattern match at Mathbox.Mathbox line 307, column 1 - line 307, column 47: " + [ v.constructor.name ]);
};
var subData = function (v) {
    if (v instanceof JsCartesian) {
        return v.value1;
    };
    if (v instanceof JsCartesian4) {
        return v.value1;
    };
    if (v instanceof JsGroup) {
        return v.value1;
    };
    if (v instanceof JsRTT) {
        return v.value1;
    };
    if (v instanceof JsTransform) {
        return v.value1;
    };
    if (v instanceof JsTransform3) {
        return v.value1;
    };
    if (v instanceof JsTransform4) {
        return v.value1;
    };
    if (v instanceof JsUnit) {
        return v.value1;
    };
    return Data_List_Types.Nil.value;
};
var setToNullable = function (s) {
    return {
        focus: Data_Nullable.toNullable(s.focus), 
        scale: Data_Nullable.toNullable(s.scale)
    };
};
var set = function (s) {
    return function (m) {
        return $foreign.jsSet_k(m)(setToNullable(s));
    };
};
var mkSet = {
    focus: new Data_Maybe.Just(1.0), 
    scale: Data_Maybe.Nothing.value
};
var isLeaf = function (d) {
    return Data_List["null"](subData(d));
};
var getType = function (v) {
    if (v instanceof JsArea) {
        return "area";
    };
    if (v instanceof JsArray_) {
        return "array";
    };
    if (v instanceof JsAxis) {
        return "axis";
    };
    if (v instanceof JsBuffer) {
        return "buffer";
    };
    if (v instanceof JsCamera) {
        return "camera";
    };
    if (v instanceof JsCartesian) {
        return "cartesian";
    };
    if (v instanceof JsCartesian4) {
        return "cartesian4";
    };
    if (v instanceof JsClamp) {
        return "clamp";
    };
    if (v instanceof JsClock) {
        return "clock";
    };
    if (v instanceof JsCompose) {
        return "compose";
    };
    if (v instanceof JsDOM) {
        return "dom";
    };
    if (v instanceof JsData) {
        return "data";
    };
    if (v instanceof JsFace) {
        return "face";
    };
    if (v instanceof JsFormat) {
        return "format";
    };
    if (v instanceof JsFragment) {
        return "fragment";
    };
    if (v instanceof JsGrid) {
        return "grid";
    };
    if (v instanceof JsGroup) {
        return "group";
    };
    if (v instanceof JsGrow) {
        return "grow";
    };
    if (v instanceof JsHTML) {
        return "html";
    };
    if (v instanceof JsInherit) {
        return "inherit";
    };
    if (v instanceof JsInterval) {
        return "interval";
    };
    if (v instanceof JsJoin) {
        return "join";
    };
    if (v instanceof JsLabel) {
        return "label";
    };
    if (v instanceof JsLayer) {
        return "layer";
    };
    if (v instanceof JsLerp) {
        return "lerp";
    };
    if (v instanceof JsLine) {
        return "line";
    };
    if (v instanceof JsMask) {
        return "mask";
    };
    if (v instanceof JsMatrix) {
        return "matrix";
    };
    if (v instanceof JsMemo) {
        return "memo";
    };
    if (v instanceof JsMove) {
        return "move";
    };
    if (v instanceof JsNow) {
        return "now";
    };
    if (v instanceof JsOperator) {
        return "operator";
    };
    if (v instanceof JsParent) {
        return "parent";
    };
    if (v instanceof JsPlay) {
        return "play";
    };
    if (v instanceof JsPoint) {
        return "point";
    };
    if (v instanceof JsPolar) {
        return "polar";
    };
    if (v instanceof JsPresent) {
        return "present";
    };
    if (v instanceof JsRTT) {
        return "rtt";
    };
    if (v instanceof JsReadback) {
        return "readback";
    };
    if (v instanceof JsRepeat) {
        return "repeat";
    };
    if (v instanceof JsResample) {
        return "resample";
    };
    if (v instanceof JsResolve) {
        return "resolve";
    };
    if (v instanceof JsRetext) {
        return "retext";
    };
    if (v instanceof JsReveal) {
        return "reveal";
    };
    if (v instanceof JsRoot) {
        return "root";
    };
    if (v instanceof JsScale) {
        return "scale";
    };
    if (v instanceof JsShader) {
        return "shader";
    };
    if (v instanceof JsSlice) {
        return "slice";
    };
    if (v instanceof JsSlide) {
        return "slide";
    };
    if (v instanceof JsSource) {
        return "source";
    };
    if (v instanceof JsSpherical) {
        return "spherical";
    };
    if (v instanceof JsSplit) {
        return "split";
    };
    if (v instanceof JsSpread) {
        return "spread";
    };
    if (v instanceof JsStep) {
        return "step";
    };
    if (v instanceof JsStereographic) {
        return "stereographic";
    };
    if (v instanceof JsStereographic4) {
        return "stereographic4";
    };
    if (v instanceof JsStrip) {
        return "strip";
    };
    if (v instanceof JsSubdivide) {
        return "subdivide";
    };
    if (v instanceof JsSurface) {
        return "surface";
    };
    if (v instanceof JsSwizzle) {
        return "swizzle";
    };
    if (v instanceof JsText) {
        return "text";
    };
    if (v instanceof JsTicks) {
        return "ticks";
    };
    if (v instanceof JsTrack) {
        return "track";
    };
    if (v instanceof JsTransform) {
        return "transform";
    };
    if (v instanceof JsTransform3) {
        return "transform";
    };
    if (v instanceof JsTransform4) {
        return "transform4";
    };
    if (v instanceof JsTransition) {
        return "transition";
    };
    if (v instanceof JsTranspose) {
        return "transpose";
    };
    if (v instanceof JsUnit) {
        return "unit";
    };
    if (v instanceof JsVector) {
        return "vector";
    };
    if (v instanceof JsVertex) {
        return "vertex";
    };
    if (v instanceof JsView) {
        return "view";
    };
    if (v instanceof JsVolume) {
        return "volume";
    };
    if (v instanceof JsVoxel) {
        return "voxel";
    };
    throw new Error("Failed pattern match at Mathbox.Mathbox line 220, column 1 - line 220, column 40: " + [ v.constructor.name ]);
};
var endD = function (d) {
    return function (m) {
        var $187 = isLeaf(d);
        if ($187) {
            return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(m);
        };
        return $foreign.jsEnd(m);
    };
};
var colorWhite = unsafeMkThreeColor("white");
var addAll = function (v) {
    return function (m) {
        if (v instanceof Data_List_Types.Nil) {
            return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(m);
        };
        if (v instanceof Data_List_Types.Cons) {
            return Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(add(v.value0)(m))(endD(v.value0)))(addAll(v.value1));
        };
        throw new Error("Failed pattern match at Mathbox.Mathbox line 29, column 1 - line 29, column 100: " + [ v.constructor.name, m.constructor.name ]);
    };
};
var add = function (d) {
    return function (m) {
        return Control_Bind.bind(Control_Monad_Eff.bindEff)($foreign.jsAdd(m)(getType(d))(d)(Mathbox_Field.constrName))(addAll(subData(d)));
    };
};
module.exports = {
    JsArea: JsArea, 
    JsArray_: JsArray_, 
    JsAxis: JsAxis, 
    JsBuffer: JsBuffer, 
    JsCamera: JsCamera, 
    JsCartesian: JsCartesian, 
    JsCartesian4: JsCartesian4, 
    JsClamp: JsClamp, 
    JsClock: JsClock, 
    JsCompose: JsCompose, 
    JsDOM: JsDOM, 
    JsData: JsData, 
    JsFace: JsFace, 
    JsFormat: JsFormat, 
    JsFragment: JsFragment, 
    JsGrid: JsGrid, 
    JsGroup: JsGroup, 
    JsGrow: JsGrow, 
    JsHTML: JsHTML, 
    JsInherit: JsInherit, 
    JsInterval: JsInterval, 
    JsJoin: JsJoin, 
    JsLabel: JsLabel, 
    JsLayer: JsLayer, 
    JsLerp: JsLerp, 
    JsLine: JsLine, 
    JsMask: JsMask, 
    JsMatrix: JsMatrix, 
    JsMemo: JsMemo, 
    JsMove: JsMove, 
    JsNow: JsNow, 
    JsOperator: JsOperator, 
    JsParent: JsParent, 
    JsPlay: JsPlay, 
    JsPoint: JsPoint, 
    JsPolar: JsPolar, 
    JsPresent: JsPresent, 
    JsRTT: JsRTT, 
    JsReadback: JsReadback, 
    JsRepeat: JsRepeat, 
    JsResample: JsResample, 
    JsResolve: JsResolve, 
    JsRetext: JsRetext, 
    JsReveal: JsReveal, 
    JsRoot: JsRoot, 
    JsScale: JsScale, 
    JsShader: JsShader, 
    JsSlice: JsSlice, 
    JsSlide: JsSlide, 
    JsSource: JsSource, 
    JsSpherical: JsSpherical, 
    JsSplit: JsSplit, 
    JsSpread: JsSpread, 
    JsStep: JsStep, 
    JsStereographic: JsStereographic, 
    JsStereographic4: JsStereographic4, 
    JsStrip: JsStrip, 
    JsSubdivide: JsSubdivide, 
    JsSurface: JsSurface, 
    JsSwizzle: JsSwizzle, 
    JsText: JsText, 
    JsTicks: JsTicks, 
    JsTrack: JsTrack, 
    JsTransform: JsTransform, 
    JsTransform3: JsTransform3, 
    JsTransform4: JsTransform4, 
    JsTransition: JsTransition, 
    JsTranspose: JsTranspose, 
    JsUnit: JsUnit, 
    JsVector: JsVector, 
    JsVertex: JsVertex, 
    JsView: JsView, 
    JsVolume: JsVolume, 
    JsVoxel: JsVoxel, 
    Area: Area, 
    Array_: Array_, 
    Axis: Axis, 
    Buffer: Buffer, 
    Camera: Camera, 
    Cartesian: Cartesian, 
    Cartesian4: Cartesian4, 
    Clamp: Clamp, 
    Clock: Clock, 
    Compose: Compose, 
    DOM: DOM, 
    Data: Data, 
    Face: Face, 
    Format: Format, 
    Fragment: Fragment, 
    Grid: Grid, 
    Group: Group, 
    Grow: Grow, 
    HTML: HTML, 
    Inherit: Inherit, 
    Interval: Interval, 
    Join: Join, 
    Label: Label, 
    Layer: Layer, 
    Lerp: Lerp, 
    Line: Line, 
    Mask: Mask, 
    Matrix: Matrix, 
    Memo: Memo, 
    Move: Move, 
    Now: Now, 
    Operator: Operator, 
    Parent: Parent, 
    Play: Play, 
    Point: Point, 
    Polar: Polar, 
    Present: Present, 
    RTT: RTT, 
    Readback: Readback, 
    Repeat: Repeat, 
    Resample: Resample, 
    Resolve: Resolve, 
    Retext: Retext, 
    Reveal: Reveal, 
    Root: Root, 
    Scale: Scale, 
    Shader: Shader, 
    Slice: Slice, 
    Slide: Slide, 
    Source: Source, 
    Spherical: Spherical, 
    Split: Split, 
    Spread: Spread, 
    Step: Step, 
    Stereographic: Stereographic, 
    Stereographic4: Stereographic4, 
    Strip: Strip, 
    Subdivide: Subdivide, 
    Surface: Surface, 
    Swizzle: Swizzle, 
    Text: Text, 
    Ticks: Ticks, 
    Track: Track, 
    Transform: Transform, 
    Transform3: Transform3, 
    Transform4: Transform4, 
    Transition: Transition, 
    Transpose: Transpose, 
    Unit: Unit, 
    Vector: Vector, 
    Vertex: Vertex, 
    View: View, 
    Volume: Volume, 
    Voxel: Voxel, 
    add: add, 
    addAll: addAll, 
    colorWhite: colorWhite, 
    endD: endD, 
    getType: getType, 
    isLeaf: isLeaf, 
    mkSet: mkSet, 
    set: set, 
    setToNullable: setToNullable, 
    subData: subData, 
    toJs: toJs, 
    unsafeMkThreeColor: unsafeMkThreeColor, 
    applyOnThree: $foreign.applyOnThree, 
    jsAdd: $foreign.jsAdd, 
    jsEnd: $foreign.jsEnd, 
    jsSet_k: $foreign.jsSet_k, 
    mkMathbox: $foreign.mkMathbox, 
    orbitControls: $foreign.orbitControls, 
    setThreeClearColor: $foreign.setThreeClearColor, 
    trackballControls: $foreign.trackballControls
};

},{"../Control.Applicative":3,"../Control.Bind":9,"../Control.Monad.Eff":20,"../Data.Functor":76,"../Data.List":88,"../Data.List.Types":87,"../Data.Maybe":91,"../Data.Nullable":103,"../Mathbox.Class.Base.Group":144,"../Mathbox.Class.Base.Inherit":145,"../Mathbox.Class.Base.Parent":146,"../Mathbox.Class.Base.Root":147,"../Mathbox.Class.Base.Source":148,"../Mathbox.Class.Base.Unit":149,"../Mathbox.Class.Camera.Camera":150,"../Mathbox.Class.Data.Area":151,"../Mathbox.Class.Data.Array":152,"../Mathbox.Class.Data.Buffer":153,"../Mathbox.Class.Data.Data":154,"../Mathbox.Class.Data.Interval":155,"../Mathbox.Class.Data.Matrix":156,"../Mathbox.Class.Data.Resolve":157,"../Mathbox.Class.Data.Scale":158,"../Mathbox.Class.Data.Volume":159,"../Mathbox.Class.Data.Voxel":160,"../Mathbox.Class.Draw.Axis":161,"../Mathbox.Class.Draw.Face":162,"../Mathbox.Class.Draw.Grid":163,"../Mathbox.Class.Draw.Line":164,"../Mathbox.Class.Draw.Point":165,"../Mathbox.Class.Draw.Strip":166,"../Mathbox.Class.Draw.Surface":167,"../Mathbox.Class.Draw.Ticks":168,"../Mathbox.Class.Draw.Vector":169,"../Mathbox.Class.Operator.Clamp":170,"../Mathbox.Class.Operator.Grow":171,"../Mathbox.Class.Operator.Join":172,"../Mathbox.Class.Operator.Lerp":173,"../Mathbox.Class.Operator.Memo":174,"../Mathbox.Class.Operator.Operator":175,"../Mathbox.Class.Operator.Readback":176,"../Mathbox.Class.Operator.Repeat":177,"../Mathbox.Class.Operator.Resample":178,"../Mathbox.Class.Operator.Slice":179,"../Mathbox.Class.Operator.Split":180,"../Mathbox.Class.Operator.Spread":181,"../Mathbox.Class.Operator.Subdivide":182,"../Mathbox.Class.Operator.Swizzle":183,"../Mathbox.Class.Operator.Transpose":184,"../Mathbox.Class.Overlay.DOM":185,"../Mathbox.Class.Overlay.HTML":186,"../Mathbox.Class.Present.Move":187,"../Mathbox.Class.Present.Play":188,"../Mathbox.Class.Present.Present":189,"../Mathbox.Class.Present.Reveal":190,"../Mathbox.Class.Present.Slide":191,"../Mathbox.Class.Present.Step":192,"../Mathbox.Class.Present.Track":193,"../Mathbox.Class.Present.Transition":194,"../Mathbox.Class.Rtt.Compose":195,"../Mathbox.Class.Rtt.RTT":196,"../Mathbox.Class.Shader.Shader":197,"../Mathbox.Class.Text.Format":198,"../Mathbox.Class.Text.Label":199,"../Mathbox.Class.Text.Retext":200,"../Mathbox.Class.Text.Text":201,"../Mathbox.Class.Time.Clock":202,"../Mathbox.Class.Time.Now":203,"../Mathbox.Class.Transform.Fragment":204,"../Mathbox.Class.Transform.Layer":205,"../Mathbox.Class.Transform.Mask":206,"../Mathbox.Class.Transform.Transform":207,"../Mathbox.Class.Transform.Transform3":208,"../Mathbox.Class.Transform.Transform4":209,"../Mathbox.Class.Transform.Vertex":210,"../Mathbox.Class.View.Cartesian":211,"../Mathbox.Class.View.Cartesian4":212,"../Mathbox.Class.View.Polar":213,"../Mathbox.Class.View.Spherical":214,"../Mathbox.Class.View.Stereographic":215,"../Mathbox.Class.View.Stereographic4":216,"../Mathbox.Class.View.View":217,"../Mathbox.Classes":218,"../Mathbox.Field":219,"../Prelude":228,"../Unsafe.Coerce":233,"./foreign":220}],222:[function(require,module,exports){
"use strict";

var Types = MathBox.Primitives.Types.Types;

exports.jsMkMat4 = function (value) {
    return [
        value.value0, value.value1, value.value2, value.value3,
        value.value4, value.value5, value.value6, value.value7,
        value.value8, value.value9, value.value10, value.value11,
        value.value12, value.value13, value.value14, value.value15
    ];
};

exports.jsMkEnum = function (value) {
    return function (keys) {
        return Types.enum(value, keys).make();
    };
};

exports.jsMkClasses = function (stringArr) {
    return Types.classes(stringArr).make();
};

exports.jsMkFont = function (stringArr) {
    return Types.font(stringArr).make();
};

exports.jsMkSelect = function (value) {
    return Types.select(value[0]).make();
};

exports.jsMkRound = function (value) {
    return Types.round(value).make();
};

exports.jsMkTimestamp = function (value) {
    return Types.timestamp(value).make();
};

exports.jsMkTranspose = function (order) {
    return Types.transpose(order).make();
};

exports.jsMkSwizzle = function (order) {
    return function (size) {
        return Types.swizzle(order, size).make();
    };
};

exports.jsMkAxis = function (value) {
    return function (allowZero) {
        return Types.axis(value, allowZero).make();
    };
};

exports.jsMkStringColor = function (string) {
    return new THREE.Color(string);
};

exports.jsMkRgbColor = function (r) {
    return function (g) {
        return function (b) {
            return Types.color(r, g, b).make();
        }
    }
};

exports.jsMkBlending = function (value) {
    return Types.blending(value).make();
};

exports.jsMkFilter = function (value) {
    return Types.filter(value).make();
};

exports.jsMkType = function (value) {
    return Types.type(value).make();
};

exports.jsMkScale = function (value) {
    return Types.scale(value).make();
};

exports.jsMkMapping = function (value) {
    return Types.mapping(value).make();
};

exports.jsMkIndexing = function (value) {
    return Types.indexing(value).make();
};

exports.jsMkJoin = function (value) {
    return Types.join(value).make();
};

exports.jsMkShape = function (value) {
    return Types.shape(value).make();
};

exports.jsMkStroke = function (value) {
    return Types.stroke(value).make();
};

exports.jsMkVertexPass = function (value) {
    return Types.vertexPass(value).make();
};

exports.jsMkFragmentPass = function (value) {
    return Types.fragmentPass(value).make();
};

exports.jsMkEase = function (value) {
    return Types.ease(value).make();
};

exports.jsMkFit = function (value) {
    return Types.fit(value).make();
};

exports.jsMkAnchor = function (value) {
    return Types.anchor(value).make();
};

exports.jsMkTransitionState = function (value) {
    return Types.transitionState(value).make();
};

},{}],223:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Data_Foreign = require("../Data.Foreign");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Int = require("../Data.Int");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Data_Show = require("../Data.Show");
var Data_Tuple = require("../Data.Tuple");
var Data_Tuple_Nested = require("../Data.Tuple.Nested");
var Global = require("../Global");
var Prelude = require("../Prelude");
var VertexPassData = (function () {
    function VertexPassData() {

    };
    VertexPassData.value = new VertexPassData();
    return VertexPassData;
})();
var VertexPassView = (function () {
    function VertexPassView() {

    };
    VertexPassView.value = new VertexPassView();
    return VertexPassView;
})();
var VertexPassWorld = (function () {
    function VertexPassWorld() {

    };
    VertexPassWorld.value = new VertexPassWorld();
    return VertexPassWorld;
})();
var VertexPassEye = (function () {
    function VertexPassEye() {

    };
    VertexPassEye.value = new VertexPassEye();
    return VertexPassEye;
})();
var TypeFloat = (function () {
    function TypeFloat() {

    };
    TypeFloat.value = new TypeFloat();
    return TypeFloat;
})();
var TypeShort = (function () {
    function TypeShort() {

    };
    TypeShort.value = new TypeShort();
    return TypeShort;
})();
var TypeUnsignedInt = (function () {
    function TypeUnsignedInt() {

    };
    TypeUnsignedInt.value = new TypeUnsignedInt();
    return TypeUnsignedInt;
})();
var TypeUnsignedShort = (function () {
    function TypeUnsignedShort() {

    };
    TypeUnsignedShort.value = new TypeUnsignedShort();
    return TypeUnsignedShort;
})();
var TypeInt = (function () {
    function TypeInt() {

    };
    TypeInt.value = new TypeInt();
    return TypeInt;
})();
var TypeUnsignedByte = (function () {
    function TypeUnsignedByte() {

    };
    TypeUnsignedByte.value = new TypeUnsignedByte();
    return TypeUnsignedByte;
})();
var TypeByte = (function () {
    function TypeByte() {

    };
    TypeByte.value = new TypeByte();
    return TypeByte;
})();
var Transpose = (function () {
    function Transpose(value0) {
        this.value0 = value0;
    };
    Transpose.create = function (value0) {
        return new Transpose(value0);
    };
    return Transpose;
})();
var TransitionStateEnter = (function () {
    function TransitionStateEnter() {

    };
    TransitionStateEnter.value = new TransitionStateEnter();
    return TransitionStateEnter;
})();
var TransitionStateVisible = (function () {
    function TransitionStateVisible() {

    };
    TransitionStateVisible.value = new TransitionStateVisible();
    return TransitionStateVisible;
})();
var TransitionStateExit = (function () {
    function TransitionStateExit() {

    };
    TransitionStateExit.value = new TransitionStateExit();
    return TransitionStateExit;
})();
var Timestamp = (function () {
    function Timestamp(value0) {
        this.value0 = value0;
    };
    Timestamp.create = function (value0) {
        return new Timestamp(value0);
    };
    return Timestamp;
})();
var Swizzle = (function () {
    function Swizzle(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Swizzle.create = function (value0) {
        return function (value1) {
            return new Swizzle(value0, value1);
        };
    };
    return Swizzle;
})();
var StrokeSolid = (function () {
    function StrokeSolid() {

    };
    StrokeSolid.value = new StrokeSolid();
    return StrokeSolid;
})();
var StrokeDotted = (function () {
    function StrokeDotted() {

    };
    StrokeDotted.value = new StrokeDotted();
    return StrokeDotted;
})();
var StrokeDashed = (function () {
    function StrokeDashed() {

    };
    StrokeDashed.value = new StrokeDashed();
    return StrokeDashed;
})();
var ShapeCircle = (function () {
    function ShapeCircle() {

    };
    ShapeCircle.value = new ShapeCircle();
    return ShapeCircle;
})();
var ShapeSquare = (function () {
    function ShapeSquare() {

    };
    ShapeSquare.value = new ShapeSquare();
    return ShapeSquare;
})();
var ShapeDiamond = (function () {
    function ShapeDiamond() {

    };
    ShapeDiamond.value = new ShapeDiamond();
    return ShapeDiamond;
})();
var ShapeUp = (function () {
    function ShapeUp() {

    };
    ShapeUp.value = new ShapeUp();
    return ShapeUp;
})();
var ShapeDown = (function () {
    function ShapeDown() {

    };
    ShapeDown.value = new ShapeDown();
    return ShapeDown;
})();
var ShapeLeft = (function () {
    function ShapeLeft() {

    };
    ShapeLeft.value = new ShapeLeft();
    return ShapeLeft;
})();
var ShapeRight = (function () {
    function ShapeRight() {

    };
    ShapeRight.value = new ShapeRight();
    return ShapeRight;
})();
var Select = (function () {
    function Select(value0) {
        this.value0 = value0;
    };
    Select.create = function (value0) {
        return new Select(value0);
    };
    return Select;
})();
var ScaleLinear = (function () {
    function ScaleLinear() {

    };
    ScaleLinear.value = new ScaleLinear();
    return ScaleLinear;
})();
var ScaleLog = (function () {
    function ScaleLog() {

    };
    ScaleLog.value = new ScaleLog();
    return ScaleLog;
})();
var Round = (function () {
    function Round(value0) {
        this.value0 = value0;
    };
    Round.create = function (value0) {
        return new Round(value0);
    };
    return Round;
})();
var Mat4 = (function () {
    function Mat4(value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10, value11, value12, value13, value14, value15) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
        this.value6 = value6;
        this.value7 = value7;
        this.value8 = value8;
        this.value9 = value9;
        this.value10 = value10;
        this.value11 = value11;
        this.value12 = value12;
        this.value13 = value13;
        this.value14 = value14;
        this.value15 = value15;
    };
    Mat4.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return function (value6) {
                                return function (value7) {
                                    return function (value8) {
                                        return function (value9) {
                                            return function (value10) {
                                                return function (value11) {
                                                    return function (value12) {
                                                        return function (value13) {
                                                            return function (value14) {
                                                                return function (value15) {
                                                                    return new Mat4(value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10, value11, value12, value13, value14, value15);
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    return Mat4;
})();
var MappingRelative = (function () {
    function MappingRelative() {

    };
    MappingRelative.value = new MappingRelative();
    return MappingRelative;
})();
var MappingAbsolute = (function () {
    function MappingAbsolute() {

    };
    MappingAbsolute.value = new MappingAbsolute();
    return MappingAbsolute;
})();
var JoinMiter = (function () {
    function JoinMiter() {

    };
    JoinMiter.value = new JoinMiter();
    return JoinMiter;
})();
var JoinRound = (function () {
    function JoinRound() {

    };
    JoinRound.value = new JoinRound();
    return JoinRound;
})();
var JoinBevel = (function () {
    function JoinBevel() {

    };
    JoinBevel.value = new JoinBevel();
    return JoinBevel;
})();
var IndexingOriginal = (function () {
    function IndexingOriginal() {

    };
    IndexingOriginal.value = new IndexingOriginal();
    return IndexingOriginal;
})();
var IndexingFinal = (function () {
    function IndexingFinal() {

    };
    IndexingFinal.value = new IndexingFinal();
    return IndexingFinal;
})();
var FragmentPassColor = (function () {
    function FragmentPassColor() {

    };
    FragmentPassColor.value = new FragmentPassColor();
    return FragmentPassColor;
})();
var FragmentPassLight = (function () {
    function FragmentPassLight() {

    };
    FragmentPassLight.value = new FragmentPassLight();
    return FragmentPassLight;
})();
var FragmentPassRgba = (function () {
    function FragmentPassRgba() {

    };
    FragmentPassRgba.value = new FragmentPassRgba();
    return FragmentPassRgba;
})();
var Font = (function () {
    function Font(value0) {
        this.value0 = value0;
    };
    Font.create = function (value0) {
        return new Font(value0);
    };
    return Font;
})();
var FitX = (function () {
    function FitX() {

    };
    FitX.value = new FitX();
    return FitX;
})();
var FitY = (function () {
    function FitY() {

    };
    FitY.value = new FitY();
    return FitY;
})();
var FitContain = (function () {
    function FitContain() {

    };
    FitContain.value = new FitContain();
    return FitContain;
})();
var FitCover = (function () {
    function FitCover() {

    };
    FitCover.value = new FitCover();
    return FitCover;
})();
var FilterNearest = (function () {
    function FilterNearest() {

    };
    FilterNearest.value = new FilterNearest();
    return FilterNearest;
})();
var FilterLinearMipmapLinear = (function () {
    function FilterLinearMipmapLinear() {

    };
    FilterLinearMipmapLinear.value = new FilterLinearMipmapLinear();
    return FilterLinearMipmapLinear;
})();
var FilterLinearMipMapNearest = (function () {
    function FilterLinearMipMapNearest() {

    };
    FilterLinearMipMapNearest.value = new FilterLinearMipMapNearest();
    return FilterLinearMipMapNearest;
})();
var FilterNearestMipMapLinear = (function () {
    function FilterNearestMipMapLinear() {

    };
    FilterNearestMipMapLinear.value = new FilterNearestMipMapLinear();
    return FilterNearestMipMapLinear;
})();
var FilterLinear = (function () {
    function FilterLinear() {

    };
    FilterLinear.value = new FilterLinear();
    return FilterLinear;
})();
var FilterNearestMipMapNearest = (function () {
    function FilterNearestMipMapNearest() {

    };
    FilterNearestMipMapNearest.value = new FilterNearestMipMapNearest();
    return FilterNearestMipMapNearest;
})();
var Enum = (function () {
    function Enum(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Enum.create = function (value0) {
        return function (value1) {
            return new Enum(value0, value1);
        };
    };
    return Enum;
})();
var EaseLinear = (function () {
    function EaseLinear() {

    };
    EaseLinear.value = new EaseLinear();
    return EaseLinear;
})();
var EaseCosine = (function () {
    function EaseCosine() {

    };
    EaseCosine.value = new EaseCosine();
    return EaseCosine;
})();
var RgbColor = (function () {
    function RgbColor(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    RgbColor.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new RgbColor(value0, value1, value2);
            };
        };
    };
    return RgbColor;
})();
var StringColor = (function () {
    function StringColor(value0) {
        this.value0 = value0;
    };
    StringColor.create = function (value0) {
        return new StringColor(value0);
    };
    return StringColor;
})();
var Classes = (function () {
    function Classes(value0) {
        this.value0 = value0;
    };
    Classes.create = function (value0) {
        return new Classes(value0);
    };
    return Classes;
})();
var BlendingNo = (function () {
    function BlendingNo() {

    };
    BlendingNo.value = new BlendingNo();
    return BlendingNo;
})();
var BlendingNormal = (function () {
    function BlendingNormal() {

    };
    BlendingNormal.value = new BlendingNormal();
    return BlendingNormal;
})();
var BlendingAdd = (function () {
    function BlendingAdd() {

    };
    BlendingAdd.value = new BlendingAdd();
    return BlendingAdd;
})();
var BlendingSubstract = (function () {
    function BlendingSubstract() {

    };
    BlendingSubstract.value = new BlendingSubstract();
    return BlendingSubstract;
})();
var BlendingMultiply = (function () {
    function BlendingMultiply() {

    };
    BlendingMultiply.value = new BlendingMultiply();
    return BlendingMultiply;
})();
var BlendingCustom = (function () {
    function BlendingCustom() {

    };
    BlendingCustom.value = new BlendingCustom();
    return BlendingCustom;
})();
var Axis0 = (function () {
    function Axis0() {

    };
    Axis0.value = new Axis0();
    return Axis0;
})();
var AxisX = (function () {
    function AxisX() {

    };
    AxisX.value = new AxisX();
    return AxisX;
})();
var AxisY = (function () {
    function AxisY() {

    };
    AxisY.value = new AxisY();
    return AxisY;
})();
var AxisZ = (function () {
    function AxisZ() {

    };
    AxisZ.value = new AxisZ();
    return AxisZ;
})();
var AxisW = (function () {
    function AxisW() {

    };
    AxisW.value = new AxisW();
    return AxisW;
})();
var AnchorFirst = (function () {
    function AnchorFirst() {

    };
    AnchorFirst.value = new AnchorFirst();
    return AnchorFirst;
})();
var AnchorMiddle = (function () {
    function AnchorMiddle() {

    };
    AnchorMiddle.value = new AnchorMiddle();
    return AnchorMiddle;
})();
var AnchorLast = (function () {
    function AnchorLast() {

    };
    AnchorLast.value = new AnchorLast();
    return AnchorLast;
})();
var xyz = [ 1, 2, 3 ];
var wxyz = [ 4, 1, 2, 3 ];
var unsafeMkColor = function (s) {
    return new StringColor(s);
};
var transposeToJs = function (c) {
    return $foreign.jsMkTranspose;
};
var timestampToJs = function (t) {
    return $foreign.jsMkTimestamp;
};
var swizzleToJs = function (v) {
    return $foreign.jsMkSwizzle(Data_Nullable.toNullable(v.value0))(Data_Nullable.toNullable(v.value1));
};
var showVertexPass = new Data_Show.Show(function (v) {
    if (v instanceof VertexPassData) {
        return "data";
    };
    if (v instanceof VertexPassView) {
        return "view";
    };
    if (v instanceof VertexPassWorld) {
        return "world";
    };
    if (v instanceof VertexPassEye) {
        return "eye";
    };
    throw new Error("Failed pattern match at Mathbox.Types line 416, column 1 - line 416, column 43: " + [ v.constructor.name ]);
});
var vertexPassToJs = function (e) {
    return $foreign.jsMkVertexPass(Data_Show.show(showVertexPass)(e));
};
var showType = new Data_Show.Show(function (v) {
    if (v instanceof TypeFloat) {
        return "float";
    };
    if (v instanceof TypeShort) {
        return "short";
    };
    if (v instanceof TypeUnsignedInt) {
        return "unsignedInt";
    };
    if (v instanceof TypeUnsignedShort) {
        return "unsignedShort";
    };
    if (v instanceof TypeInt) {
        return "int";
    };
    if (v instanceof TypeUnsignedByte) {
        return "unsignedByte";
    };
    if (v instanceof TypeByte) {
        return "byte";
    };
    throw new Error("Failed pattern match at Mathbox.Types line 299, column 1 - line 299, column 31: " + [ v.constructor.name ]);
});
var typeToJs = function (e) {
    return $foreign.jsMkType(Data_Show.show(showType)(e));
};
var showTransitionState = new Data_Show.Show(function (v) {
    if (v instanceof TransitionStateEnter) {
        return "enter";
    };
    if (v instanceof TransitionStateVisible) {
        return "visible";
    };
    if (v instanceof TransitionStateExit) {
        return "exit";
    };
    throw new Error("Failed pattern match at Mathbox.Types line 497, column 1 - line 497, column 53: " + [ v.constructor.name ]);
});
var transitionStateToJs = function (e) {
    return $foreign.jsMkTransitionState(Data_Show.show(showTransitionState)(e));
};
var showStroke = new Data_Show.Show(function (v) {
    if (v instanceof StrokeSolid) {
        return "solid";
    };
    if (v instanceof StrokeDotted) {
        return "dotted";
    };
    if (v instanceof StrokeDashed) {
        return "dashed";
    };
    throw new Error("Failed pattern match at Mathbox.Types line 400, column 1 - line 400, column 35: " + [ v.constructor.name ]);
});
var strokeToJs = function (e) {
    return $foreign.jsMkStroke(Data_Show.show(showStroke)(e));
};
var showShape = new Data_Show.Show(function (v) {
    if (v instanceof ShapeCircle) {
        return "circle";
    };
    if (v instanceof ShapeSquare) {
        return "square";
    };
    if (v instanceof ShapeDiamond) {
        return "diamond";
    };
    if (v instanceof ShapeUp) {
        return "up";
    };
    if (v instanceof ShapeDown) {
        return "down";
    };
    if (v instanceof ShapeLeft) {
        return "left";
    };
    if (v instanceof ShapeRight) {
        return "right";
    };
    throw new Error("Failed pattern match at Mathbox.Types line 380, column 1 - line 380, column 33: " + [ v.constructor.name ]);
});
var showScale = new Data_Show.Show(function (v) {
    if (v instanceof ScaleLinear) {
        return "linear";
    };
    if (v instanceof ScaleLog) {
        return "log";
    };
    throw new Error("Failed pattern match at Mathbox.Types line 319, column 1 - line 319, column 33: " + [ v.constructor.name ]);
});
var showMapping = new Data_Show.Show(function (v) {
    if (v instanceof MappingRelative) {
        return "relative";
    };
    if (v instanceof MappingAbsolute) {
        return "absolute";
    };
    throw new Error("Failed pattern match at Mathbox.Types line 334, column 1 - line 334, column 37: " + [ v.constructor.name ]);
});
var showJoin = new Data_Show.Show(function (v) {
    if (v instanceof JoinMiter) {
        return "miter";
    };
    if (v instanceof JoinRound) {
        return "round";
    };
    if (v instanceof JoinBevel) {
        return "bevel";
    };
    throw new Error("Failed pattern match at Mathbox.Types line 364, column 1 - line 364, column 31: " + [ v.constructor.name ]);
});
var showIndexing = new Data_Show.Show(function (v) {
    if (v instanceof IndexingOriginal) {
        return "original";
    };
    if (v instanceof IndexingFinal) {
        return "final";
    };
    throw new Error("Failed pattern match at Mathbox.Types line 349, column 1 - line 349, column 39: " + [ v.constructor.name ]);
});
var showFragmentPass = new Data_Show.Show(function (v) {
    if (v instanceof FragmentPassColor) {
        return "color";
    };
    if (v instanceof FragmentPassLight) {
        return "light";
    };
    if (v instanceof FragmentPassRgba) {
        return "rgba";
    };
    throw new Error("Failed pattern match at Mathbox.Types line 433, column 1 - line 433, column 47: " + [ v.constructor.name ]);
});
var showFit = new Data_Show.Show(function (v) {
    if (v instanceof FitX) {
        return "x";
    };
    if (v instanceof FitY) {
        return "y";
    };
    if (v instanceof FitContain) {
        return "contain";
    };
    if (v instanceof FitCover) {
        return "cover";
    };
    throw new Error("Failed pattern match at Mathbox.Types line 464, column 1 - line 464, column 29: " + [ v.constructor.name ]);
});
var showFilter = new Data_Show.Show(function (v) {
    if (v instanceof FilterNearest) {
        return "nearest";
    };
    if (v instanceof FilterLinearMipmapLinear) {
        return "linearMipmapLinear";
    };
    if (v instanceof FilterLinearMipMapNearest) {
        return "linearMipMapNearest";
    };
    if (v instanceof FilterNearestMipMapLinear) {
        return "nearestMipMapLinear";
    };
    if (v instanceof FilterLinear) {
        return "linear";
    };
    if (v instanceof FilterNearestMipMapNearest) {
        return "nearestMipMapNearest";
    };
    throw new Error("Failed pattern match at Mathbox.Types line 280, column 1 - line 280, column 35: " + [ v.constructor.name ]);
});
var showEase = new Data_Show.Show(function (v) {
    if (v instanceof EaseLinear) {
        return "linear";
    };
    if (v instanceof EaseCosine) {
        return "cosine";
    };
    throw new Error("Failed pattern match at Mathbox.Types line 449, column 1 - line 449, column 31: " + [ v.constructor.name ]);
});
var showBlending = new Data_Show.Show(function (v) {
    if (v instanceof BlendingNo) {
        return "no";
    };
    if (v instanceof BlendingNormal) {
        return "normal";
    };
    if (v instanceof BlendingAdd) {
        return "add";
    };
    if (v instanceof BlendingSubstract) {
        return "substract";
    };
    if (v instanceof BlendingMultiply) {
        return "multiply";
    };
    if (v instanceof BlendingCustom) {
        return "custom";
    };
    throw new Error("Failed pattern match at Mathbox.Types line 261, column 1 - line 261, column 39: " + [ v.constructor.name ]);
});
var showAnchor = new Data_Show.Show(function (v) {
    if (v instanceof AnchorFirst) {
        return "first";
    };
    if (v instanceof AnchorMiddle) {
        return "middle";
    };
    if (v instanceof AnchorLast) {
        return "last";
    };
    throw new Error("Failed pattern match at Mathbox.Types line 481, column 1 - line 481, column 35: " + [ v.constructor.name ]);
});
var shapeToJs = function (e) {
    return $foreign.jsMkShape(Data_Show.show(showShape)(e));
};
var selectToJs = function (v) {
    return $foreign.jsMkSelect(v.value0);
};
var scaleToJs = function (e) {
    return $foreign.jsMkScale(Data_Show.show(showScale)(e));
};
var sansSerif = "sans-serif";
var roundToJs = function (c) {
    return $foreign.jsMkRound;
};
var positive = function (n) {
    return n;
};
var mkVertexPass0 = VertexPassView.value;
var mkVec4 = function (a) {
    return function (b) {
        return function (c) {
            return function (d) {
                return [ Data_Int.toNumber(a), Data_Int.toNumber(b), Data_Int.toNumber(c), Data_Int.toNumber(d) ];
            };
        };
    };
};
var mkVec40 = mkVec4(0)(0)(0)(0);
var mkVec3 = function (x) {
    return function (y) {
        return function (z) {
            return [ Data_Int.toNumber(x), Data_Int.toNumber(y), Data_Int.toNumber(z) ];
        };
    };
};
var mkVec30 = mkVec3(0)(0)(0);
var mkVec2 = function (x) {
    return function (y) {
        return [ Data_Int.toNumber(x), Data_Int.toNumber(y) ];
    };
};
var mkType0 = TypeUnsignedByte.value;
var mkTranspose0 = new Transpose(Data_Maybe.Nothing.value);
var mkTranspose = function (a) {
    return new Transpose(new Data_Maybe.Just(a));
};
var mkTransitionState0 = TransitionStateEnter.value;
var mkSwizzle1 = function (ls) {
    return new Swizzle(new Data_Maybe.Just(ls), Data_Maybe.Nothing.value);
};
var mkSwizzle0 = new Swizzle(Data_Maybe.Nothing.value, Data_Maybe.Nothing.value);
var mkSwizzle = function (is) {
    return function (i) {
        return new Swizzle(new Data_Maybe.Just(is), new Data_Maybe.Just(i));
    };
};
var mkStroke0 = StrokeSolid.value;
var mkString0 = "";
var mkString = function (s) {
    return s;
};
var mkShape0 = ShapeCircle.value;
var mkSelect = function (a) {
    return new Select(a);
};
var mkSelect0 = mkSelect([  ]);
var mkScale0 = ScaleLinear.value;
var mkRound0 = new Round(Data_Maybe.Nothing.value);
var mkRound = function (n) {
    return new Round(new Data_Maybe.Just(n));
};
var mkQuat = function (x) {
    return function (y) {
        return function (z) {
            return function (w) {
                return mkVec4(x)(y)(z)(w);
            };
        };
    };
};
var mkQuat0 = mkQuat(0)(0)(0)(1);
var mkObject0 = "{}";
var mkObject = function (s) {
    return s;
};
var mkMat4 = function (n11) {
    return function (n12) {
        return function (n13) {
            return function (n14) {
                return function (n21) {
                    return function (n22) {
                        return function (n23) {
                            return function (n24) {
                                return function (n31) {
                                    return function (n32) {
                                        return function (n33) {
                                            return function (n34) {
                                                return function (n41) {
                                                    return function (n42) {
                                                        return function (n43) {
                                                            return function (n44) {
                                                                return new Mat4(Data_Int.toNumber(n11), Data_Int.toNumber(n12), Data_Int.toNumber(n13), Data_Int.toNumber(n14), Data_Int.toNumber(n21), Data_Int.toNumber(n22), Data_Int.toNumber(n23), Data_Int.toNumber(n24), Data_Int.toNumber(n31), Data_Int.toNumber(n32), Data_Int.toNumber(n33), Data_Int.toNumber(n34), Data_Int.toNumber(n41), Data_Int.toNumber(n42), Data_Int.toNumber(n43), Data_Int.toNumber(n44));
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var mkMapping0 = MappingRelative.value;
var mkJoin0 = JoinMiter.value;
var mkIndexing0 = IndexingOriginal.value;
var mkFragmentPass0 = FragmentPassLight.value;
var mkFont = function (s) {
    return new Font([ s ]);
};
var mkFit0 = FitContain.value;
var mkFilter0 = FilterNearest.value;
var mkEnum = function (i) {
    return function (is) {
        return new Enum(i, is);
    };
};
var mkEase0 = EaseLinear.value;
var mkData0 = Data_Foreign.toForeign("");
var mkColor0 = new RgbColor(0.5, 0.5, 0.5);
var mkColor = function (r) {
    return function (g) {
        return function (b) {
            return new RgbColor(Data_Int.toNumber(r), Data_Int.toNumber(g), Data_Int.toNumber(b));
        };
    };
};
var mkClasses0 = new Classes([  ]);
var mkClasses = function (ss) {
    return new Classes(ss);
};
var mkBlending0 = BlendingNormal.value;
var mkAxis0 = AxisX.value;
var mkAnchor0 = AnchorMiddle.value;
var mat4ToJs = function (m) {
    return $foreign.jsMkMat4(m);
};
var mappingToJs = function (e) {
    return $foreign.jsMkMapping(Data_Show.show(showMapping)(e));
};
var joinToJs = function (e) {
    return $foreign.jsMkJoin(Data_Show.show(showJoin)(e));
};
var infinity = Global.infinity;
var indexingToJs = function (e) {
    return $foreign.jsMkIndexing(Data_Show.show(showIndexing)(e));
};
var glsl = "glsl";
var fragmentPassToJs = function (e) {
    return $foreign.jsMkFragmentPass(Data_Show.show(showFragmentPass)(e));
};
var fontToJs = function (v) {
    return $foreign.jsMkFont(v.value0);
};
var fitToJs = function (e) {
    return $foreign.jsMkFit(Data_Show.show(showFit)(e));
};
var filterToJs = function (e) {
    return $foreign.jsMkFilter(Data_Show.show(showFilter)(e));
};
var enumToJs = function (v) {
    return $foreign.jsMkEnum(v.value0)(v.value1);
};
var easeToJs = function (e) {
    return $foreign.jsMkEase(Data_Show.show(showEase)(e));
};
var colorToJs = function (v) {
    if (v instanceof RgbColor) {
        return $foreign.jsMkRgbColor(v.value0)(v.value1)(v.value2);
    };
    if (v instanceof StringColor) {
        return $foreign.jsMkStringColor(v.value0);
    };
    throw new Error("Failed pattern match at Mathbox.Types line 138, column 1 - line 138, column 30: " + [ v.constructor.name ]);
};
var classesToJs = function (v) {
    return $foreign.jsMkClasses(v.value0);
};
var camera = "camera";
var blendingToJs = function (e) {
    return $foreign.jsMkBlending(Data_Show.show(showBlending)(e));
};
var axisToInt = function (v) {
    if (v instanceof Axis0) {
        return 0;
    };
    if (v instanceof AxisX) {
        return 1;
    };
    if (v instanceof AxisY) {
        return 2;
    };
    if (v instanceof AxisZ) {
        return 3;
    };
    if (v instanceof AxisW) {
        return 4;
    };
    throw new Error("Failed pattern match at Mathbox.Types line 214, column 1 - line 214, column 25: " + [ v.constructor.name ]);
};
var axisToJs = function (a) {
    return $foreign.jsMkAxis(axisToInt(a))(true);
};
var axis4 = AxisW.value;
var axis3 = AxisZ.value;
var axis2 = AxisY.value;
var axis1 = AxisX.value;
var axis0 = Axis0.value;
var anchorToJs = function (e) {
    return $foreign.jsMkAnchor(Data_Show.show(showAnchor)(e));
};
module.exports = {
    AnchorFirst: AnchorFirst, 
    AnchorMiddle: AnchorMiddle, 
    AnchorLast: AnchorLast, 
    Axis0: Axis0, 
    AxisX: AxisX, 
    AxisY: AxisY, 
    AxisZ: AxisZ, 
    AxisW: AxisW, 
    BlendingNo: BlendingNo, 
    BlendingNormal: BlendingNormal, 
    BlendingAdd: BlendingAdd, 
    BlendingSubstract: BlendingSubstract, 
    BlendingMultiply: BlendingMultiply, 
    BlendingCustom: BlendingCustom, 
    Classes: Classes, 
    RgbColor: RgbColor, 
    StringColor: StringColor, 
    EaseLinear: EaseLinear, 
    EaseCosine: EaseCosine, 
    Enum: Enum, 
    FilterNearest: FilterNearest, 
    FilterLinearMipmapLinear: FilterLinearMipmapLinear, 
    FilterLinearMipMapNearest: FilterLinearMipMapNearest, 
    FilterNearestMipMapLinear: FilterNearestMipMapLinear, 
    FilterLinear: FilterLinear, 
    FilterNearestMipMapNearest: FilterNearestMipMapNearest, 
    FitX: FitX, 
    FitY: FitY, 
    FitContain: FitContain, 
    FitCover: FitCover, 
    Font: Font, 
    FragmentPassColor: FragmentPassColor, 
    FragmentPassLight: FragmentPassLight, 
    FragmentPassRgba: FragmentPassRgba, 
    IndexingOriginal: IndexingOriginal, 
    IndexingFinal: IndexingFinal, 
    JoinMiter: JoinMiter, 
    JoinRound: JoinRound, 
    JoinBevel: JoinBevel, 
    MappingRelative: MappingRelative, 
    MappingAbsolute: MappingAbsolute, 
    Mat4: Mat4, 
    Round: Round, 
    ScaleLinear: ScaleLinear, 
    ScaleLog: ScaleLog, 
    Select: Select, 
    ShapeCircle: ShapeCircle, 
    ShapeSquare: ShapeSquare, 
    ShapeDiamond: ShapeDiamond, 
    ShapeUp: ShapeUp, 
    ShapeDown: ShapeDown, 
    ShapeLeft: ShapeLeft, 
    ShapeRight: ShapeRight, 
    StrokeSolid: StrokeSolid, 
    StrokeDotted: StrokeDotted, 
    StrokeDashed: StrokeDashed, 
    Swizzle: Swizzle, 
    Timestamp: Timestamp, 
    TransitionStateEnter: TransitionStateEnter, 
    TransitionStateVisible: TransitionStateVisible, 
    TransitionStateExit: TransitionStateExit, 
    Transpose: Transpose, 
    TypeFloat: TypeFloat, 
    TypeShort: TypeShort, 
    TypeUnsignedInt: TypeUnsignedInt, 
    TypeUnsignedShort: TypeUnsignedShort, 
    TypeInt: TypeInt, 
    TypeUnsignedByte: TypeUnsignedByte, 
    TypeByte: TypeByte, 
    VertexPassData: VertexPassData, 
    VertexPassView: VertexPassView, 
    VertexPassWorld: VertexPassWorld, 
    VertexPassEye: VertexPassEye, 
    anchorToJs: anchorToJs, 
    axis0: axis0, 
    axis1: axis1, 
    axis2: axis2, 
    axis3: axis3, 
    axis4: axis4, 
    axisToInt: axisToInt, 
    axisToJs: axisToJs, 
    blendingToJs: blendingToJs, 
    camera: camera, 
    classesToJs: classesToJs, 
    colorToJs: colorToJs, 
    easeToJs: easeToJs, 
    enumToJs: enumToJs, 
    filterToJs: filterToJs, 
    fitToJs: fitToJs, 
    fontToJs: fontToJs, 
    fragmentPassToJs: fragmentPassToJs, 
    glsl: glsl, 
    indexingToJs: indexingToJs, 
    infinity: infinity, 
    joinToJs: joinToJs, 
    mappingToJs: mappingToJs, 
    mat4ToJs: mat4ToJs, 
    mkAnchor0: mkAnchor0, 
    mkAxis0: mkAxis0, 
    mkBlending0: mkBlending0, 
    mkClasses: mkClasses, 
    mkClasses0: mkClasses0, 
    mkColor: mkColor, 
    mkColor0: mkColor0, 
    mkData0: mkData0, 
    mkEase0: mkEase0, 
    mkEnum: mkEnum, 
    mkFilter0: mkFilter0, 
    mkFit0: mkFit0, 
    mkFont: mkFont, 
    mkFragmentPass0: mkFragmentPass0, 
    mkIndexing0: mkIndexing0, 
    mkJoin0: mkJoin0, 
    mkMapping0: mkMapping0, 
    mkMat4: mkMat4, 
    mkObject: mkObject, 
    mkObject0: mkObject0, 
    mkQuat: mkQuat, 
    mkQuat0: mkQuat0, 
    mkRound: mkRound, 
    mkRound0: mkRound0, 
    mkScale0: mkScale0, 
    mkSelect: mkSelect, 
    mkSelect0: mkSelect0, 
    mkShape0: mkShape0, 
    mkString: mkString, 
    mkString0: mkString0, 
    mkStroke0: mkStroke0, 
    mkSwizzle: mkSwizzle, 
    mkSwizzle0: mkSwizzle0, 
    mkSwizzle1: mkSwizzle1, 
    mkTransitionState0: mkTransitionState0, 
    mkTranspose: mkTranspose, 
    mkTranspose0: mkTranspose0, 
    mkType0: mkType0, 
    mkVec2: mkVec2, 
    mkVec3: mkVec3, 
    mkVec30: mkVec30, 
    mkVec4: mkVec4, 
    mkVec40: mkVec40, 
    mkVertexPass0: mkVertexPass0, 
    positive: positive, 
    roundToJs: roundToJs, 
    sansSerif: sansSerif, 
    scaleToJs: scaleToJs, 
    selectToJs: selectToJs, 
    shapeToJs: shapeToJs, 
    strokeToJs: strokeToJs, 
    swizzleToJs: swizzleToJs, 
    timestampToJs: timestampToJs, 
    transitionStateToJs: transitionStateToJs, 
    transposeToJs: transposeToJs, 
    typeToJs: typeToJs, 
    unsafeMkColor: unsafeMkColor, 
    vertexPassToJs: vertexPassToJs, 
    wxyz: wxyz, 
    xyz: xyz, 
    showBlending: showBlending, 
    showFilter: showFilter, 
    showType: showType, 
    showScale: showScale, 
    showMapping: showMapping, 
    showIndexing: showIndexing, 
    showJoin: showJoin, 
    showShape: showShape, 
    showStroke: showStroke, 
    showVertexPass: showVertexPass, 
    showFragmentPass: showFragmentPass, 
    showEase: showEase, 
    showFit: showFit, 
    showAnchor: showAnchor, 
    showTransitionState: showTransitionState, 
    jsMkAnchor: $foreign.jsMkAnchor, 
    jsMkAxis: $foreign.jsMkAxis, 
    jsMkBlending: $foreign.jsMkBlending, 
    jsMkClasses: $foreign.jsMkClasses, 
    jsMkEase: $foreign.jsMkEase, 
    jsMkEnum: $foreign.jsMkEnum, 
    jsMkFilter: $foreign.jsMkFilter, 
    jsMkFit: $foreign.jsMkFit, 
    jsMkFont: $foreign.jsMkFont, 
    jsMkFragmentPass: $foreign.jsMkFragmentPass, 
    jsMkIndexing: $foreign.jsMkIndexing, 
    jsMkJoin: $foreign.jsMkJoin, 
    jsMkMapping: $foreign.jsMkMapping, 
    jsMkMat4: $foreign.jsMkMat4, 
    jsMkRgbColor: $foreign.jsMkRgbColor, 
    jsMkRound: $foreign.jsMkRound, 
    jsMkScale: $foreign.jsMkScale, 
    jsMkSelect: $foreign.jsMkSelect, 
    jsMkShape: $foreign.jsMkShape, 
    jsMkStringColor: $foreign.jsMkStringColor, 
    jsMkStroke: $foreign.jsMkStroke, 
    jsMkSwizzle: $foreign.jsMkSwizzle, 
    jsMkTimestamp: $foreign.jsMkTimestamp, 
    jsMkTransitionState: $foreign.jsMkTransitionState, 
    jsMkTranspose: $foreign.jsMkTranspose, 
    jsMkType: $foreign.jsMkType, 
    jsMkVertexPass: $foreign.jsMkVertexPass
};

},{"../Data.Foreign":70,"../Data.Function.Uncurried":72,"../Data.Int":85,"../Data.Maybe":91,"../Data.Nullable":103,"../Data.Show":118,"../Data.Tuple":133,"../Data.Tuple.Nested":132,"../Global":140,"../Prelude":228,"./foreign":222}],224:[function(require,module,exports){
"use strict";

// module Partial.Unsafe

exports.unsafePartial = function (f) {
  return f();
};

},{}],225:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Partial = require("../Partial");
var unsafePartialBecause = function (v) {
    return function (x) {
        return $foreign.unsafePartial(function (dictPartial) {
            return x(dictPartial);
        });
    };
};
var unsafeCrashWith = function (msg) {
    return $foreign.unsafePartial(function (dictPartial) {
        return Partial.crashWith(dictPartial)(msg);
    });
};
module.exports = {
    unsafeCrashWith: unsafeCrashWith, 
    unsafePartialBecause: unsafePartialBecause, 
    unsafePartial: $foreign.unsafePartial
};

},{"../Partial":227,"./foreign":224}],226:[function(require,module,exports){
"use strict";

// module Partial

exports.crashWith = function () {
  return function (msg) {
    throw new Error(msg);
  };
};

},{}],227:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var crash = function (dictPartial) {
    return $foreign.crashWith(dictPartial)("Partial.crash: partial function");
};
module.exports = {
    crash: crash, 
    crashWith: $foreign.crashWith
};

},{"./foreign":226}],228:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad = require("../Control.Monad");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Boolean = require("../Data.Boolean");
var Data_BooleanAlgebra = require("../Data.BooleanAlgebra");
var Data_Bounded = require("../Data.Bounded");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_DivisionRing = require("../Data.DivisionRing");
var Data_Eq = require("../Data.Eq");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Field = require("../Data.Field");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_NaturalTransformation = require("../Data.NaturalTransformation");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Ring = require("../Data.Ring");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Unit = require("../Data.Unit");
var Data_Void = require("../Data.Void");
module.exports = {};

},{"../Control.Applicative":3,"../Control.Apply":5,"../Control.Bind":9,"../Control.Category":10,"../Control.Monad":31,"../Control.Semigroupoid":35,"../Data.Boolean":49,"../Data.BooleanAlgebra":50,"../Data.Bounded":52,"../Data.CommutativeRing":53,"../Data.DivisionRing":55,"../Data.Eq":58,"../Data.EuclideanRing":60,"../Data.Field":61,"../Data.Function":73,"../Data.Functor":76,"../Data.HeytingAlgebra":80,"../Data.NaturalTransformation":99,"../Data.Ord":107,"../Data.Ordering":108,"../Data.Ring":110,"../Data.Semigroup":114,"../Data.Semiring":116,"../Data.Show":118,"../Data.Unit":137,"../Data.Void":138}],229:[function(require,module,exports){
// module Signal

function make(initial) {
  var subs = [];
  var val = initial;
  var sig = {
    subscribe: function(sub) {
      subs.push(sub);
      sub(val);
    },
    get: function() { return val; },
    set: function(newval) {
      val = newval;
      subs.forEach(function(sub) { sub(newval); });
    }
  };
  return sig;
};

exports.constant = make;

exports.mapSig = function(fun) {
  return function(sig) {
    var out = make(fun(sig.get()));
    sig.subscribe(function(val) { out.set(fun(val)); });
    return out;
  };
};


exports.applySig = function(fun) {
  return function(sig) {
    var out = make(fun.get()(sig.get()));
    var produce = function() { out.set(fun.get()(sig.get())); };
    fun.subscribe(produce);
    sig.subscribe(produce);
    return out;
  };
};

exports.merge = function(sig1) {
  return function(sig2) {
    var out = make(sig1.get());
    sig2.subscribe(out.set);
    sig1.subscribe(out.set);
    return out;
  };
};

exports.foldp = function(fun) {
  return function(seed) {
    return function(sig) {
      var acc = seed;
      var out = make(acc);
      sig.subscribe(function(val) {
        acc = fun(val)(acc);
        out.set(acc);
      });
      return out;
    };
  };
};

exports.sampleOn = function(sig1) {
  return function(sig2) {
    var out = make(sig2.get());
    sig1.subscribe(function() {
      out.set(sig2.get());
    });
    return out;
  };
};

exports.dropRepeats = function(eq) {
  return function(sig) {
    var val = sig.get();
    var out = make(val);
    sig.subscribe(function(newval) {
      if (!eq["eq"](val)(newval)) {
        val = newval;
        out.set(val);
      }
    });
    return out;
  };
};

exports["dropRepeats'"] = function(sig) {
  var val = sig.get();
  var out = make(val);
  sig.subscribe(function(newval) {
    if (val !== newval) {
      val = newval;
      out.set(val);
    }
  });
  return out;
};

exports.runSignal =
  function runSignal(sig) {
    return function() {
      sig.subscribe(function(val) {
        val();
      });
      return {};
    };
  };

exports.unwrap = function(sig) {
  return function() {
    var out = make(sig.get()());
    sig.subscribe(function(val) { out.set(val()); });
    return out;
  };
};

exports.filter = function(fn) {
  return function(seed) {
    return function(sig) {
      var out = make(fn(sig.get()) ? sig.get() : seed);
      sig.subscribe(function(val) { if (fn(val)) out.set(val); });
      return out;
    };
  };
};

exports.flattenArray = function(sig) {
  return function(seed) {
    var first = sig.get().slice();
    if (first.length > 0) {
      seed = first[0];
    } else {
      first = null;
    }
    var out = make(seed);
    var feed = function(items) { items.forEach(out.set); };
    setTimeout(function() { sig.subscribe(function(val) {
      if (first === null) {
        feed(val);
      } else {
        feed(first.slice(1));
        first = null;
      }
    }); }, 0);
    return out;
  };
};

},{}],230:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Semigroup = require("../Data.Semigroup");
var Prelude = require("../Prelude");
var squigglyMap = function (dictFunctor) {
    return Data_Functor.map(dictFunctor);
};
var squigglyApply = function (dictApply) {
    return Control_Apply.apply(dictApply);
};
var semigroupSignal = new Data_Semigroup.Semigroup($foreign.merge);
var monoidSignal = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupSignal;
    }, $foreign.constant(Data_Monoid.mempty(dictMonoid)));
};
var mergeMany = function (dictFunctor) {
    return function (dictFoldable) {
        return function (sigs) {
            var mergeMaybe = function (v) {
                return function (v1) {
                    if (v1 instanceof Data_Maybe.Nothing) {
                        return v;
                    };
                    if (v instanceof Data_Maybe.Nothing) {
                        return v1;
                    };
                    if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Just) {
                        return new Data_Maybe.Just($foreign.merge(v.value0)(v1.value0));
                    };
                    throw new Error("Failed pattern match at Signal line 53, column 9 - line 53, column 33: " + [ v.constructor.name, v1.constructor.name ]);
                };
            };
            return Data_Foldable.foldl(dictFoldable)(mergeMaybe)(Data_Maybe.Nothing.value)(Data_Functor.map(dictFunctor)(Data_Maybe.Just.create)(sigs));
        };
    };
};
var functorSignal = new Data_Functor.Functor($foreign.mapSig);
var flippedMap = function (dictFunctor) {
    return Data_Function.flip(Data_Functor.map(dictFunctor));
};
var flatten = function (dictFunctor) {
    return function (dictFoldable) {
        return function (sig) {
            return $foreign.flattenArray(flippedMap(functorSignal)(sig)(function ($14) {
                return Data_Foldable.fold(dictFoldable)(Data_Monoid.monoidArray)(Data_Functor.map(dictFunctor)(function (i) {
                    return [ i ];
                })($14));
            }));
        };
    };
};
var filterMap = function (f) {
    return function (def) {
        return function (sig) {
            return Data_Functor.map(functorSignal)(Data_Maybe.fromMaybe(def))($foreign.filter(Data_Maybe.isJust)(new Data_Maybe.Just(def))(Data_Functor.map(functorSignal)(f)(sig)));
        };
    };
};
var applySignal = new Control_Apply.Apply(function () {
    return functorSignal;
}, $foreign.applySig);
var map2 = function (f) {
    return function (a) {
        return function (b) {
            return squigglyApply(applySignal)(squigglyMap(functorSignal)(f)(a))(b);
        };
    };
};
var map3 = function (f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyMap(functorSignal)(f)(a))(b))(c);
            };
        };
    };
};
var map4 = function (f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyMap(functorSignal)(f)(a))(b))(c))(d);
                };
            };
        };
    };
};
var map5 = function (f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyApply(applySignal)(squigglyMap(functorSignal)(f)(a))(b))(c))(d))(e);
                    };
                };
            };
        };
    };
};
var applicativeSignal = new Control_Applicative.Applicative(function () {
    return applySignal;
}, $foreign.constant);
module.exports = {
    filterMap: filterMap, 
    flatten: flatten, 
    flippedMap: flippedMap, 
    map2: map2, 
    map3: map3, 
    map4: map4, 
    map5: map5, 
    mergeMany: mergeMany, 
    squigglyApply: squigglyApply, 
    squigglyMap: squigglyMap, 
    functorSignal: functorSignal, 
    applySignal: applySignal, 
    applicativeSignal: applicativeSignal, 
    semigroupSignal: semigroupSignal, 
    monoidSignal: monoidSignal, 
    constant: $foreign.constant, 
    dropRepeats: $foreign.dropRepeats, 
    "dropRepeats'": $foreign["dropRepeats'"], 
    filter: $foreign.filter, 
    flattenArray: $foreign.flattenArray, 
    foldp: $foreign.foldp, 
    merge: $foreign.merge, 
    runSignal: $foreign.runSignal, 
    sampleOn: $foreign.sampleOn, 
    unwrap: $foreign.unwrap
};

},{"../Control.Applicative":3,"../Control.Apply":5,"../Control.Monad.Eff":20,"../Control.Semigroupoid":35,"../Data.Foldable":63,"../Data.Function":73,"../Data.Functor":76,"../Data.Maybe":91,"../Data.Monoid":98,"../Data.Semigroup":114,"../Prelude":228,"./foreign":229}],231:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var TypeEquals = function (from, to) {
    this.from = from;
    this.to = to;
};
var to = function (dict) {
    return dict.to;
};
var refl = new TypeEquals(function (a) {
    return a;
}, function (a) {
    return a;
});
var from = function (dict) {
    return dict.from;
};
module.exports = {
    TypeEquals: TypeEquals, 
    from: from, 
    to: to, 
    refl: refl
};

},{}],232:[function(require,module,exports){
"use strict";

// module Unsafe.Coerce

exports.unsafeCoerce = function (x) {
  return x;
};

},{}],233:[function(require,module,exports){
// Generated by purs version 0.11.6
"use strict";
var $foreign = require("./foreign");
module.exports = {
    unsafeCoerce: $foreign.unsafeCoerce
};

},{"./foreign":232}],234:[function(require,module,exports){
require('Main').main();

},{"Main":141}]},{},[234]);
